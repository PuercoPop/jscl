// This file is prepended to the result of compile jscl.lisp, and
// contain runtime code that jscl assumes to exist.

var window = this;
var nil;

globalEval = eval;  // Just an indirect eval

function pv (x) { return x==undefined? nil: x; }

function mv(){
    var r = [].slice.call(arguments);
    r['multiple-value'] = true;
    return r;
}

function forcemv (x) {
    return typeof x == 'object' && 'multiple-value' in x? x: mv(x);
}

// NOTE: Define VALUES to be MV for toplevel forms. It is because
// `eval' compiles the forms and execute the Javascript code at
// toplevel with `js-eval', so it is necessary to return multiple
// values from the eval function.
var values = mv;

function checkArgsAtLeast(args, n){
    if (args < n) throw 'too few arguments';
}

function checkArgsAtMost(args, n){
    if (args > n) throw 'too many arguments';
}

function checkArgs(args, n){
    checkArgsAtLeast(args, n);
    checkArgsAtMost(args, n);
}

// Improper list constructor (like LIST*)
function QIList(){
    if (arguments.length == 1)
        return arguments[0];
    else {
        var i = arguments.length-1;
        var r = arguments[i--];
        for (; i>=0; i--){
            r = {car: arguments[i], cdr: r};
        }
        return r;
    }
}


// Create and return a lisp string for the Javascript string STRING.
function make_lisp_string (string){
    var array = string.split("");
    array.type = 'character'
    return array;
}

function xstring(x){ return x.join(''); }


function Symbol(name, package_name){
    this.name = name;
    if (package_name)
        this['package'] = package_name;
}

function lisp_to_js (x) {
    if (typeof x == 'object' && 'length' in x && x.type == 'character')
        return xstring(x);
    else if (typeof x == 'function'){
        // Trampoline calling the Lisp function
        return (function(){
            var args = Array.prototype.slice.call(arguments);
            for (var i in args)
                args[i] = js_to_lisp(args[i]);
            return lisp_to_js(x.apply(this, [pv, arguments.length].concat(args)));
        });
    }
    else return x;
}

function js_to_lisp (x) {
    if (typeof x == 'string')
        return make_lisp_string(x);
    else if (typeof x == 'function'){
        // Trampoline calling the JS function
        return (function(values, nargs){
            var args = Array.prototype.slice.call(arguments, 2);
            for (var i in args)
                args[i] = lisp_to_js(args[i]);
            return values(js_to_lisp(x.apply(this, args)));
        });
    } else return x;
}
var l1 = (new Symbol(make_lisp_string("DEFMACRO")));
l1;
var l2 = (new Symbol(make_lisp_string("DECLAIM")));
l2;
var l3 = (new Symbol(make_lisp_string("DEFCONSTANT")));
l3;
var l4 = (new Symbol(make_lisp_string("T")));
(function(){
    ((l4).value = l4);
    return l4;
})();
var l5 = (new Symbol(make_lisp_string("NIL")));
(function(){
    ((l5).value = l5);
    return l5;
})();
(nil = lisp_to_js(l5.value));
var l6 = (new Symbol(make_lisp_string("LAMBDA")));
l6;
var l7 = (new Symbol(make_lisp_string("WHEN")));
l7;
var l8 = (new Symbol(make_lisp_string("UNLESS")));
l8;
var l9 = (new Symbol(make_lisp_string("DEFVAR")));
l9;
var l10 = (new Symbol(make_lisp_string("DEFPARAMETER")));
l10;
var l11 = (new Symbol(make_lisp_string("DEFUN")));
l11;
var l12 = (new Symbol(make_lisp_string("RETURN")));
l12;
var l13 = (new Symbol(make_lisp_string("WHILE")));
l13;
var l14 = (new Symbol(make_lisp_string("*GENSYM-COUNTER*")));
(function(){
    (((l14.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l14).value = 0));
    return l14;
})();
var l15 = (new Symbol(make_lisp_string("GENSYM")));
var l16 = make_lisp_string("G");
var l17 = (new Symbol(make_lisp_string("INTEGER-TO-STRING")));
(function(){
    (l15).fvalue = (function(){
        var func = (function (values,nargs,v1){
            checkArgsAtMost(nargs, 1);
            switch(nargs){
            case 0:
                v1=l16;
            default: break;
            }
            return (function(){
                ((l14).value = (function(){
                    var x1 = (function(){
                        var symbol = l14;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })();
                    if (typeof x1 !== 'number') throw 'Not a number!';
                    return x1+1;
                })());
                return (new Symbol((function(){
                    var r = v1.concat(l17.fvalue(pv, 1, (function(){
                        var symbol = l14;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })()));
                    r.type = 'character';return r;
                })()));
            })();
        });
        func.fname = 'GENSYM';
        return func;
    })();
    return l15;
})();
var l18 = (new Symbol(make_lisp_string("BOUNDP")));
(function(){
    (l18).fvalue = (function(){
        var func = (function (values,nargs,v3){
            checkArgs(nargs, 1);
            return (function(){
                return ((v3.value !== undefined)?l4.value: l5.value);
            })();
        });
        func.fname = 'BOUNDP';
        return func;
    })();
    return l18;
})();
var l19 = (new Symbol(make_lisp_string("FBOUNDP")));
(function(){
    (l19).fvalue = (function(){
        var func = (function (values,nargs,v5){
            checkArgs(nargs, 1);
            return (function(){
                return ((v5.fvalue !== undefined)?l4.value: l5.value);
            })();
        });
        func.fname = 'FBOUNDP';
        return func;
    })();
    return l19;
})();
var l20 = (new Symbol(make_lisp_string("=")));
(function(){
    (l20).fvalue = (function(){
        var func = (function (values,nargs,v7,v8){
            checkArgs(nargs, 2);
            return (function(){
                return (function(){
                    var x1 = v7;
                    if (typeof x1 !== 'number') throw 'Not a number!';
                    var x2 = v8;
                    if (typeof x2 !== 'number') throw 'Not a number!';
                    return (x1==x2?l4.value: l5.value);
                })();
            })();
        });
        func.fname = '=';
        return func;
    })();
    return l20;
})();
var l21 = (new Symbol(make_lisp_string("*")));
(function(){
    (l21).fvalue = (function(){
        var func = (function (values,nargs,v10,v11){
            checkArgs(nargs, 2);
            return (function(){
                return (function(){
                    var x1 = v10;
                    if (typeof x1 !== 'number') throw 'Not a number!';
                    var x2 = v11;
                    if (typeof x2 !== 'number') throw 'Not a number!';
                    return x1*x2;
                })();
            })();
        });
        func.fname = '*';
        return func;
    })();
    return l21;
})();
var l22 = (new Symbol(make_lisp_string("/")));
(function(){
    (l22).fvalue = (function(){
        var func = (function (values,nargs,v13,v14){
            checkArgs(nargs, 2);
            return (function(){
                return (function(){
                    var x1 = v13;
                    if (typeof x1 !== 'number') throw 'Not a number!';
                    var x2 = v14;
                    if (typeof x2 !== 'number') throw 'Not a number!';
                    return x1/x2;
                })();
            })();
        });
        func.fname = '/';
        return func;
    })();
    return l22;
})();
var l23 = (new Symbol(make_lisp_string("1+")));
(function(){
    (l23).fvalue = (function(){
        var func = (function (values,nargs,v16){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var x1 = v16;
                    if (typeof x1 !== 'number') throw 'Not a number!';
                    return x1+1;
                })();
            })();
        });
        func.fname = '1+';
        return func;
    })();
    return l23;
})();
var l24 = (new Symbol(make_lisp_string("1-")));
(function(){
    (l24).fvalue = (function(){
        var func = (function (values,nargs,v18){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var x1 = v18;
                    if (typeof x1 !== 'number') throw 'Not a number!';
                    return x1-1;
                })();
            })();
        });
        func.fname = '1-';
        return func;
    })();
    return l24;
})();
var l25 = (new Symbol(make_lisp_string("ZEROP")));
(function(){
    (l25).fvalue = (function(){
        var func = (function (values,nargs,v20){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var x1 = v20;
                    if (typeof x1 !== 'number') throw 'Not a number!';
                    return (x1==0?l4.value: l5.value);
                })();
            })();
        });
        func.fname = 'ZEROP';
        return func;
    })();
    return l25;
})();
var l26 = (new Symbol(make_lisp_string("TRUNCATE")));
(function(){
    (l26).fvalue = (function(){
        var func = (function (values,nargs,v22,v23){
            checkArgsAtLeast(nargs, 1);
            checkArgsAtMost(nargs, 2);
            switch(nargs){
            case 1:
                v23=1;
            default: break;
            }
            return (function(){
                return (function(){
                    var x = (function(){
                        var x1 = v22;
                        if (typeof x1 !== 'number') throw 'Not a number!';
                        var x2 = v23;
                        if (typeof x2 !== 'number') throw 'Not a number!';
                        return x1/x2;
                    })();
                    if (typeof x != 'number')
                        throw 'The value ' + x + ' is not a type number.';
                    return Math.floor(x);
                })();
            })();
        });
        func.fname = 'TRUNCATE';
        return func;
    })();
    return l26;
})();
var l27 = (new Symbol(make_lisp_string("EQL")));
(function(){
    (l27).fvalue = (function(){
        var func = (function (values,nargs,v25,v26){
            checkArgs(nargs, 2);
            return (function(){
                return ((v25 === v26)?l4.value: l5.value);
            })();
        });
        func.fname = 'EQL';
        return func;
    })();
    return l27;
})();
var l28 = (new Symbol(make_lisp_string("NOT")));
(function(){
    (l28).fvalue = (function(){
        var func = (function (values,nargs,v28){
            checkArgs(nargs, 1);
            return (function(){
                return (v28 !== l5.value ? l5.value : l4.value);
            })();
        });
        func.fname = 'NOT';
        return func;
    })();
    return l28;
})();
var l29 = (new Symbol(make_lisp_string("INCF")));
l29;
var l30 = (new Symbol(make_lisp_string("DECF")));
l30;
var l31 = (new Symbol(make_lisp_string("PUSH")));
l31;
var l32 = (new Symbol(make_lisp_string("DOLIST")));
l32;
var l33 = (new Symbol(make_lisp_string("DOTIMES")));
l33;
var l34 = (new Symbol(make_lisp_string("COND")));
l34;
var l35 = (new Symbol(make_lisp_string("CASE")));
l35;
var l36 = (new Symbol(make_lisp_string("ECASE")));
l36;
var l37 = (new Symbol(make_lisp_string("AND")));
l37;
var l38 = (new Symbol(make_lisp_string("OR")));
l38;
var l39 = (new Symbol(make_lisp_string("PROG1")));
l39;
var l40 = (new Symbol(make_lisp_string("PROG2")));
l40;
var l41 = (new Symbol(make_lisp_string("PROG")));
l41;
var l42 = (new Symbol(make_lisp_string("+")));
(function(){
    (l42).fvalue = (function(){
        var func = (function (values,nargs){
            var v30= l5.value;
            for (var i = nargs-1; i>=0; i--)
                v30 = {car: arguments[i+2], cdr: v30};
            return (function(){
                return (function(v32){
                    return (function(){
                        return (function(v34,v35){
                            (function(){
                                while(v34 !== l5.value){
                                    (v35 = (function(){
                                        var tmp = v34;
                                        return tmp === l5.value? l5.value: tmp.car;
                                    })());
                                    (function(){
                                        (function(){
                                            var v36 = v35;
                                            var v37 = (function(){
                                                var x1 = v32;
                                                if (typeof x1 !== 'number') throw 'Not a number!';
                                                var x2 = v36;
                                                if (typeof x2 !== 'number') throw 'Not a number!';
                                                return x1+x2;
                                            })();
                                            return (v32 = v37);
                                        })();
                                        return l5.value;
                                    })();
                                    (v34 = (function(){
                                        var tmp = v34;
                                        return tmp === l5.value? l5.value: tmp.cdr;
                                    })());
                                }return l5.value;
                            })();
                            return v32;
                        })(v30,l5.value);
                    })();
                })(0);
            })();
        });
        func.fname = '+';
        return func;
    })();
    return l42;
})();
var l43 = (new Symbol(make_lisp_string("-")));
var l44 = (new Symbol(make_lisp_string("NULL")));
(function(){
    (l43).fvalue = (function(){
        var func = (function (values,nargs,v39){
            checkArgsAtLeast(nargs, 1);
            var v38= l5.value;
            for (var i = nargs-1; i>=1; i--)
                v38 = {car: arguments[i+2], cdr: v38};
            return (function(){
                return (l44.fvalue(pv, 1, v38) !== l5.value ? (function(){
                    var x1 = v39;
                    if (typeof x1 !== 'number') throw 'Not a number!';
                    return -x1;
                })() : (function(v41){
                    return (function(){
                        return (function(v43,v44){
                            (function(){
                                while(v43 !== l5.value){
                                    (v44 = (function(){
                                        var tmp = v43;
                                        return tmp === l5.value? l5.value: tmp.car;
                                    })());
                                    (function(){
                                        (function(){
                                            var v45 = v44;
                                            var v46 = (function(){
                                                var x1 = v41;
                                                if (typeof x1 !== 'number') throw 'Not a number!';
                                                var x2 = v45;
                                                if (typeof x2 !== 'number') throw 'Not a number!';
                                                return x1-x2;
                                            })();
                                            return (v41 = v46);
                                        })();
                                        return l5.value;
                                    })();
                                    (v43 = (function(){
                                        var tmp = v43;
                                        return tmp === l5.value? l5.value: tmp.cdr;
                                    })());
                                }return l5.value;
                            })();
                            return v41;
                        })(v38,l5.value);
                    })();
                })(v39));
            })();
        });
        func.fname = '-';
        return func;
    })();
    return l43;
})();
var l45 = (new Symbol(make_lisp_string("APPEND-TWO")));
var l46 = (new Symbol(make_lisp_string("APPEND")));
(function(){
    (l45).fvalue = (function(){
        var func = (function (values,nargs,v47,v48){
            checkArgs(nargs, 2);
            return (function(){
                return (l44.fvalue(pv, 1, v47) !== l5.value ? v48 : ({car: (function(){
                    var tmp = v47;
                    return tmp === l5.value? l5.value: tmp.car;
                })(), cdr: l46.fvalue(pv, 2, (function(){
                    var tmp = v47;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })(), v48)}));
            })();
        });
        func.fname = 'APPEND-TWO';
        return func;
    })();
    return l45;
})();
var l47 = (new Symbol(make_lisp_string("!REDUCE")));
(function(){
    (l46).fvalue = (function(){
        var func = (function (values,nargs){
            var v50= l5.value;
            for (var i = nargs-1; i>=0; i--)
                v50 = {car: arguments[i+2], cdr: v50};
            return (function(){
                return l47.fvalue(values, 3, (function(){
                    var symbol = l45;
                    var func = symbol.fvalue;
                    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                    return func;
                })(), v50, l5.value);
            })();
        });
        func.fname = 'APPEND';
        return func;
    })();
    return l46;
})();
var l48 = (new Symbol(make_lisp_string("REVAPPEND")));
(function(){
    (l48).fvalue = (function(){
        var func = (function (values,nargs,v52,v53){
            checkArgs(nargs, 2);
            return (function(){
                (function(){
                    return (function(){
                        while(v52 !== l5.value){
                            (function(){
                                var v56 = (function(){
                                    var tmp = v52;
                                    return tmp === l5.value? l5.value: tmp.car;
                                })();
                                var v57 = ({car: v56, cdr: v53});
                                return (v53 = v57);
                            })();
                            (v52 = (function(){
                                var tmp = v52;
                                return tmp === l5.value? l5.value: tmp.cdr;
                            })());
                        }return l5.value;
                    })();
                })();
                return v53;
            })();
        });
        func.fname = 'REVAPPEND';
        return func;
    })();
    return l48;
})();
var l49 = (new Symbol(make_lisp_string("REVERSE")));
(function(){
    (l49).fvalue = (function(){
        var func = (function (values,nargs,v58){
            checkArgs(nargs, 1);
            return (function(){
                return l48.fvalue(values, 2, v58, l5);
            })();
        });
        func.fname = 'REVERSE';
        return func;
    })();
    return l49;
})();
var l50 = (new Symbol(make_lisp_string("PSETQ")));
l50;
var l51 = (new Symbol(make_lisp_string("DO")));
l51;
var l52 = (new Symbol(make_lisp_string("DO*")));
l52;
var l53 = (new Symbol(make_lisp_string("LIST-LENGTH")));
(function(){
    (l53).fvalue = (function(){
        var func = (function (values,nargs,v60){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v62){
                    (function(){
                        return (function(){
                            while(l28.fvalue(pv, 1, l44.fvalue(pv, 1, v60)) !== l5.value){
                                (function(){
                                    var v64 = 1;
                                    var v65 = (function(){
                                        var x1 = v62;
                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                        var x2 = v64;
                                        if (typeof x2 !== 'number') throw 'Not a number!';
                                        return x1+x2;
                                    })();
                                    return (v62 = v65);
                                })();
                                (v60 = (function(){
                                    var tmp = v60;
                                    return tmp === l5.value? l5.value: tmp.cdr;
                                })());
                            }return l5.value;
                        })();
                    })();
                    return v62;
                })(0);
            })();
        });
        func.fname = 'LIST-LENGTH';
        return func;
    })();
    return l53;
})();
var l54 = (new Symbol(make_lisp_string("LENGTH")));
var l55 = make_lisp_string("length");
var l56 = (new Symbol(make_lisp_string("LISTP")));
(function(){
    (l54).fvalue = (function(){
        var func = (function (values,nargs,v66){
            checkArgs(nargs, 1);
            return (function(){
                return (((function(){
                    var x = v66;
                    return typeof(x) == 'object' && 'length' in x && x.type == 'character';
                })()?l4.value: l5.value) !== l5.value ? v66.length : (((function(){
                    var x = v66;
                    return typeof x === 'object' && 'length' in x;
                })()?l4.value: l5.value) !== l5.value ? (function(){
                    var tmp = (v66)[xstring(l55)];
                    return tmp == undefined? l5.value: tmp ;
                })() : (l56.fvalue(pv, 1, v66) !== l5.value ? l53.fvalue(values, 1, v66) : l5.value)));
            })();
        });
        func.fname = 'LENGTH';
        return func;
    })();
    return l54;
})();
var l57 = (new Symbol(make_lisp_string("CONCAT-TWO")));
(function(){
    (l57).fvalue = (function(){
        var func = (function (values,nargs,v68,v69){
            checkArgs(nargs, 2);
            return (function(){
                return (function(){
                    var r = v68.concat(v69);
                    r.type = 'character';return r;
                })();
            })();
        });
        func.fname = 'CONCAT-TWO';
        return func;
    })();
    return l57;
})();
var l58 = (new Symbol(make_lisp_string("WITH-COLLECT")));
l58;
var l59 = (new Symbol(make_lisp_string("LOOP")));
l59;
var l60 = (new Symbol(make_lisp_string("IDENTITY")));
(function(){
    (l60).fvalue = (function(){
        var func = (function (values,nargs,v71){
            checkArgs(nargs, 1);
            return (function(){
                return v71;
            })();
        });
        func.fname = 'IDENTITY';
        return func;
    })();
    return l60;
})();
var l61 = (new Symbol(make_lisp_string("CONSTANTLY")));
(function(){
    (l61).fvalue = (function(){
        var func = (function (values,nargs,v73){
            checkArgs(nargs, 1);
            return (function(){
                return (function (values,nargs){
                    var v75= l5.value;
                    for (var i = nargs-1; i>=0; i--)
                        v75 = {car: arguments[i+2], cdr: v75};
                    return v73;
                });
            })();
        });
        func.fname = 'CONSTANTLY';
        return func;
    })();
    return l61;
})();
var l62 = (new Symbol(make_lisp_string("CODE-CHAR")));
(function(){
    (l62).fvalue = (function(){
        var func = (function (values,nargs,v76){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var x = v76;
                    if (typeof x != 'number')
                        throw 'The value ' + x + ' is not a type number.';
                    return String.fromCharCode(x);
                })();
            })();
        });
        func.fname = 'CODE-CHAR';
        return func;
    })();
    return l62;
})();
var l63 = (new Symbol(make_lisp_string("CHAR-CODE")));
(function(){
    (l63).fvalue = (function(){
        var func = (function (values,nargs,v78){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var x = v78;
                    if (typeof x != 'string')
                        throw 'The value ' + x + ' is not a type string.';
                    return x.charCodeAt(0);
                })();
            })();
        });
        func.fname = 'CHAR-CODE';
        return func;
    })();
    return l63;
})();
var l64 = (new Symbol(make_lisp_string("CHAR=")));
(function(){
    (l64).fvalue = (function(){
        var func = (function (values,nargs,v80,v81){
            checkArgs(nargs, 2);
            return (function(){
                return l27.fvalue(values, 2, v80, v81);
            })();
        });
        func.fname = 'CHAR=';
        return func;
    })();
    return l64;
})();
var l65 = (new Symbol(make_lisp_string("INTEGERP")));
(function(){
    (l65).fvalue = (function(){
        var func = (function (values,nargs,v83){
            checkArgs(nargs, 1);
            return (function(){
                return (((typeof (v83) == "number")?l4.value: l5.value) !== l5.value ? (function(){
                    var x1 = (function(){
                        var x = v83;
                        if (typeof x != 'number')
                            throw 'The value ' + x + ' is not a type number.';
                        return Math.floor(x);
                    })();
                    if (typeof x1 !== 'number') throw 'Not a number!';
                    var x2 = v83;
                    if (typeof x2 !== 'number') throw 'Not a number!';
                    return (x1==x2?l4.value: l5.value);
                })() : l5.value);
            })();
        });
        func.fname = 'INTEGERP';
        return func;
    })();
    return l65;
})();
var l66 = (new Symbol(make_lisp_string("FLOATP")));
(function(){
    (l66).fvalue = (function(){
        var func = (function (values,nargs,v85){
            checkArgs(nargs, 1);
            return (function(){
                return (((typeof (v85) == "number")?l4.value: l5.value) !== l5.value ? l28.fvalue(values, 1, l65.fvalue(pv, 1, v85)) : l5.value);
            })();
        });
        func.fname = 'FLOATP';
        return func;
    })();
    return l66;
})();
var l67 = (new Symbol(make_lisp_string("PLUSP")));
(function(){
    (l67).fvalue = (function(){
        var func = (function (values,nargs,v87){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var x1 = v87;
                    if (typeof x1 !== 'number') throw 'Not a number!';
                    return (0<x1?l4.value: l5.value);
                })();
            })();
        });
        func.fname = 'PLUSP';
        return func;
    })();
    return l67;
})();
var l68 = (new Symbol(make_lisp_string("MINUSP")));
(function(){
    (l68).fvalue = (function(){
        var func = (function (values,nargs,v89){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var x1 = v89;
                    if (typeof x1 !== 'number') throw 'Not a number!';
                    return (x1<0?l4.value: l5.value);
                })();
            })();
        });
        func.fname = 'MINUSP';
        return func;
    })();
    return l68;
})();
var l69 = (new Symbol(make_lisp_string("ATOM")));
(function(){
    (l69).fvalue = (function(){
        var func = (function (values,nargs,v91){
            checkArgs(nargs, 1);
            return (function(){
                return l28.fvalue(values, 1, ((function(){
                    var tmp = v91;
                    return (typeof tmp == 'object' && 'car' in tmp);
                })()?l4.value: l5.value));
            })();
        });
        func.fname = 'ATOM';
        return func;
    })();
    return l69;
})();
var l70 = (new Symbol(make_lisp_string("ALPHA-CHAR-P")));
(function(){
    (l70).fvalue = (function(){
        var func = (function (values,nargs,v93){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v95){
                    return (v95 !== l5.value ? v95 : (function(){
                        var x1 = (function(){
                            var x = "A";
                            if (typeof x != 'string')
                                throw 'The value ' + x + ' is not a type string.';
                            return x.charCodeAt(0);
                        })();
                        if (typeof x1 !== 'number') throw 'Not a number!';
                        var x2 = (function(){
                            var x = v93;
                            if (typeof x != 'string')
                                throw 'The value ' + x + ' is not a type string.';
                            return x.charCodeAt(0);
                        })();
                        if (typeof x2 !== 'number') throw 'Not a number!';
                        var x3 = (function(){
                            var x = "Z";
                            if (typeof x != 'string')
                                throw 'The value ' + x + ' is not a type string.';
                            return x.charCodeAt(0);
                        })();
                        if (typeof x3 !== 'number') throw 'Not a number!';
                        return (x1<=x2 && x2<=x3?l4.value: l5.value);
                    })());
                })((function(){
                    var x1 = (function(){
                        var x = "a";
                        if (typeof x != 'string')
                            throw 'The value ' + x + ' is not a type string.';
                        return x.charCodeAt(0);
                    })();
                    if (typeof x1 !== 'number') throw 'Not a number!';
                    var x2 = (function(){
                        var x = v93;
                        if (typeof x != 'string')
                            throw 'The value ' + x + ' is not a type string.';
                        return x.charCodeAt(0);
                    })();
                    if (typeof x2 !== 'number') throw 'Not a number!';
                    var x3 = (function(){
                        var x = "z";
                        if (typeof x != 'string')
                            throw 'The value ' + x + ' is not a type string.';
                        return x.charCodeAt(0);
                    })();
                    if (typeof x3 !== 'number') throw 'Not a number!';
                    return (x1<=x2 && x2<=x3?l4.value: l5.value);
                })());
            })();
        });
        func.fname = 'ALPHA-CHAR-P';
        return func;
    })();
    return l70;
})();
var l71 = (new Symbol(make_lisp_string("DIGIT-CHAR-P")));
(function(){
    (l71).fvalue = (function(){
        var func = (function (values,nargs,v96){
            checkArgs(nargs, 1);
            return (function(){
                return ((function(){
                    var x1 = (function(){
                        var x = "0";
                        if (typeof x != 'string')
                            throw 'The value ' + x + ' is not a type string.';
                        return x.charCodeAt(0);
                    })();
                    if (typeof x1 !== 'number') throw 'Not a number!';
                    var x2 = (function(){
                        var x = v96;
                        if (typeof x != 'string')
                            throw 'The value ' + x + ' is not a type string.';
                        return x.charCodeAt(0);
                    })();
                    if (typeof x2 !== 'number') throw 'Not a number!';
                    var x3 = (function(){
                        var x = "9";
                        if (typeof x != 'string')
                            throw 'The value ' + x + ' is not a type string.';
                        return x.charCodeAt(0);
                    })();
                    if (typeof x3 !== 'number') throw 'Not a number!';
                    return (x1<=x2 && x2<=x3?l4.value: l5.value);
                })() !== l5.value ? (function(){
                    var x1 = (function(){
                        var x = v96;
                        if (typeof x != 'string')
                            throw 'The value ' + x + ' is not a type string.';
                        return x.charCodeAt(0);
                    })();
                    if (typeof x1 !== 'number') throw 'Not a number!';
                    var x2 = (function(){
                        var x = "0";
                        if (typeof x != 'string')
                            throw 'The value ' + x + ' is not a type string.';
                        return x.charCodeAt(0);
                    })();
                    if (typeof x2 !== 'number') throw 'Not a number!';
                    return x1-x2;
                })() : l5.value);
            })();
        });
        func.fname = 'DIGIT-CHAR-P';
        return func;
    })();
    return l71;
})();
var l72 = (new Symbol(make_lisp_string("DIGIT-CHAR")));
var l73 = make_lisp_string("0123456789");
(function(){
    (l72).fvalue = (function(){
        var func = (function (values,nargs,v98){
            checkArgs(nargs, 1);
            return (function(){
                return ((function(){
                    var x1 = v98;
                    if (typeof x1 !== 'number') throw 'Not a number!';
                    return (0<=x1 && x1<=9?l4.value: l5.value);
                })() !== l5.value ? l73[v98] : l5.value);
            })();
        });
        func.fname = 'DIGIT-CHAR';
        return func;
    })();
    return l72;
})();
var l74 = (new Symbol(make_lisp_string("EQUAL")));
var l75 = (new Symbol(make_lisp_string("STRING=")));
(function(){
    (l74).fvalue = (function(){
        var func = (function (values,nargs,v100,v101){
            checkArgs(nargs, 2);
            return (function(){
                return (l27.fvalue(pv, 2, v100, v101) !== l5.value ? l4.value : (((function(){
                    var tmp = v100;
                    return (typeof tmp == 'object' && 'car' in tmp);
                })()?l4.value: l5.value) !== l5.value ? (((function(){
                    var tmp = v101;
                    return (typeof tmp == 'object' && 'car' in tmp);
                })()?l4.value: l5.value) !== l5.value ? (l74.fvalue(pv, 2, (function(){
                    var tmp = v100;
                    return tmp === l5.value? l5.value: tmp.car;
                })(), (function(){
                    var tmp = v101;
                    return tmp === l5.value? l5.value: tmp.car;
                })()) !== l5.value ? l74.fvalue(values, 2, (function(){
                    var tmp = v100;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })(), (function(){
                    var tmp = v101;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })()) : l5.value) : l5.value) : (((function(){
                    var x = v100;
                    return typeof(x) == 'object' && 'length' in x && x.type == 'character';
                })()?l4.value: l5.value) !== l5.value ? (((function(){
                    var x = v101;
                    return typeof(x) == 'object' && 'length' in x && x.type == 'character';
                })()?l4.value: l5.value) !== l5.value ? l75.fvalue(values, 2, v100, v101) : l5.value) : l5.value)));
            })();
        });
        func.fname = 'EQUAL';
        return func;
    })();
    return l74;
})();
var l76 = (new Symbol(make_lisp_string("FDEFINITION")));
var l77 = make_lisp_string("Invalid function `~S'.");
var l78 = (new Symbol(make_lisp_string("ERROR")));
(function(){
    (l76).fvalue = (function(){
        var func = (function (values,nargs,v103){
            checkArgs(nargs, 1);
            return (function(){
                return (((typeof v103 == 'function')?l4.value: l5.value) !== l5.value ? v103 : (((v103 instanceof Symbol)?l4.value: l5.value) !== l5.value ? (function(){
                    var symbol = v103;
                    var func = symbol.fvalue;
                    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                    return func;
                })() : l78.fvalue(values, 2, l77, v103)));
            })();
        });
        func.fname = 'FDEFINITION';
        return func;
    })();
    return l76;
})();
var l79 = (new Symbol(make_lisp_string("DISASSEMBLE")));
var l80 = (new Symbol(make_lisp_string("WRITE-LINE")));
(function(){
    (l79).fvalue = (function(){
        var func = (function (values,nargs,v105){
            checkArgs(nargs, 1);
            return (function(){
                l80.fvalue(pv, 1, make_lisp_string((l76.fvalue(pv, 1, v105)).toString()));
                return l5.value;
            })();
        });
        func.fname = 'DISASSEMBLE';
        return func;
    })();
    return l79;
})();
var l81 = (new Symbol(make_lisp_string("DOCUMENTATION")));
var l82 = (new Symbol(make_lisp_string("FUNCTION")));
var l83 = make_lisp_string("docstring");
var l84 = (new Symbol(make_lisp_string("VARIABLE")));
var l85 = make_lisp_string("The type of documentation `~S' is not a symbol.");
var l86 = make_lisp_string("vardoc");
var l87 = make_lisp_string("ECASE expression failed for the object `~S'.");
(function(){
    (l81).fvalue = (function(){
        var func = (function (values,nargs,v107,v108){
            checkArgs(nargs, 2);
            return (function(){
                return (function(v110){
                    return (function(v111){
                        return (l27.fvalue(pv, 2, v111, l82) !== l5.value ? (function(){
                            l5.value;
                            return (function(v112){
                                return (function(){
                                    var tmp = (v112)[xstring(l83)];
                                    return tmp == undefined? l5.value: tmp ;
                                })();
                            })(l76.fvalue(pv, 1, v107));
                        })() : (l27.fvalue(pv, 2, v111, l84) !== l5.value ? (function(){
                            l5.value;
                            (((v107 instanceof Symbol)?l4.value: l5.value) !== l5.value ? l5.value : l78.fvalue(pv, 2, l85, v108));
                            return (function(){
                                var tmp = (v107)[xstring(l86)];
                                return tmp == undefined? l5.value: tmp ;
                            })();
                        })() : (function(){
                            l5.value;
                            return l78.fvalue(values, 2, l87, v110);
                        })()));
                    })(v110);
                })(v108);
            })();
        });
        func.fname = 'DOCUMENTATION';
        func.docstring = 'Return the documentation of X. TYPE must be the symbol VARIABLE or FUNCTION.';
        return func;
    })();
    return l81;
})();
var l88 = (new Symbol(make_lisp_string("MULTIPLE-VALUE-BIND")));
l88;
var l89 = (new Symbol(make_lisp_string("MULTIPLE-VALUE-LIST")));
l89;
var l90 = (new Symbol(make_lisp_string("*SETF-EXPANDERS*")));
(function(){
    (((l90.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l90).value = l5.value));
    return l90;
})();
var l91 = (new Symbol(make_lisp_string("GET-SETF-EXPANSION")));
var l92 = (new Symbol(make_lisp_string("LIST")));
var l93 = (new Symbol(make_lisp_string("SETQ")));
var l94 = (new Symbol(make_lisp_string("!MACROEXPAND-1")));
var l95 = (new Symbol(make_lisp_string("ASSOC")));
var l96 = make_lisp_string("Unknown generalized reference.");
(function(){
    (l91).fvalue = (function(){
        var func = (function (values,nargs,v113){
            checkArgs(nargs, 1);
            return (function(){
                return (((v113 instanceof Symbol)?l4.value: l5.value) !== l5.value ? (function(v115){
                    return values(l5.value, l5.value, l92.fvalue(pv, 1, v115), l92.fvalue(pv, 3, l93, v113, v115), v113);
                })(l15.fvalue(pv, 0)) : (function(v116){
                    return (function(){
                        var v117 = (function(){
                            var tmp = v116;
                            return tmp === l5.value? l5.value: tmp.car;
                        })();
                        var v118 = (function(){
                            var tmp = l95.fvalue(pv, 2, v117, (function(){
                                var symbol = l90;
                                var value = symbol.value;
                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                return value;
                            })());
                            return tmp === l5.value? l5.value: tmp.cdr;
                        })();
                        (l44.fvalue(pv, 1, v118) !== l5.value ? l78.fvalue(pv, 1, l96) : l5.value);
                        return (function(){
                            var f = v118;
                            var args = [values, 0];
                            var tail = ((function(){
                                var tmp = v116;
                                return tmp === l5.value? l5.value: tmp.cdr;
                            })());
                            while (tail != l5.value){
                                args.push(tail.car);
                                args[1] += 1;
                                tail = tail.cdr;
                            }
                            return (typeof f === 'function'? f : f.fvalue).apply(this, args);
                        })();
                    })();
                })(l94.fvalue(pv, 1, v113)));
            })();
        });
        func.fname = 'GET-SETF-EXPANSION';
        return func;
    })();
    return l91;
})();
var l97 = (new Symbol(make_lisp_string("DEFINE-SETF-EXPANDER")));
l97;
var l98 = (new Symbol(make_lisp_string("SETF")));
l98;
var l99 = (new Symbol(make_lisp_string("TYPECASE")));
l99;
var l100 = (new Symbol(make_lisp_string("ETYPECASE")));
l100;
var l101 = (new Symbol(make_lisp_string("NOTANY")));
var l102 = (new Symbol(make_lisp_string("SOME")));
(function(){
    (l101).fvalue = (function(){
        var func = (function (values,nargs,v119,v120){
            checkArgs(nargs, 2);
            return (function(){
                return l28.fvalue(values, 1, l102.fvalue(pv, 2, v119, v120));
            })();
        });
        func.fname = 'NOTANY';
        return func;
    })();
    return l101;
})();
var l103 = (new Symbol(make_lisp_string("INTERNAL-TIME-UNITS-PER-SECOND")));
(function(){
    ((l103).value = 1000);
    return l103;
})();
var l104 = (new Symbol(make_lisp_string("GET-INTERNAL-REAL-TIME")));
(function(){
    (l104).fvalue = (function(){
        var func = (function (values,nargs){
            checkArgsAtMost(nargs, 0);
            return (function(){
                return (new Date()).getTime();
            })();
        });
        func.fname = 'GET-INTERNAL-REAL-TIME';
        return func;
    })();
    return l104;
})();
var l105 = (new Symbol(make_lisp_string("GET-UNIX-TIME")));
(function(){
    (l105).fvalue = (function(){
        var func = (function (values,nargs){
            checkArgsAtMost(nargs, 0);
            return (function(){
                return l26.fvalue(values, 1, (function(){
                    var x1 = (new Date()).getTime();
                    if (typeof x1 !== 'number') throw 'Not a number!';
                    return x1/1000;
                })());
            })();
        });
        func.fname = 'GET-UNIX-TIME';
        return func;
    })();
    return l105;
})();
var l106 = (new Symbol(make_lisp_string("GET-UNIVERSAL-TIME")));
(function(){
    (l106).fvalue = (function(){
        var func = (function (values,nargs){
            checkArgsAtMost(nargs, 0);
            return (function(){
                return (function(){
                    var x1 = l105.fvalue(pv, 0);
                    if (typeof x1 !== 'number') throw 'Not a number!';
                    return x1+2208988800;
                })();
            })();
        });
        func.fname = 'GET-UNIVERSAL-TIME';
        return func;
    })();
    return l106;
})();
var l107 = (new Symbol(make_lisp_string("CONCAT")));
var l108 = make_lisp_string("");
(function(){
    (l107).fvalue = (function(){
        var func = (function (values,nargs){
            var v125= l5.value;
            for (var i = nargs-1; i>=0; i--)
                v125 = {car: arguments[i+2], cdr: v125};
            return (function(){
                return l47.fvalue(values, 3, (function(){
                    var symbol = l57;
                    var func = symbol.fvalue;
                    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                    return func;
                })(), v125, l108);
            })();
        });
        func.fname = 'CONCAT';
        return func;
    })();
    return l107;
})();
var l109 = (new Symbol(make_lisp_string("VALUES-LIST")));
var l110 = (new Symbol(make_lisp_string("LIST-TO-VECTOR")));
(function(){
    (l109).fvalue = (function(){
        var func = (function (values,nargs,v127){
            checkArgs(nargs, 1);
            return (function(){
                return values.apply(this, l110.fvalue(pv, 1, v127));
            })();
        });
        func.fname = 'VALUES-LIST';
        return func;
    })();
    return l109;
})();
var l111 = (new Symbol(make_lisp_string("VALUES")));
(function(){
    (l111).fvalue = (function(){
        var func = (function (values,nargs){
            var v129= l5.value;
            for (var i = nargs-1; i>=0; i--)
                v129 = {car: arguments[i+2], cdr: v129};
            return (function(){
                return l109.fvalue(values, 1, v129);
            })();
        });
        func.fname = 'VALUES';
        return func;
    })();
    return l111;
})();
var l112 = (new Symbol(make_lisp_string("FORMAT")));
(function(){
    (l78).fvalue = (function(){
        var func = (function (values,nargs,v132){
            checkArgsAtLeast(nargs, 1);
            var v131= l5.value;
            for (var i = nargs-1; i>=1; i--)
                v131 = {car: arguments[i+2], cdr: v131};
            return (function(){
                return (function(){
                    throw (function(){
                        var f = (function(){
                            var symbol = l112;
                            var func = symbol.fvalue;
                            if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                            return func;
                        })();
                        var args = [pv, 2, l5.value, v132];
                        var tail = (v131);
                        while (tail != l5.value){
                            args.push(tail.car);
                            args[1] += 1;
                            tail = tail.cdr;
                        }
                        return (typeof f === 'function'? f : f.fvalue).apply(this, args);
                    })();
                })();
            })();
        });
        func.fname = 'ERROR';
        return func;
    })();
    return l78;
})();
var l113 = (new Symbol(make_lisp_string("*NEWLINE*")));
var l114 = make_lisp_string("\n");
(function(){
    (((l113.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l113).value = l114));
    return l113;
})();
var l115 = (new Symbol(make_lisp_string("CONCATF")));
l115;
var l116 = (new Symbol(make_lisp_string("ENSURE-LIST")));
(function(){
    (l116).fvalue = (function(){
        var func = (function (values,nargs,v134){
            checkArgs(nargs, 1);
            return (function(){
                return (l56.fvalue(pv, 1, v134) !== l5.value ? v134 : l92.fvalue(values, 1, v134));
            })();
        });
        func.fname = 'ENSURE-LIST';
        return func;
    })();
    return l116;
})();
(function(){
    (l47).fvalue = (function(){
        var func = (function (values,nargs,v136,v137,v138){
            checkArgs(nargs, 3);
            return (function(){
                return (function(v140){
                    return (function(){
                        return (function(v142,v143){
                            (function(){
                                while(v142 !== l5.value){
                                    (v143 = (function(){
                                        var tmp = v142;
                                        return tmp === l5.value? l5.value: tmp.car;
                                    })());
                                    (function(){
                                        (v140 = (function(){
                                            var f = v136;
                                            return (typeof f === 'function'? f: f.fvalue)(pv, 2, v140, v143)
                                        })());
                                        return l5.value;
                                    })();
                                    (v142 = (function(){
                                        var tmp = v142;
                                        return tmp === l5.value? l5.value: tmp.cdr;
                                    })());
                                }return l5.value;
                            })();
                            return v140;
                        })(v137,l5.value);
                    })();
                })(v138);
            })();
        });
        func.fname = '!REDUCE';
        return func;
    })();
    return l47;
})();
var l117 = (new Symbol(make_lisp_string("JOIN")));
(function(){
    (l117).fvalue = (function(){
        var func = (function (values,nargs,v144,v145){
            checkArgsAtLeast(nargs, 1);
            checkArgsAtMost(nargs, 2);
            switch(nargs){
            case 1:
                v145=l108;
            default: break;
            }
            return (function(){
                return (l44.fvalue(pv, 1, v144) !== l5.value ? l108 : l47.fvalue(values, 3, (function (values,nargs,v147,v148){
                    checkArgs(nargs, 2);
                    return l107.fvalue(values, 3, v147, v145, v148);
                }), (function(){
                    var tmp = v144;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })(), (function(){
                    var tmp = v144;
                    return tmp === l5.value? l5.value: tmp.car;
                })()));
            })();
        });
        func.fname = 'JOIN';
        return func;
    })();
    return l117;
})();
var l118 = (new Symbol(make_lisp_string("JOIN-TRAILING")));
(function(){
    (l118).fvalue = (function(){
        var func = (function (values,nargs,v149,v150){
            checkArgsAtLeast(nargs, 1);
            checkArgsAtMost(nargs, 2);
            switch(nargs){
            case 1:
                v150=l108;
            default: break;
            }
            return (function(){
                return (l44.fvalue(pv, 1, v149) !== l5.value ? l108 : l107.fvalue(values, 3, (function(){
                    var tmp = v149;
                    return tmp === l5.value? l5.value: tmp.car;
                })(), v150, l118.fvalue(pv, 2, (function(){
                    var tmp = v149;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })(), v150)));
            })();
        });
        func.fname = 'JOIN-TRAILING';
        return func;
    })();
    return l118;
})();
var l119 = (new Symbol(make_lisp_string("MAPCONCAT")));
var l120 = (new Symbol(make_lisp_string("MAPCAR")));
(function(){
    (l119).fvalue = (function(){
        var func = (function (values,nargs,v152,v153){
            checkArgs(nargs, 2);
            return (function(){
                return l117.fvalue(values, 1, l120.fvalue(pv, 2, v152, v153));
            })();
        });
        func.fname = 'MAPCONCAT';
        return func;
    })();
    return l119;
})();
var l121 = (new Symbol(make_lisp_string("VECTOR-TO-LIST")));
(function(){
    (l121).fvalue = (function(){
        var func = (function (values,nargs,v155){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v157,v158){
                    return (function(){
                        return (function(v160,v161){
                            (function(){
                                while((function(){
                                    var x1 = v160;
                                    if (typeof x1 !== 'number') throw 'Not a number!';
                                    var x2 = v161;
                                    if (typeof x2 !== 'number') throw 'Not a number!';
                                    return (x1<x2?l4.value: l5.value);
                                })() !== l5.value){
                                    (function(){
                                        (function(){
                                            var v162 = (function(){
                                                var x = (v155)[v160];
                                                if (x === undefined) throw 'Out of range';
                                                return x;
                                            })();
                                            var v163 = ({car: v162, cdr: v157});
                                            return (v157 = v163);
                                        })();
                                        return l5.value;
                                    })();
                                    (function(){
                                        var v164 = 1;
                                        var v165 = (function(){
                                            var x1 = v160;
                                            if (typeof x1 !== 'number') throw 'Not a number!';
                                            var x2 = v164;
                                            if (typeof x2 !== 'number') throw 'Not a number!';
                                            return x1+x2;
                                        })();
                                        return (v160 = v165);
                                    })();
                                }return l5.value;
                            })();
                            return l49.fvalue(values, 1, v157);
                        })(0,v158);
                    })();
                })(l5.value,l54.fvalue(pv, 1, v155));
            })();
        });
        func.fname = 'VECTOR-TO-LIST';
        return func;
    })();
    return l121;
})();
(function(){
    (l110).fvalue = (function(){
        var func = (function (values,nargs,v166){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v168,v169){
                    return (function(){
                        return (function(v171,v172){
                            (function(){
                                while(v171 !== l5.value){
                                    (v172 = (function(){
                                        var tmp = v171;
                                        return tmp === l5.value? l5.value: tmp.car;
                                    })());
                                    (function(){
                                        (function(){
                                            var x = v168;
                                            var i = v169;
                                            if (i < 0 || i >= x.length) throw 'Out of range';
                                            return x[i] = v172;
                                        })();
                                        (function(){
                                            var v173 = 1;
                                            var v174 = (function(){
                                                var x1 = v169;
                                                if (typeof x1 !== 'number') throw 'Not a number!';
                                                var x2 = v173;
                                                if (typeof x2 !== 'number') throw 'Not a number!';
                                                return x1+x2;
                                            })();
                                            return (v169 = v174);
                                        })();
                                        return l5.value;
                                    })();
                                    (v171 = (function(){
                                        var tmp = v171;
                                        return tmp === l5.value? l5.value: tmp.cdr;
                                    })());
                                }return l5.value;
                            })();
                            return v168;
                        })(v166,l5.value);
                    })();
                })((function(){
                    var r = [];
                    for (var i = 0; i < l54.fvalue(pv, 1, v166); i++)
                        r.push(l5.value);
                    return r;
                })(),0);
            })();
        });
        func.fname = 'LIST-TO-VECTOR';
        return func;
    })();
    return l110;
})();
var l122 = (new Symbol(make_lisp_string("AWHEN")));
l122;
var l123 = make_lisp_string("0");
var l124 = make_lisp_string("-");
var l125 = (new Symbol(make_lisp_string("STRING")));
(function(){
    (l17).fvalue = (function(){
        var func = (function (values,nargs,v175){
            checkArgs(nargs, 1);
            return (function(){
                return (l25.fvalue(pv, 1, v175) !== l5.value ? l123 : (l68.fvalue(pv, 1, v175) !== l5.value ? l107.fvalue(values, 2, l124, l17.fvalue(pv, 1, (function(){
                    var x1 = v175;
                    if (typeof x1 !== 'number') throw 'Not a number!';
                    return 0-x1;
                })())) : (function(v177){
                    (function(){
                        return (function(){
                            while(l28.fvalue(pv, 1, l25.fvalue(pv, 1, v175)) !== l5.value){
                                (function(){
                                    var v179 = (function(){
                                        var x = v175;
                                        var y = 10;
                                        if (typeof x != 'number')
                                            throw 'The value ' + x + ' is not a type number.';
                                        if (typeof y != 'number')
                                            throw 'The value ' + y + ' is not a type number.';
                                        return x%y;
                                    })();
                                    var v180 = ({car: v179, cdr: v177});
                                    return (v177 = v180);
                                })();
                                (v175 = l26.fvalue(pv, 2, v175, 10));
                            }return l5.value;
                        })();
                    })();
                    return l119.fvalue(values, 2, (function (values,nargs,v181){
                        checkArgs(nargs, 1);
                        return l125.fvalue(values, 1, l72.fvalue(pv, 1, v181));
                    }), v177);
                })(l5.value)));
            })();
        });
        func.fname = 'INTEGER-TO-STRING';
        return func;
    })();
    return l17;
})();
var l126 = (new Symbol(make_lisp_string("FLOAT-TO-STRING")));
(function(){
    (l126).fvalue = (function(){
        var func = (function (values,nargs,v182){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var x = v182;
                    if (typeof x != 'number')
                        throw 'The value ' + x + ' is not a type number.';
                    return make_lisp_string(x.toString());
                })();
            })();
        });
        func.fname = 'FLOAT-TO-STRING';
        return func;
    })();
    return l126;
})();
var l127 = (new Symbol(make_lisp_string("CONS")));
(function(){
    (l127).fvalue = (function(){
        var func = (function (values,nargs,v184,v185){
            checkArgs(nargs, 2);
            return (function(){
                return ({car: v184, cdr: v185});
            })();
        });
        func.fname = 'CONS';
        return func;
    })();
    return l127;
})();
var l128 = (new Symbol(make_lisp_string("CONSP")));
(function(){
    (l128).fvalue = (function(){
        var func = (function (values,nargs,v187){
            checkArgs(nargs, 1);
            return (function(){
                return ((function(){
                    var tmp = v187;
                    return (typeof tmp == 'object' && 'car' in tmp);
                })()?l4.value: l5.value);
            })();
        });
        func.fname = 'CONSP';
        return func;
    })();
    return l128;
})();
(function(){
    (l56).fvalue = (function(){
        var func = (function (values,nargs,v189){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v191){
                    return (v191 !== l5.value ? v191 : l44.fvalue(values, 1, v189));
                })(((function(){
                    var tmp = v189;
                    return (typeof tmp == 'object' && 'car' in tmp);
                })()?l4.value: l5.value));
            })();
        });
        func.fname = 'LISTP';
        return func;
    })();
    return l56;
})();
(function(){
    (l44).fvalue = (function(){
        var func = (function (values,nargs,v192){
            checkArgs(nargs, 1);
            return (function(){
                return ((v192 === l5.value)?l4.value: l5.value);
            })();
        });
        func.fname = 'NULL';
        return func;
    })();
    return l44;
})();
var l129 = (new Symbol(make_lisp_string("ENDP")));
var l130 = make_lisp_string("The value `~S' is not a type list.");
(function(){
    (l129).fvalue = (function(){
        var func = (function (values,nargs,v194){
            checkArgs(nargs, 1);
            return (function(){
                return (l44.fvalue(pv, 1, v194) !== l5.value ? l4.value : (((function(){
                    var tmp = v194;
                    return (typeof tmp == 'object' && 'car' in tmp);
                })()?l4.value: l5.value) !== l5.value ? l5.value : l78.fvalue(values, 2, l130, v194)));
            })();
        });
        func.fname = 'ENDP';
        return func;
    })();
    return l129;
})();
var l131 = (new Symbol(make_lisp_string("CAR")));
(function(){
    (l131).fvalue = (function(){
        var func = (function (values,nargs,v196){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var tmp = v196;
                    return tmp === l5.value? l5.value: tmp.car;
                })();
            })();
        });
        func.fname = 'CAR';
        func.docstring = 'Return the CAR part of a cons, or NIL if X is null.';
        return func;
    })();
    return l131;
})();
var l132 = (new Symbol(make_lisp_string("CDR")));
(function(){
    (l132).fvalue = (function(){
        var func = (function (values,nargs,v198){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var tmp = v198;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })();
            })();
        });
        func.fname = 'CDR';
        return func;
    })();
    return l132;
})();
var l133 = (new Symbol(make_lisp_string("FIRST")));
(function(){
    (l133).fvalue = (function(){
        var func = (function (values,nargs,v200){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var tmp = v200;
                    return tmp === l5.value? l5.value: tmp.car;
                })();
            })();
        });
        func.fname = 'FIRST';
        return func;
    })();
    return l133;
})();
var l134 = (new Symbol(make_lisp_string("SECOND")));
var l135 = (new Symbol(make_lisp_string("CADR")));
(function(){
    (l134).fvalue = (function(){
        var func = (function (values,nargs,v202){
            checkArgs(nargs, 1);
            return (function(){
                return l135.fvalue(values, 1, v202);
            })();
        });
        func.fname = 'SECOND';
        return func;
    })();
    return l134;
})();
var l136 = (new Symbol(make_lisp_string("THIRD")));
var l137 = (new Symbol(make_lisp_string("CADDR")));
(function(){
    (l136).fvalue = (function(){
        var func = (function (values,nargs,v204){
            checkArgs(nargs, 1);
            return (function(){
                return l137.fvalue(values, 1, v204);
            })();
        });
        func.fname = 'THIRD';
        return func;
    })();
    return l136;
})();
var l138 = (new Symbol(make_lisp_string("FOURTH")));
var l139 = (new Symbol(make_lisp_string("CADDDR")));
(function(){
    (l138).fvalue = (function(){
        var func = (function (values,nargs,v206){
            checkArgs(nargs, 1);
            return (function(){
                return l139.fvalue(values, 1, v206);
            })();
        });
        func.fname = 'FOURTH';
        return func;
    })();
    return l138;
})();
var l140 = (new Symbol(make_lisp_string("FIFTH")));
var l141 = (new Symbol(make_lisp_string("CDDDDR")));
(function(){
    (l140).fvalue = (function(){
        var func = (function (values,nargs,v208){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var tmp = l141.fvalue(pv, 1, v208);
                    return tmp === l5.value? l5.value: tmp.car;
                })();
            })();
        });
        func.fname = 'FIFTH';
        return func;
    })();
    return l140;
})();
var l142 = (new Symbol(make_lisp_string("SIXTH")));
(function(){
    (l142).fvalue = (function(){
        var func = (function (values,nargs,v210){
            checkArgs(nargs, 1);
            return (function(){
                return l135.fvalue(values, 1, l141.fvalue(pv, 1, v210));
            })();
        });
        func.fname = 'SIXTH';
        return func;
    })();
    return l142;
})();
var l143 = (new Symbol(make_lisp_string("SEVENTH")));
(function(){
    (l143).fvalue = (function(){
        var func = (function (values,nargs,v212){
            checkArgs(nargs, 1);
            return (function(){
                return l137.fvalue(values, 1, l141.fvalue(pv, 1, v212));
            })();
        });
        func.fname = 'SEVENTH';
        return func;
    })();
    return l143;
})();
var l144 = (new Symbol(make_lisp_string("EIGHTH")));
(function(){
    (l144).fvalue = (function(){
        var func = (function (values,nargs,v214){
            checkArgs(nargs, 1);
            return (function(){
                return l139.fvalue(values, 1, l141.fvalue(pv, 1, v214));
            })();
        });
        func.fname = 'EIGHTH';
        return func;
    })();
    return l144;
})();
var l145 = (new Symbol(make_lisp_string("NINTH")));
(function(){
    (l145).fvalue = (function(){
        var func = (function (values,nargs,v216){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var tmp = l141.fvalue(pv, 1, l141.fvalue(pv, 1, v216));
                    return tmp === l5.value? l5.value: tmp.car;
                })();
            })();
        });
        func.fname = 'NINTH';
        return func;
    })();
    return l145;
})();
var l146 = (new Symbol(make_lisp_string("TENTH")));
(function(){
    (l146).fvalue = (function(){
        var func = (function (values,nargs,v218){
            checkArgs(nargs, 1);
            return (function(){
                return l135.fvalue(values, 1, l141.fvalue(pv, 1, l141.fvalue(pv, 1, v218)));
            })();
        });
        func.fname = 'TENTH';
        return func;
    })();
    return l146;
})();
var l147 = (new Symbol(make_lisp_string("REST")));
(function(){
    (l147).fvalue = (function(){
        var func = (function (values,nargs,v220){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var tmp = v220;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })();
            })();
        });
        func.fname = 'REST';
        return func;
    })();
    return l147;
})();
(function(){
    (l92).fvalue = (function(){
        var func = (function (values,nargs){
            var v222= l5.value;
            for (var i = nargs-1; i>=0; i--)
                v222 = {car: arguments[i+2], cdr: v222};
            return (function(){
                return v222;
            })();
        });
        func.fname = 'LIST';
        return func;
    })();
    return l92;
})();
var l148 = (new Symbol(make_lisp_string("LIST*")));
var l149 = (new Symbol(make_lisp_string("CDDR")));
(function(){
    (l148).fvalue = (function(){
        var func = (function (values,nargs,v225){
            checkArgsAtLeast(nargs, 1);
            var v224= l5.value;
            for (var i = nargs-1; i>=1; i--)
                v224 = {car: arguments[i+2], cdr: v224};
            return (function(){
                return (l44.fvalue(pv, 1, v224) !== l5.value ? v225 : (l44.fvalue(pv, 1, (function(){
                    var tmp = v224;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })()) !== l5.value ? ({car: v225, cdr: (function(){
                    var tmp = v224;
                    return tmp === l5.value? l5.value: tmp.car;
                })()}) : (function(){
                    (function(){
                        return (function(v228){
                            return (function(){
                                try {
                                var v229 = [];
                                    return (function(){
                                        while(l4.value !== l5.value){
                                            (l44.fvalue(pv, 1, l149.fvalue(pv, 1, v228)) !== l5.value ? (function(){
                                                throw ({type: 'block', id: v229, values: (function(){
                                                    var x = v228;
                                                    if (typeof x != 'object')
                                                        throw 'The value ' + x + ' is not a type object.';
                                                    return (x.cdr = l135.fvalue(pv, 1, v228), x);
                                                })(), message: 'Return from unknown block NIL.'})
                                            })() : l5.value);
                                            l5.value;
                                            (function(v230){
                                                return (v228 = v230);
                                            })((function(){
                                                var tmp = v228;
                                                return tmp === l5.value? l5.value: tmp.cdr;
                                            })());
                                        }return l5.value;
                                    })();
                                }
                                catch (cf){
                                    if (cf.type == 'block' && cf.id == v229)
                                        return cf.values;
                                    else
                                        throw cf;
                                }
                            })();
                        })(v224);
                    })();
                    return ({car: v225, cdr: v224});
                })()));
            })();
        });
        func.fname = 'LIST*';
        return func;
    })();
    return l148;
})();
var l150 = (new Symbol(make_lisp_string("NTHCDR")));
(function(){
    (l150).fvalue = (function(){
        var func = (function (values,nargs,v231,v232){
            checkArgs(nargs, 2);
            return (function(){
                (function(){
                    return (function(){
                        while((l67.fvalue(pv, 1, v231) !== l5.value ? v232 : l5.value) !== l5.value){
                            (v231 = l24.fvalue(pv, 1, v231));
                            (v232 = (function(){
                                var tmp = v232;
                                return tmp === l5.value? l5.value: tmp.cdr;
                            })());
                        }return l5.value;
                    })();
                })();
                return v232;
            })();
        });
        func.fname = 'NTHCDR';
        return func;
    })();
    return l150;
})();
var l151 = (new Symbol(make_lisp_string("NTH")));
(function(){
    (l151).fvalue = (function(){
        var func = (function (values,nargs,v235,v236){
            checkArgs(nargs, 2);
            return (function(){
                return (function(){
                    var tmp = l150.fvalue(pv, 2, v235, v236);
                    return tmp === l5.value? l5.value: tmp.car;
                })();
            })();
        });
        func.fname = 'NTH';
        return func;
    })();
    return l151;
})();
var l152 = (new Symbol(make_lisp_string("CAAR")));
(function(){
    (l152).fvalue = (function(){
        var func = (function (values,nargs,v238){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var tmp = (function(){
                        var tmp = v238;
                        return tmp === l5.value? l5.value: tmp.car;
                    })();
                    return tmp === l5.value? l5.value: tmp.car;
                })();
            })();
        });
        func.fname = 'CAAR';
        return func;
    })();
    return l152;
})();
(function(){
    (l135).fvalue = (function(){
        var func = (function (values,nargs,v240){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var tmp = (function(){
                        var tmp = v240;
                        return tmp === l5.value? l5.value: tmp.cdr;
                    })();
                    return tmp === l5.value? l5.value: tmp.car;
                })();
            })();
        });
        func.fname = 'CADR';
        return func;
    })();
    return l135;
})();
var l153 = (new Symbol(make_lisp_string("CDAR")));
(function(){
    (l153).fvalue = (function(){
        var func = (function (values,nargs,v242){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var tmp = (function(){
                        var tmp = v242;
                        return tmp === l5.value? l5.value: tmp.car;
                    })();
                    return tmp === l5.value? l5.value: tmp.cdr;
                })();
            })();
        });
        func.fname = 'CDAR';
        return func;
    })();
    return l153;
})();
(function(){
    (l149).fvalue = (function(){
        var func = (function (values,nargs,v244){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var tmp = (function(){
                        var tmp = v244;
                        return tmp === l5.value? l5.value: tmp.cdr;
                    })();
                    return tmp === l5.value? l5.value: tmp.cdr;
                })();
            })();
        });
        func.fname = 'CDDR';
        return func;
    })();
    return l149;
})();
var l154 = (new Symbol(make_lisp_string("CAAAR")));
(function(){
    (l154).fvalue = (function(){
        var func = (function (values,nargs,v246){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var tmp = l152.fvalue(pv, 1, v246);
                    return tmp === l5.value? l5.value: tmp.car;
                })();
            })();
        });
        func.fname = 'CAAAR';
        return func;
    })();
    return l154;
})();
var l155 = (new Symbol(make_lisp_string("CAADR")));
(function(){
    (l155).fvalue = (function(){
        var func = (function (values,nargs,v248){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var tmp = l135.fvalue(pv, 1, v248);
                    return tmp === l5.value? l5.value: tmp.car;
                })();
            })();
        });
        func.fname = 'CAADR';
        return func;
    })();
    return l155;
})();
var l156 = (new Symbol(make_lisp_string("CADAR")));
(function(){
    (l156).fvalue = (function(){
        var func = (function (values,nargs,v250){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var tmp = l153.fvalue(pv, 1, v250);
                    return tmp === l5.value? l5.value: tmp.car;
                })();
            })();
        });
        func.fname = 'CADAR';
        return func;
    })();
    return l156;
})();
(function(){
    (l137).fvalue = (function(){
        var func = (function (values,nargs,v252){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var tmp = l149.fvalue(pv, 1, v252);
                    return tmp === l5.value? l5.value: tmp.car;
                })();
            })();
        });
        func.fname = 'CADDR';
        return func;
    })();
    return l137;
})();
var l157 = (new Symbol(make_lisp_string("CDAAR")));
(function(){
    (l157).fvalue = (function(){
        var func = (function (values,nargs,v254){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var tmp = l152.fvalue(pv, 1, v254);
                    return tmp === l5.value? l5.value: tmp.cdr;
                })();
            })();
        });
        func.fname = 'CDAAR';
        return func;
    })();
    return l157;
})();
var l158 = (new Symbol(make_lisp_string("CDADR")));
(function(){
    (l158).fvalue = (function(){
        var func = (function (values,nargs,v256){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var tmp = l135.fvalue(pv, 1, v256);
                    return tmp === l5.value? l5.value: tmp.cdr;
                })();
            })();
        });
        func.fname = 'CDADR';
        return func;
    })();
    return l158;
})();
var l159 = (new Symbol(make_lisp_string("CDDAR")));
(function(){
    (l159).fvalue = (function(){
        var func = (function (values,nargs,v258){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var tmp = l153.fvalue(pv, 1, v258);
                    return tmp === l5.value? l5.value: tmp.cdr;
                })();
            })();
        });
        func.fname = 'CDDAR';
        return func;
    })();
    return l159;
})();
var l160 = (new Symbol(make_lisp_string("CDDDR")));
(function(){
    (l160).fvalue = (function(){
        var func = (function (values,nargs,v260){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var tmp = l149.fvalue(pv, 1, v260);
                    return tmp === l5.value? l5.value: tmp.cdr;
                })();
            })();
        });
        func.fname = 'CDDDR';
        return func;
    })();
    return l160;
})();
var l161 = (new Symbol(make_lisp_string("CAAAAR")));
(function(){
    (l161).fvalue = (function(){
        var func = (function (values,nargs,v262){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var tmp = l154.fvalue(pv, 1, v262);
                    return tmp === l5.value? l5.value: tmp.car;
                })();
            })();
        });
        func.fname = 'CAAAAR';
        return func;
    })();
    return l161;
})();
var l162 = (new Symbol(make_lisp_string("CAAADR")));
(function(){
    (l162).fvalue = (function(){
        var func = (function (values,nargs,v264){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var tmp = l155.fvalue(pv, 1, v264);
                    return tmp === l5.value? l5.value: tmp.car;
                })();
            })();
        });
        func.fname = 'CAAADR';
        return func;
    })();
    return l162;
})();
var l163 = (new Symbol(make_lisp_string("CAADAR")));
(function(){
    (l163).fvalue = (function(){
        var func = (function (values,nargs,v266){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var tmp = l156.fvalue(pv, 1, v266);
                    return tmp === l5.value? l5.value: tmp.car;
                })();
            })();
        });
        func.fname = 'CAADAR';
        return func;
    })();
    return l163;
})();
var l164 = (new Symbol(make_lisp_string("CAADDR")));
(function(){
    (l164).fvalue = (function(){
        var func = (function (values,nargs,v268){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var tmp = l137.fvalue(pv, 1, v268);
                    return tmp === l5.value? l5.value: tmp.car;
                })();
            })();
        });
        func.fname = 'CAADDR';
        return func;
    })();
    return l164;
})();
var l165 = (new Symbol(make_lisp_string("CADAAR")));
(function(){
    (l165).fvalue = (function(){
        var func = (function (values,nargs,v270){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var tmp = l157.fvalue(pv, 1, v270);
                    return tmp === l5.value? l5.value: tmp.car;
                })();
            })();
        });
        func.fname = 'CADAAR';
        return func;
    })();
    return l165;
})();
var l166 = (new Symbol(make_lisp_string("CADADR")));
(function(){
    (l166).fvalue = (function(){
        var func = (function (values,nargs,v272){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var tmp = l158.fvalue(pv, 1, v272);
                    return tmp === l5.value? l5.value: tmp.car;
                })();
            })();
        });
        func.fname = 'CADADR';
        return func;
    })();
    return l166;
})();
var l167 = (new Symbol(make_lisp_string("CADDAR")));
(function(){
    (l167).fvalue = (function(){
        var func = (function (values,nargs,v274){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var tmp = l159.fvalue(pv, 1, v274);
                    return tmp === l5.value? l5.value: tmp.car;
                })();
            })();
        });
        func.fname = 'CADDAR';
        return func;
    })();
    return l167;
})();
(function(){
    (l139).fvalue = (function(){
        var func = (function (values,nargs,v276){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var tmp = l160.fvalue(pv, 1, v276);
                    return tmp === l5.value? l5.value: tmp.car;
                })();
            })();
        });
        func.fname = 'CADDDR';
        return func;
    })();
    return l139;
})();
var l168 = (new Symbol(make_lisp_string("CDAAAR")));
(function(){
    (l168).fvalue = (function(){
        var func = (function (values,nargs,v278){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var tmp = l154.fvalue(pv, 1, v278);
                    return tmp === l5.value? l5.value: tmp.cdr;
                })();
            })();
        });
        func.fname = 'CDAAAR';
        return func;
    })();
    return l168;
})();
var l169 = (new Symbol(make_lisp_string("CDAADR")));
(function(){
    (l169).fvalue = (function(){
        var func = (function (values,nargs,v280){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var tmp = l155.fvalue(pv, 1, v280);
                    return tmp === l5.value? l5.value: tmp.cdr;
                })();
            })();
        });
        func.fname = 'CDAADR';
        return func;
    })();
    return l169;
})();
var l170 = (new Symbol(make_lisp_string("CDADAR")));
(function(){
    (l170).fvalue = (function(){
        var func = (function (values,nargs,v282){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var tmp = l156.fvalue(pv, 1, v282);
                    return tmp === l5.value? l5.value: tmp.cdr;
                })();
            })();
        });
        func.fname = 'CDADAR';
        return func;
    })();
    return l170;
})();
var l171 = (new Symbol(make_lisp_string("CDADDR")));
(function(){
    (l171).fvalue = (function(){
        var func = (function (values,nargs,v284){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var tmp = l137.fvalue(pv, 1, v284);
                    return tmp === l5.value? l5.value: tmp.cdr;
                })();
            })();
        });
        func.fname = 'CDADDR';
        return func;
    })();
    return l171;
})();
var l172 = (new Symbol(make_lisp_string("CDDAAR")));
(function(){
    (l172).fvalue = (function(){
        var func = (function (values,nargs,v286){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var tmp = l157.fvalue(pv, 1, v286);
                    return tmp === l5.value? l5.value: tmp.cdr;
                })();
            })();
        });
        func.fname = 'CDDAAR';
        return func;
    })();
    return l172;
})();
var l173 = (new Symbol(make_lisp_string("CDDADR")));
(function(){
    (l173).fvalue = (function(){
        var func = (function (values,nargs,v288){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var tmp = l158.fvalue(pv, 1, v288);
                    return tmp === l5.value? l5.value: tmp.cdr;
                })();
            })();
        });
        func.fname = 'CDDADR';
        return func;
    })();
    return l173;
})();
var l174 = (new Symbol(make_lisp_string("CDDDAR")));
(function(){
    (l174).fvalue = (function(){
        var func = (function (values,nargs,v290){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var tmp = l159.fvalue(pv, 1, v290);
                    return tmp === l5.value? l5.value: tmp.cdr;
                })();
            })();
        });
        func.fname = 'CDDDAR';
        return func;
    })();
    return l174;
})();
(function(){
    (l141).fvalue = (function(){
        var func = (function (values,nargs,v292){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var tmp = l160.fvalue(pv, 1, v292);
                    return tmp === l5.value? l5.value: tmp.cdr;
                })();
            })();
        });
        func.fname = 'CDDDDR';
        return func;
    })();
    return l141;
})();
var l175 = (new Symbol(make_lisp_string("SUBLIS")));
var l176 = (new Symbol(make_lisp_string("KEY"), make_lisp_string("KEYWORD")));
l176.value = l176;
var l177 = (new Symbol(make_lisp_string("TEST"), make_lisp_string("KEYWORD")));
l177.value = l177;
var l178 = (new Symbol(make_lisp_string("TEST-NOT"), make_lisp_string("KEYWORD")));
l178.value = l178;
var l179 = make_lisp_string("Both test and test-not are set");
(function(){
    (l175).fvalue = (function(){
        var func = (function (values,nargs,v294,v295){
            checkArgsAtLeast(nargs, 2);
            var v296; 
            var v297; 
            var v299 = l5.value;
            var v298; 
            var v300 = l5.value;
            var i;
            for (i=2; i<nargs; i+=2){
                if (arguments[i+2] === l176.value){
                    v296 = arguments[i+3];
                    break;
                }
            }
            if (i == nargs){
                v296 = l5.value;
            }
            for (i=2; i<nargs; i+=2){
                if (arguments[i+2] === l177.value){
                    v297 = arguments[i+3];
                    v299 = l4.value;
                    break;
                }
            }
            if (i == nargs){
                v297 = (function(){
                    var symbol = l27;
                    var func = symbol.fvalue;
                    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                    return func;
                })();
            }
            for (i=2; i<nargs; i+=2){
                if (arguments[i+2] === l178.value){
                    v298 = arguments[i+3];
                    v300 = l4.value;
                    break;
                }
            }
            if (i == nargs){
                v298 = (function(){
                    var symbol = l27;
                    var func = symbol.fvalue;
                    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                    return func;
                })();
            }
            for (i=2; i<nargs; i+=2){
                if (arguments[i+2] !== l176.value && arguments[i+2] !== l177.value && arguments[i+2] !== l178.value)
                    throw 'Unknown keyword argument ' + xstring(arguments[i].name);
            }
            return (function(){
                ((v299 !== l5.value ? v300 : l5.value) !== l5.value ? l78.fvalue(pv, 1, l179) : l5.value);
                return (function(){
                    var v302 = (function (values,nargs,v303){
                        checkArgs(nargs, 1);
                        return (function(){
                            return (function(){
                                var v305 = (v296 !== l5.value ? (function(){
                                    var f = v296;
                                    return (typeof f === 'function'? f: f.fvalue)(pv, 1, v303)
                                })() : v303);
                                var v306 = (v300 !== l5.value ? l95.fvalue(pv, 4, v305, v294, l178.value, v298) : l95.fvalue(pv, 4, v305, v294, l177.value, v297));
                                var v307 = (v306 !== l5.value ? (function(){
                                    var tmp = v306;
                                    return tmp === l5.value? l5.value: tmp.cdr;
                                })() : v303);
                                return (l69.fvalue(pv, 1, v307) !== l5.value ? v307 : ({car: v302(pv, 1, (function(){
                                    var tmp = v307;
                                    return tmp === l5.value? l5.value: tmp.car;
                                })()), cdr: v302(pv, 1, (function(){
                                    var tmp = v307;
                                    return tmp === l5.value? l5.value: tmp.cdr;
                                })())}));
                            })();
                        })();
                    });
                    return v302(values, 1, v295);
                })();
            })();
        });
        func.fname = 'SUBLIS';
        return func;
    })();
    return l175;
})();
var l180 = (new Symbol(make_lisp_string("COPY-LIST")));
(function(){
    (l180).fvalue = (function(){
        var func = (function (values,nargs,v308){
            checkArgs(nargs, 1);
            return (function(){
                return l120.fvalue(values, 2, (function(){
                    var symbol = l60;
                    var func = symbol.fvalue;
                    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                    return func;
                })(), v308);
            })();
        });
        func.fname = 'COPY-LIST';
        return func;
    })();
    return l180;
})();
var l181 = (new Symbol(make_lisp_string("COPY-TREE")));
(function(){
    (l181).fvalue = (function(){
        var func = (function (values,nargs,v310){
            checkArgs(nargs, 1);
            return (function(){
                return (((function(){
                    var tmp = v310;
                    return (typeof tmp == 'object' && 'car' in tmp);
                })()?l4.value: l5.value) !== l5.value ? ({car: l181.fvalue(pv, 1, (function(){
                    var tmp = v310;
                    return tmp === l5.value? l5.value: tmp.car;
                })()), cdr: l181.fvalue(pv, 1, (function(){
                    var tmp = v310;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })())}) : v310);
            })();
        });
        func.fname = 'COPY-TREE';
        return func;
    })();
    return l181;
})();
var l182 = (new Symbol(make_lisp_string("TREE-EQUAL")));
(function(){
    (l182).fvalue = (function(){
        var func = (function (values,nargs,v312,v313){
            checkArgsAtLeast(nargs, 2);
            var v314; 
            var i;
            for (i=2; i<nargs; i+=2){
                if (arguments[i+2] === l177.value){
                    v314 = arguments[i+3];
                    break;
                }
            }
            if (i == nargs){
                v314 = (function(){
                    var symbol = l27;
                    var func = symbol.fvalue;
                    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                    return func;
                })();
            }
            for (i=2; i<nargs; i+=2){
                if (arguments[i+2] !== l177.value)
                    throw 'Unknown keyword argument ' + xstring(arguments[i].name);
            }
            return (function(){
                return (l69.fvalue(pv, 1, v312) !== l5.value ? (l69.fvalue(pv, 1, v313) !== l5.value ? (function(){
                    var f = v314;
                    return (typeof f === 'function'? f: f.fvalue)(values, 2, v312, v313)
                })() : l5.value) : (((function(){
                    var tmp = v313;
                    return (typeof tmp == 'object' && 'car' in tmp);
                })()?l4.value: l5.value) !== l5.value ? (l182.fvalue(pv, 4, (function(){
                    var tmp = v312;
                    return tmp === l5.value? l5.value: tmp.car;
                })(), (function(){
                    var tmp = v313;
                    return tmp === l5.value? l5.value: tmp.car;
                })(), l177.value, v314) !== l5.value ? l182.fvalue(values, 4, (function(){
                    var tmp = v312;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })(), (function(){
                    var tmp = v313;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })(), l177.value, v314) : l5.value) : l5.value));
            })();
        });
        func.fname = 'TREE-EQUAL';
        return func;
    })();
    return l182;
})();
var l183 = (new Symbol(make_lisp_string("TAILP")));
(function(){
    (l183).fvalue = (function(){
        var func = (function (values,nargs,v316,v317){
            checkArgs(nargs, 2);
            return (function(){
                try {
                var v318 = [];
                    return (function(){
                        return (function(v320){
                            return (function(){
                                try {
                                var v321 = [];
                                    return (function(){
                                        while(l4.value !== l5.value){
                                            (l69.fvalue(pv, 1, v320) !== l5.value ? (function(){
                                                var values = mv;
                                                throw ({type: 'block', id: v321, values: ((v316 === v320)?l4.value: l5.value), message: 'Return from unknown block NIL.'})
                                            })() : l5.value);
                                            (function(){
                                                (l27.fvalue(pv, 2, v320, v316) !== l5.value ? (function(){
                                                    var values = mv;
                                                    throw ({type: 'block', id: v318, values: l4.value, message: 'Return from unknown block TAILP.'})
                                                })() : l5.value);
                                                return l5.value;
                                            })();
                                            (function(v322){
                                                return (v320 = v322);
                                            })((function(){
                                                var tmp = v320;
                                                return tmp === l5.value? l5.value: tmp.cdr;
                                            })());
                                        }return l5.value;
                                    })();
                                }
                                catch (cf){
                                    if (cf.type == 'block' && cf.id == v321)
                                        return values.apply(this, forcemv(cf.values));
                                    else
                                        throw cf;
                                }
                            })();
                        })(v317);
                    })();
                }
                catch (cf){
                    if (cf.type == 'block' && cf.id == v318)
                        return values.apply(this, forcemv(cf.values));
                    else
                        throw cf;
                }
            })();
        });
        func.fname = 'TAILP';
        return func;
    })();
    return l183;
})();
var l184 = (new Symbol(make_lisp_string("SUBST")));
(function(){
    (l184).fvalue = (function(){
        var func = (function (values,nargs,v323,v324,v325){
            checkArgsAtLeast(nargs, 3);
            var v326; 
            var v327; 
            var i;
            for (i=3; i<nargs; i+=2){
                if (arguments[i+2] === l176.value){
                    v326 = arguments[i+3];
                    break;
                }
            }
            if (i == nargs){
                v326 = (function(){
                    var symbol = l60;
                    var func = symbol.fvalue;
                    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                    return func;
                })();
            }
            for (i=3; i<nargs; i+=2){
                if (arguments[i+2] === l177.value){
                    v327 = arguments[i+3];
                    break;
                }
            }
            if (i == nargs){
                v327 = (function(){
                    var symbol = l27;
                    var func = symbol.fvalue;
                    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                    return func;
                })();
            }
            for (i=3; i<nargs; i+=2){
                if (arguments[i+2] !== l176.value && arguments[i+2] !== l177.value)
                    throw 'Unknown keyword argument ' + xstring(arguments[i].name);
            }
            return (function(){
                return ((function(){
                    var f = v327;
                    return (typeof f === 'function'? f: f.fvalue)(pv, 2, (function(){
                        var f = v326;
                        return (typeof f === 'function'? f: f.fvalue)(pv, 1, v325)
                    })(), (function(){
                        var f = v326;
                        return (typeof f === 'function'? f: f.fvalue)(pv, 1, v324)
                    })())
                })() !== l5.value ? v323 : (((function(){
                    var tmp = v325;
                    return (typeof tmp == 'object' && 'car' in tmp);
                })()?l4.value: l5.value) !== l5.value ? ({car: l184.fvalue(pv, 7, v323, v324, (function(){
                    var tmp = v325;
                    return tmp === l5.value? l5.value: tmp.car;
                })(), l176.value, v326, l177.value, v327), cdr: l184.fvalue(pv, 7, v323, v324, (function(){
                    var tmp = v325;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })(), l176.value, v326, l177.value, v327)}) : v325));
            })();
        });
        func.fname = 'SUBST';
        return func;
    })();
    return l184;
})();
var l185 = (new Symbol(make_lisp_string("POP")));
l185;
var l186 = (new Symbol(make_lisp_string("MAP1")));
var l187 = (new Symbol(make_lisp_string("SENTINEL")));
(function(){
    (l186).fvalue = (function(){
        var func = (function (values,nargs,v329,v330){
            checkArgs(nargs, 2);
            return (function(){
                return (function(){
                    var v332 = ({car: l187, cdr: l5.value});
                    var v333 = v332;
                    (function(v336){
                        return (function(){
                            return (function(){
                                while(v330 !== l5.value){
                                    v336(pv, 1, (function(){
                                        var f = v329;
                                        return (typeof f === 'function'? f: f.fvalue)(pv, 1, (function(){
                                            var tmp = v330;
                                            return tmp === l5.value? l5.value: tmp.car;
                                        })())
                                    })());
                                    (v330 = (function(){
                                        var tmp = v330;
                                        return tmp === l5.value? l5.value: tmp.cdr;
                                    })());
                                }return l5.value;
                            })();
                        })();
                    })((function (values,nargs,v334){
                        checkArgs(nargs, 1);
                        return (function(){
                            (function(){
                                var x = v333;
                                if (typeof x != 'object')
                                    throw 'The value ' + x + ' is not a type object.';
                                return (x.cdr = ({car: v334, cdr: l5.value}), x);
                            })();
                            (v333 = (function(){
                                var tmp = v333;
                                return tmp === l5.value? l5.value: tmp.cdr;
                            })());
                            return v334;
                        })();
                    }));
                    return (function(){
                        var tmp = v332;
                        return tmp === l5.value? l5.value: tmp.cdr;
                    })();
                })();
            })();
        });
        func.fname = 'MAP1';
        return func;
    })();
    return l186;
})();
(function(){
    (l120).fvalue = (function(){
        var func = (function (values,nargs,v339,v340){
            checkArgsAtLeast(nargs, 2);
            var v338= l5.value;
            for (var i = nargs-1; i>=2; i--)
                v338 = {car: arguments[i+2], cdr: v338};
            return (function(){
                return (function(v342){
                    return (function(){
                        var v343 = ({car: l187, cdr: l5.value});
                        var v344 = v343;
                        (function(v347){
                            return (function(){
                                try {
                                var v348 = [];
                                    return (function(){
                                        return (function(){
                                            while(l4.value !== l5.value){
                                                (function(v350){
                                                    (function(){
                                                        return (function(v352){
                                                            return (function(){
                                                                try {
                                                                var v353 = [];
                                                                    return (function(){
                                                                        while(l4.value !== l5.value){
                                                                            (l44.fvalue(pv, 1, v352) !== l5.value ? (function(){
                                                                                throw ({type: 'block', id: v353, values: l5.value, message: 'Return from unknown block NIL.'})
                                                                            })() : l5.value);
                                                                            (function(){
                                                                                (l44.fvalue(pv, 1, (function(){
                                                                                    var tmp = v352;
                                                                                    return tmp === l5.value? l5.value: tmp.car;
                                                                                })()) !== l5.value ? (function(){
                                                                                    throw ({type: 'block', id: v348, values: l5.value, message: 'Return from unknown block LOOP.'})
                                                                                })() : l5.value);
                                                                                (function(){
                                                                                    var x = v352;
                                                                                    if (typeof x != 'object')
                                                                                        throw 'The value ' + x + ' is not a type object.';
                                                                                    return (x.car = l153.fvalue(pv, 1, v352), x);
                                                                                })();
                                                                                return l5.value;
                                                                            })();
                                                                            (function(v354){
                                                                                return (v352 = v354);
                                                                            })((function(){
                                                                                var tmp = v352;
                                                                                return tmp === l5.value? l5.value: tmp.cdr;
                                                                            })());
                                                                        }return l5.value;
                                                                    })();
                                                                }
                                                                catch (cf){
                                                                    if (cf.type == 'block' && cf.id == v353)
                                                                        return cf.values;
                                                                    else
                                                                        throw cf;
                                                                }
                                                            })();
                                                        })(v342);
                                                    })();
                                                    return v347(pv, 1, (function(){
                                                        var f = v339;
                                                        var args = [pv, 0];
                                                        var tail = (v350);
                                                        while (tail != l5.value){
                                                            args.push(tail.car);
                                                            args[1] += 1;
                                                            tail = tail.cdr;
                                                        }
                                                        return (typeof f === 'function'? f : f.fvalue).apply(this, args);
                                                    })());
                                                })(l186.fvalue(pv, 2, (function(){
                                                    var symbol = l131;
                                                    var func = symbol.fvalue;
                                                    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                                                    return func;
                                                })(), v342));
                                            }return l5.value;
                                        })();
                                    })();
                                }
                                catch (cf){
                                    if (cf.type == 'block' && cf.id == v348)
                                        return cf.values;
                                    else
                                        throw cf;
                                }
                            })();
                        })((function (values,nargs,v345){
                            checkArgs(nargs, 1);
                            return (function(){
                                (function(){
                                    var x = v344;
                                    if (typeof x != 'object')
                                        throw 'The value ' + x + ' is not a type object.';
                                    return (x.cdr = ({car: v345, cdr: l5.value}), x);
                                })();
                                (v344 = (function(){
                                    var tmp = v344;
                                    return tmp === l5.value? l5.value: tmp.cdr;
                                })());
                                return v345;
                            })();
                        }));
                        return (function(){
                            var tmp = v343;
                            return tmp === l5.value? l5.value: tmp.cdr;
                        })();
                    })();
                })(({car: v340, cdr: v338}));
            })();
        });
        func.fname = 'MAPCAR';
        return func;
    })();
    return l120;
})();
var l188 = (new Symbol(make_lisp_string("MAPC")));
(function(){
    (l188).fvalue = (function(){
        var func = (function (values,nargs,v356){
            checkArgsAtLeast(nargs, 1);
            var v355= l5.value;
            for (var i = nargs-1; i>=1; i--)
                v355 = {car: arguments[i+2], cdr: v355};
            return (function(){
                return (function(){
                    return (function(){
                        var v359 = l186.fvalue(pv, 2, (function(){
                            var symbol = l131;
                            var func = symbol.fvalue;
                            if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                            return func;
                        })(), v355);
                        var v360 = l186.fvalue(pv, 2, (function(){
                            var symbol = l132;
                            var func = symbol.fvalue;
                            if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                            return func;
                        })(), v355);
                        return (function(){
                            try {
                            var v361 = [];
                                return (function(){
                                    while(l4.value !== l5.value){
                                        ((function(){
                                            try {
                                            var v362 = [];
                                                return (function(v363,v364){
                                                    (function(){
                                                        while(v363 !== l5.value){
                                                            (v364 = (function(){
                                                                var tmp = v363;
                                                                return tmp === l5.value? l5.value: tmp.car;
                                                            })());
                                                            (function(){
                                                                (l44.fvalue(pv, 1, v364) !== l5.value ? (function(){
                                                                    throw ({type: 'block', id: v362, values: l4.value, message: 'Return from unknown block NIL.'})
                                                                })() : l5.value);
                                                                return l5.value;
                                                            })();
                                                            (v363 = (function(){
                                                                var tmp = v363;
                                                                return tmp === l5.value? l5.value: tmp.cdr;
                                                            })());
                                                        }return l5.value;
                                                    })();
                                                    return l5.value;
                                                })(v359,l5.value);
                                            }
                                            catch (cf){
                                                if (cf.type == 'block' && cf.id == v362)
                                                    return cf.values;
                                                else
                                                    throw cf;
                                            }
                                        })() !== l5.value ? (function(){
                                            var values = mv;
                                            throw ({type: 'block', id: v361, values: (function(){
                                                var tmp = v355;
                                                return tmp === l5.value? l5.value: tmp.car;
                                            })(), message: 'Return from unknown block NIL.'})
                                        })() : l5.value);
                                        (function(){
                                            (function(){
                                                var f = v356;
                                                var args = [pv, 0];
                                                var tail = (v359);
                                                while (tail != l5.value){
                                                    args.push(tail.car);
                                                    args[1] += 1;
                                                    tail = tail.cdr;
                                                }
                                                return (typeof f === 'function'? f : f.fvalue).apply(this, args);
                                            })();
                                            return l5.value;
                                        })();
                                        (v359 = l186.fvalue(pv, 2, (function(){
                                            var symbol = l131;
                                            var func = symbol.fvalue;
                                            if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                                            return func;
                                        })(), v360), v360 = l186.fvalue(pv, 2, (function(){
                                            var symbol = l132;
                                            var func = symbol.fvalue;
                                            if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                                            return func;
                                        })(), v360));
                                    }return l5.value;
                                })();
                            }
                            catch (cf){
                                if (cf.type == 'block' && cf.id == v361)
                                    return values.apply(this, forcemv(cf.values));
                                else
                                    throw cf;
                            }
                        })();
                    })();
                })();
            })();
        });
        func.fname = 'MAPC';
        return func;
    })();
    return l188;
})();
var l189 = (new Symbol(make_lisp_string("LAST")));
(function(){
    (l189).fvalue = (function(){
        var func = (function (values,nargs,v365){
            checkArgs(nargs, 1);
            return (function(){
                (function(){
                    return (function(){
                        while(((function(){
                            var tmp = (function(){
                                var tmp = v365;
                                return tmp === l5.value? l5.value: tmp.cdr;
                            })();
                            return (typeof tmp == 'object' && 'car' in tmp);
                        })()?l4.value: l5.value) !== l5.value){
                            (v365 = (function(){
                                var tmp = v365;
                                return tmp === l5.value? l5.value: tmp.cdr;
                            })());
                        }return l5.value;
                    })();
                })();
                return v365;
            })();
        });
        func.fname = 'LAST';
        return func;
    })();
    return l189;
})();
var l190 = (new Symbol(make_lisp_string("BUTLAST")));
(function(){
    (l190).fvalue = (function(){
        var func = (function (values,nargs,v368){
            checkArgs(nargs, 1);
            return (function(){
                return (((function(){
                    var tmp = (function(){
                        var tmp = v368;
                        return tmp === l5.value? l5.value: tmp.cdr;
                    })();
                    return (typeof tmp == 'object' && 'car' in tmp);
                })()?l4.value: l5.value) !== l5.value ? ({car: (function(){
                    var tmp = v368;
                    return tmp === l5.value? l5.value: tmp.car;
                })(), cdr: l190.fvalue(pv, 1, (function(){
                    var tmp = v368;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })())}) : l5.value);
            })();
        });
        func.fname = 'BUTLAST';
        return func;
    })();
    return l190;
})();
var l191 = (new Symbol(make_lisp_string("MEMBER")));
(function(){
    (l191).fvalue = (function(){
        var func = (function (values,nargs,v370,v371){
            checkArgsAtLeast(nargs, 2);
            var v372; 
            var v373; 
            var i;
            for (i=2; i<nargs; i+=2){
                if (arguments[i+2] === l176.value){
                    v372 = arguments[i+3];
                    break;
                }
            }
            if (i == nargs){
                v372 = (function(){
                    var symbol = l60;
                    var func = symbol.fvalue;
                    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                    return func;
                })();
            }
            for (i=2; i<nargs; i+=2){
                if (arguments[i+2] === l177.value){
                    v373 = arguments[i+3];
                    break;
                }
            }
            if (i == nargs){
                v373 = (function(){
                    var symbol = l27;
                    var func = symbol.fvalue;
                    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                    return func;
                })();
            }
            for (i=2; i<nargs; i+=2){
                if (arguments[i+2] !== l176.value && arguments[i+2] !== l177.value)
                    throw 'Unknown keyword argument ' + xstring(arguments[i].name);
            }
            return (function(){
                return (function(){
                    try {
                    var v375 = [];
                        return (function(){
                            while(v371 !== l5.value){
                                ((function(){
                                    var f = v373;
                                    return (typeof f === 'function'? f: f.fvalue)(pv, 2, v370, (function(){
                                        var f = v372;
                                        return (typeof f === 'function'? f: f.fvalue)(pv, 1, (function(){
                                            var tmp = v371;
                                            return tmp === l5.value? l5.value: tmp.car;
                                        })())
                                    })())
                                })() !== l5.value ? (function(){
                                    var values = mv;
                                    throw ({type: 'block', id: v375, values: v371, message: 'Return from unknown block NIL.'})
                                })() : l5.value);
                                (v371 = (function(){
                                    var tmp = v371;
                                    return tmp === l5.value? l5.value: tmp.cdr;
                                })());
                            }return l5.value;
                        })();
                    }
                    catch (cf){
                        if (cf.type == 'block' && cf.id == v375)
                            return values.apply(this, forcemv(cf.values));
                        else
                            throw cf;
                    }
                })();
            })();
        });
        func.fname = 'MEMBER';
        return func;
    })();
    return l191;
})();
(function(){
    (l95).fvalue = (function(){
        var func = (function (values,nargs,v376,v377){
            checkArgsAtLeast(nargs, 2);
            var v378; 
            var i;
            for (i=2; i<nargs; i+=2){
                if (arguments[i+2] === l177.value){
                    v378 = arguments[i+3];
                    break;
                }
            }
            if (i == nargs){
                v378 = (function(){
                    var symbol = l27;
                    var func = symbol.fvalue;
                    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                    return func;
                })();
            }
            for (i=2; i<nargs; i+=2){
                if (arguments[i+2] !== l177.value)
                    throw 'Unknown keyword argument ' + xstring(arguments[i].name);
            }
            return (function(){
                (function(){
                    try {
                    var v380 = [];
                        return (function(){
                            while(v377 !== l5.value){
                                ((function(){
                                    var f = v378;
                                    return (typeof f === 'function'? f: f.fvalue)(pv, 2, v376, l152.fvalue(pv, 1, v377))
                                })() !== l5.value ? (function(){
                                    throw ({type: 'block', id: v380, values: l5.value, message: 'Return from unknown block NIL.'})
                                })() : (v377 = (function(){
                                    var tmp = v377;
                                    return tmp === l5.value? l5.value: tmp.cdr;
                                })()));
                            }return l5.value;
                        })();
                    }
                    catch (cf){
                        if (cf.type == 'block' && cf.id == v380)
                            return cf.values;
                        else
                            throw cf;
                    }
                })();
                return (function(){
                    var tmp = v377;
                    return tmp === l5.value? l5.value: tmp.car;
                })();
            })();
        });
        func.fname = 'ASSOC';
        return func;
    })();
    return l95;
})();
var l192 = (new Symbol(make_lisp_string("RASSOC")));
(function(){
    (l192).fvalue = (function(){
        var func = (function (values,nargs,v381,v382){
            checkArgsAtLeast(nargs, 2);
            var v383; 
            var i;
            for (i=2; i<nargs; i+=2){
                if (arguments[i+2] === l177.value){
                    v383 = arguments[i+3];
                    break;
                }
            }
            if (i == nargs){
                v383 = (function(){
                    var symbol = l27;
                    var func = symbol.fvalue;
                    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                    return func;
                })();
            }
            for (i=2; i<nargs; i+=2){
                if (arguments[i+2] !== l177.value)
                    throw 'Unknown keyword argument ' + xstring(arguments[i].name);
            }
            return (function(){
                (function(){
                    try {
                    var v385 = [];
                        return (function(){
                            while(v382 !== l5.value){
                                ((function(){
                                    var f = v383;
                                    return (typeof f === 'function'? f: f.fvalue)(pv, 2, v381, l153.fvalue(pv, 1, v382))
                                })() !== l5.value ? (function(){
                                    throw ({type: 'block', id: v385, values: l5.value, message: 'Return from unknown block NIL.'})
                                })() : (v382 = (function(){
                                    var tmp = v382;
                                    return tmp === l5.value? l5.value: tmp.cdr;
                                })()));
                            }return l5.value;
                        })();
                    }
                    catch (cf){
                        if (cf.type == 'block' && cf.id == v385)
                            return cf.values;
                        else
                            throw cf;
                    }
                })();
                return (function(){
                    var tmp = v382;
                    return tmp === l5.value? l5.value: tmp.car;
                })();
            })();
        });
        func.fname = 'RASSOC';
        return func;
    })();
    return l192;
})();
var l193 = (new Symbol(make_lisp_string("ACONS")));
(function(){
    (l193).fvalue = (function(){
        var func = (function (values,nargs,v386,v387,v388){
            checkArgs(nargs, 3);
            return (function(){
                return ({car: ({car: v386, cdr: v387}), cdr: v388});
            })();
        });
        func.fname = 'ACONS';
        return func;
    })();
    return l193;
})();
var l194 = (new Symbol(make_lisp_string("PAIRLIS")));
(function(){
    (l194).fvalue = (function(){
        var func = (function (values,nargs,v390,v391,v392){
            checkArgsAtLeast(nargs, 2);
            checkArgsAtMost(nargs, 3);
            switch(nargs){
            case 2:
                v392=l5.value;
            default: break;
            }
            return (function(){
                (function(){
                    return (function(){
                        while(v390 !== l5.value){
                            (v392 = l193.fvalue(pv, 3, (function(){
                                var tmp = v390;
                                return tmp === l5.value? l5.value: tmp.car;
                            })(), (function(){
                                var tmp = v391;
                                return tmp === l5.value? l5.value: tmp.car;
                            })(), v392));
                            (v390 = (function(){
                                var tmp = v390;
                                return tmp === l5.value? l5.value: tmp.cdr;
                            })());
                            (v391 = (function(){
                                var tmp = v391;
                                return tmp === l5.value? l5.value: tmp.cdr;
                            })());
                        }return l5.value;
                    })();
                })();
                return v392;
            })();
        });
        func.fname = 'PAIRLIS';
        return func;
    })();
    return l194;
})();
var l195 = (new Symbol(make_lisp_string("COPY-ALIST")));
(function(){
    (l195).fvalue = (function(){
        var func = (function (values,nargs,v395){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v397){
                    (function(){
                        return (function(){
                            while(v395 !== l5.value){
                                (function(){
                                    var v399 = ({car: l152.fvalue(pv, 1, v395), cdr: l153.fvalue(pv, 1, v395)});
                                    var v400 = ({car: v399, cdr: v397});
                                    return (v397 = v400);
                                })();
                                (v395 = (function(){
                                    var tmp = v395;
                                    return tmp === l5.value? l5.value: tmp.cdr;
                                })());
                            }return l5.value;
                        })();
                    })();
                    return l49.fvalue(values, 1, v397);
                })(l5.value);
            })();
        });
        func.fname = 'COPY-ALIST';
        return func;
    })();
    return l195;
})();
var l196 = (new Symbol(make_lisp_string("PROGN")));
var l197 = (new Symbol(make_lisp_string("RPLACA")));
(function(){
    (function(){
        var v401 = ({car: l131, cdr: (function (values,nargs,v402){
            checkArgs(nargs, 1);
            return (function(v403,v404){
                return values(l92.fvalue(pv, 1, v403), l92.fvalue(pv, 1, v402), l92.fvalue(pv, 1, v404), l92.fvalue(pv, 3, l196, l92.fvalue(pv, 3, l197, v403, v404), v404), l92.fvalue(pv, 2, l131, v403));
            })(l15.fvalue(pv, 0),l15.fvalue(pv, 0));
        })});
        var v405 = ({car: v401, cdr: (function(){
            var symbol = l90;
            var value = symbol.value;
            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
            return value;
        })()});
        return ((l90).value = v405);
    })();
    return l131;
})();
var l198 = (new Symbol(make_lisp_string("RPLACD")));
(function(){
    (function(){
        var v406 = ({car: l132, cdr: (function (values,nargs,v407){
            checkArgs(nargs, 1);
            return (function(v408,v409){
                return values(l92.fvalue(pv, 1, v408), l92.fvalue(pv, 1, v407), l92.fvalue(pv, 1, v409), l92.fvalue(pv, 3, l196, l92.fvalue(pv, 3, l198, v408, v409), v409), l92.fvalue(pv, 2, l131, v408));
            })(l15.fvalue(pv, 0),l15.fvalue(pv, 0));
        })});
        var v410 = ({car: v406, cdr: (function(){
            var symbol = l90;
            var value = symbol.value;
            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
            return value;
        })()});
        return ((l90).value = v410);
    })();
    return l132;
})();
var l199 = (new Symbol(make_lisp_string("NCONC")));
var l200 = make_lisp_string("type-error in nconc");
(function(){
    (l199).fvalue = (function(){
        var func = (function (values,nargs){
            var v411= l5.value;
            for (var i = nargs-1; i>=0; i--)
                v411 = {car: arguments[i+2], cdr: v411};
            return (function(){
                return (function(v415){
                    return (function(){
                        return (function(v417){
                            return (function(){
                                try {
                                var v418 = [];
                                    return (function(){
                                        while(l4.value !== l5.value){
                                            (l44.fvalue(pv, 1, v417) !== l5.value ? (function(){
                                                var values = mv;
                                                throw ({type: 'block', id: v418, values: l5.value, message: 'Return from unknown block NIL.'})
                                            })() : l5.value);
                                            (function(){
                                                (function(v419){
                                                    return (function(v420){
                                                        return (((function(){
                                                            var tmp = v420;
                                                            return (typeof tmp == 'object' && 'car' in tmp);
                                                        })()?l4.value: l5.value) !== l5.value ? (function(){
                                                            var v421 = v419;
                                                            var v422 = v421;
                                                            (function(){
                                                                return (function(v424){
                                                                    return (function(){
                                                                        try {
                                                                        var v425 = [];
                                                                            return (function(){
                                                                                while(l4.value !== l5.value){
                                                                                    (l129.fvalue(pv, 1, v424) !== l5.value ? (function(){
                                                                                        throw ({type: 'block', id: v425, values: l5.value, message: 'Return from unknown block NIL.'})
                                                                                    })() : l5.value);
                                                                                    (function(){
                                                                                        (function(v426){
                                                                                            return (function(v427){
                                                                                                return (((function(){
                                                                                                    var tmp = v427;
                                                                                                    return (typeof tmp == 'object' && 'car' in tmp);
                                                                                                })()?l4.value: l5.value) !== l5.value ? (function(){
                                                                                                    (function(){
                                                                                                        var x = l189.fvalue(pv, 1, v422);
                                                                                                        if (typeof x != 'object')
                                                                                                            throw 'The value ' + x + ' is not a type object.';
                                                                                                        return (x.cdr = v426, x);
                                                                                                    })();
                                                                                                    return (function(){
                                                                                                        return (function(){
                                                                                                            var func = (function (values,nargs,v429){
                                                                                                                switch(nargs){
                                                                                                                case 0:
                                                                                                                    v429=l5.value;
                                                                                                                default: break;
                                                                                                                }
                                                                                                                var v428= l5.value;
                                                                                                                for (var i = nargs-1; i>=1; i--)
                                                                                                                    v428 = {car: arguments[i+2], cdr: v428};
                                                                                                                return (v422 = v429);
                                                                                                            });
                                                                                                            var args = [pv, 0];
                                                                                                            return (function(){
                                                                                                                var values = mv;
                                                                                                                var vs;
                                                                                                                vs = v426;
                                                                                                                if (typeof vs === 'object' && 'multiple-value' in vs)
                                                                                                                    args = args.concat(vs);
                                                                                                                else
                                                                                                                    args.push(vs);
                                                                                                                args[1] = args.length-2;
                                                                                                                return func.apply(window, args);
                                                                                                            })();
                                                                                                        })();
                                                                                                    })();
                                                                                                })() : (l44.fvalue(pv, 1, v427) !== l5.value ? (function(){
                                                                                                    var x = l189.fvalue(pv, 1, v422);
                                                                                                    if (typeof x != 'object')
                                                                                                        throw 'The value ' + x + ' is not a type object.';
                                                                                                    return (x.cdr = l5.value, x);
                                                                                                })() : (l69.fvalue(pv, 1, v427) !== l5.value ? ((function(){
                                                                                                    var tmp = v424;
                                                                                                    return tmp === l5.value? l5.value: tmp.cdr;
                                                                                                })() !== l5.value ? v415(pv, 1, v426) : (function(){
                                                                                                    var x = l189.fvalue(pv, 1, v422);
                                                                                                    if (typeof x != 'object')
                                                                                                        throw 'The value ' + x + ' is not a type object.';
                                                                                                    return (x.cdr = v426, x);
                                                                                                })()) : l5.value)));
                                                                                            })(v426);
                                                                                        })((function(){
                                                                                            var tmp = v424;
                                                                                            return tmp === l5.value? l5.value: tmp.car;
                                                                                        })());
                                                                                        return l5.value;
                                                                                    })();
                                                                                    (function(v430){
                                                                                        return (v424 = v430);
                                                                                    })((function(){
                                                                                        var tmp = v424;
                                                                                        return tmp === l5.value? l5.value: tmp.cdr;
                                                                                    })());
                                                                                }return l5.value;
                                                                            })();
                                                                        }
                                                                        catch (cf){
                                                                            if (cf.type == 'block' && cf.id == v425)
                                                                                return cf.values;
                                                                            else
                                                                                throw cf;
                                                                        }
                                                                    })();
                                                                })((function(){
                                                                    var tmp = v417;
                                                                    return tmp === l5.value? l5.value: tmp.cdr;
                                                                })());
                                                            })();
                                                            return (function(){
                                                                var values = mv;
                                                                throw ({type: 'block', id: v418, values: v421, message: 'Return from unknown block NIL.'})
                                                            })();
                                                        })() : (l44.fvalue(pv, 1, v420) !== l5.value ? l5.value : (l69.fvalue(pv, 1, v420) !== l5.value ? ((function(){
                                                            var tmp = v417;
                                                            return tmp === l5.value? l5.value: tmp.cdr;
                                                        })() !== l5.value ? v415(pv, 1, v419) : (function(){
                                                            var values = mv;
                                                            throw ({type: 'block', id: v418, values: v419, message: 'Return from unknown block NIL.'})
                                                        })()) : l5.value)));
                                                    })(v419);
                                                })((function(){
                                                    var tmp = v417;
                                                    return tmp === l5.value? l5.value: tmp.car;
                                                })());
                                                return l5.value;
                                            })();
                                            (function(v431){
                                                return (v417 = v431);
                                            })((function(){
                                                var tmp = v417;
                                                return tmp === l5.value? l5.value: tmp.cdr;
                                            })());
                                        }return l5.value;
                                    })();
                                }
                                catch (cf){
                                    if (cf.type == 'block' && cf.id == v418)
                                        return values.apply(this, forcemv(cf.values));
                                    else
                                        throw cf;
                                }
                            })();
                        })(v411);
                    })();
                })((function (values,nargs,v413){
                    checkArgs(nargs, 1);
                    return (function(){
                        return l78.fvalue(values, 1, l200);
                    })();
                }));
            })();
        });
        func.fname = 'NCONC';
        return func;
    })();
    return l199;
})();
var l201 = (new Symbol(make_lisp_string("NRECONC")));
(function(){
    (l201).fvalue = (function(){
        var func = (function (values,nargs,v432,v433){
            checkArgs(nargs, 2);
            return (function(){
                return (function(){
                    return (function(v436,v437,v438){
                        return (function(){
                            try {
                            var v439 = [];
                                return (function(){
                                    while(l4.value !== l5.value){
                                        (l69.fvalue(pv, 1, v437) !== l5.value ? (function(){
                                            var values = mv;
                                            throw ({type: 'block', id: v439, values: v438, message: 'Return from unknown block NIL.'})
                                        })() : l5.value);
                                        (function(){
                                            (function(){
                                                var x = v437;
                                                if (typeof x != 'object')
                                                    throw 'The value ' + x + ' is not a type object.';
                                                return (x.cdr = v438, x);
                                            })();
                                            return l5.value;
                                        })();
                                        (function(v440,v441,v442){
                                            return (v436 = v440, v437 = v441, v438 = v442);
                                        })((l129.fvalue(pv, 1, v436) !== l5.value ? v436 : (function(){
                                            var tmp = v436;
                                            return tmp === l5.value? l5.value: tmp.cdr;
                                        })()),v436,v437);
                                    }return l5.value;
                                })();
                            }
                            catch (cf){
                                if (cf.type == 'block' && cf.id == v439)
                                    return values.apply(this, forcemv(cf.values));
                                else
                                    throw cf;
                            }
                        })();
                    })((function(){
                        var tmp = v432;
                        return tmp === l5.value? l5.value: tmp.cdr;
                    })(),v432,v433);
                })();
            })();
        });
        func.fname = 'NRECONC';
        return func;
    })();
    return l201;
})();
var l202 = (new Symbol(make_lisp_string("ADJOIN")));
(function(){
    (l202).fvalue = (function(){
        var func = (function (values,nargs,v443,v444){
            checkArgsAtLeast(nargs, 2);
            var v445; 
            var v446; 
            var i;
            for (i=2; i<nargs; i+=2){
                if (arguments[i+2] === l177.value){
                    v445 = arguments[i+3];
                    break;
                }
            }
            if (i == nargs){
                v445 = (function(){
                    var symbol = l27;
                    var func = symbol.fvalue;
                    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                    return func;
                })();
            }
            for (i=2; i<nargs; i+=2){
                if (arguments[i+2] === l176.value){
                    v446 = arguments[i+3];
                    break;
                }
            }
            if (i == nargs){
                v446 = (function(){
                    var symbol = l60;
                    var func = symbol.fvalue;
                    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                    return func;
                })();
            }
            for (i=2; i<nargs; i+=2){
                if (arguments[i+2] !== l177.value && arguments[i+2] !== l176.value)
                    throw 'Unknown keyword argument ' + xstring(arguments[i].name);
            }
            return (function(){
                return (l191.fvalue(pv, 6, v443, v444, l176.value, v446, l177.value, v445) !== l5.value ? v444 : ({car: v443, cdr: v444}));
            })();
        });
        func.fname = 'ADJOIN';
        return func;
    })();
    return l202;
})();
var l203 = (new Symbol(make_lisp_string("INTERSECTION")));
(function(){
    (l203).fvalue = (function(){
        var func = (function (values,nargs,v448,v449){
            checkArgsAtLeast(nargs, 2);
            var v450; 
            var v451; 
            var i;
            for (i=2; i<nargs; i+=2){
                if (arguments[i+2] === l177.value){
                    v450 = arguments[i+3];
                    break;
                }
            }
            if (i == nargs){
                v450 = (function(){
                    var symbol = l27;
                    var func = symbol.fvalue;
                    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                    return func;
                })();
            }
            for (i=2; i<nargs; i+=2){
                if (arguments[i+2] === l176.value){
                    v451 = arguments[i+3];
                    break;
                }
            }
            if (i == nargs){
                v451 = (function(){
                    var symbol = l60;
                    var func = symbol.fvalue;
                    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                    return func;
                })();
            }
            for (i=2; i<nargs; i+=2){
                if (arguments[i+2] !== l177.value && arguments[i+2] !== l176.value)
                    throw 'Unknown keyword argument ' + xstring(arguments[i].name);
            }
            return (function(){
                return (function(v453){
                    (function(){
                        return (function(v455,v456){
                            (function(){
                                while(v455 !== l5.value){
                                    (v456 = (function(){
                                        var tmp = v455;
                                        return tmp === l5.value? l5.value: tmp.car;
                                    })());
                                    (function(){
                                        (l191.fvalue(pv, 6, v456, v449, l177.value, v450, l176.value, v451) !== l5.value ? (function(){
                                            var v457 = v456;
                                            var v458 = ({car: v457, cdr: v453});
                                            return (v453 = v458);
                                        })() : l5.value);
                                        return l5.value;
                                    })();
                                    (v455 = (function(){
                                        var tmp = v455;
                                        return tmp === l5.value? l5.value: tmp.cdr;
                                    })());
                                }return l5.value;
                            })();
                            return l5.value;
                        })(v448,l5.value);
                    })();
                    return v453;
                })(l5.value);
            })();
        });
        func.fname = 'INTERSECTION';
        return func;
    })();
    return l203;
})();
(function(){
    (l125).fvalue = (function(){
        var func = (function (values,nargs,v459){
            checkArgs(nargs, 1);
            return (function(){
                return (((function(){
                    var x = v459;
                    return typeof(x) == 'object' && 'length' in x && x.type == 'character';
                })()?l4.value: l5.value) !== l5.value ? v459 : (((v459 instanceof Symbol)?l4.value: l5.value) !== l5.value ? (v459).name : (function(){
                    var r = [v459];
                    r.type = 'character';return r
                })()));
            })();
        });
        func.fname = 'STRING';
        return func;
    })();
    return l125;
})();
(function(){
    (l75).fvalue = (function(){
        var func = (function (values,nargs,v461,v462){
            checkArgs(nargs, 2);
            return (function(){
                try {
                var v463 = [];
                    return (function(v464){
                        return ((function(){
                            var x1 = l54.fvalue(pv, 1, v462);
                            if (typeof x1 !== 'number') throw 'Not a number!';
                            var x2 = v464;
                            if (typeof x2 !== 'number') throw 'Not a number!';
                            return (x1==x2?l4.value: l5.value);
                        })() !== l5.value ? (function(){
                            return (function(v466,v467){
                                (function(){
                                    while((function(){
                                        var x1 = v466;
                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                        var x2 = v467;
                                        if (typeof x2 !== 'number') throw 'Not a number!';
                                        return (x1<x2?l4.value: l5.value);
                                    })() !== l5.value){
                                        (function(){
                                            (l64.fvalue(pv, 2, v461[v466], v462[v466]) !== l5.value ? l5.value : (function(){
                                                var values = mv;
                                                throw ({type: 'block', id: v463, values: l5.value, message: 'Return from unknown block STRING=.'})
                                            })());
                                            return l5.value;
                                        })();
                                        (function(){
                                            var v468 = 1;
                                            var v469 = (function(){
                                                var x1 = v466;
                                                if (typeof x1 !== 'number') throw 'Not a number!';
                                                var x2 = v468;
                                                if (typeof x2 !== 'number') throw 'Not a number!';
                                                return x1+x2;
                                            })();
                                            return (v466 = v469);
                                        })();
                                    }return l5.value;
                                })();
                                return l4.value;
                            })(0,v464);
                        })() : l5.value);
                    })(l54.fvalue(pv, 1, v461));
                }
                catch (cf){
                    if (cf.type == 'block' && cf.id == v463)
                        return values.apply(this, forcemv(cf.values));
                    else
                        throw cf;
                }
            })();
        });
        func.fname = 'STRING=';
        return func;
    })();
    return l75;
})();
var l204 = (new Symbol(make_lisp_string("STRINGP")));
(function(){
    (l204).fvalue = (function(){
        var func = (function (values,nargs,v470){
            checkArgs(nargs, 1);
            return (function(){
                return ((function(){
                    var x = v470;
                    return typeof(x) == 'object' && 'length' in x && x.type == 'character';
                })()?l4.value: l5.value);
            })();
        });
        func.fname = 'STRINGP';
        return func;
    })();
    return l204;
})();
var l205 = (new Symbol(make_lisp_string("CHAR")));
var l206 = (new Symbol(make_lisp_string("ASET")));
(function(){
    (function(){
        var v472 = ({car: l205, cdr: (function (values,nargs,v473,v474){
            checkArgs(nargs, 2);
            return (function(v475,v476,v477){
                return values(l92.fvalue(pv, 2, v475, v476), l92.fvalue(pv, 2, v473, v474), l92.fvalue(pv, 1, v477), l92.fvalue(pv, 4, l206, v475, v476, v477), l92.fvalue(pv, 3, l205, v475, v476));
            })(l15.fvalue(pv, 0),l15.fvalue(pv, 0),l15.fvalue(pv, 0));
        })});
        var v478 = ({car: v472, cdr: (function(){
            var symbol = l90;
            var value = symbol.value;
            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
            return value;
        })()});
        return ((l90).value = v478);
    })();
    return l205;
})();
var l207 = (new Symbol(make_lisp_string("NOT-SEQ-ERROR")));
var l208 = make_lisp_string("`~S' is not of type SEQUENCE");
(function(){
    (l207).fvalue = (function(){
        var func = (function (values,nargs,v479){
            checkArgs(nargs, 1);
            return (function(){
                return l78.fvalue(values, 2, l208, v479);
            })();
        });
        func.fname = 'NOT-SEQ-ERROR';
        return func;
    })();
    return l207;
})();
var l209 = (new Symbol(make_lisp_string("DO-SEQUENCE")));
l209;
var l210 = (new Symbol(make_lisp_string("FIND")));
(function(){
    (l210).fvalue = (function(){
        var func = (function (values,nargs,v481,v482){
            checkArgsAtLeast(nargs, 2);
            var v483; 
            var v484; 
            var i;
            for (i=2; i<nargs; i+=2){
                if (arguments[i+2] === l176.value){
                    v483 = arguments[i+3];
                    break;
                }
            }
            if (i == nargs){
                v483 = l5.value;
            }
            for (i=2; i<nargs; i+=2){
                if (arguments[i+2] === l177.value){
                    v484 = arguments[i+3];
                    break;
                }
            }
            if (i == nargs){
                v484 = (function(){
                    var symbol = l27;
                    var func = symbol.fvalue;
                    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                    return func;
                })();
            }
            for (i=2; i<nargs; i+=2){
                if (arguments[i+2] !== l176.value && arguments[i+2] !== l177.value)
                    throw 'Unknown keyword argument ' + xstring(arguments[i].name);
            }
            return (function(){
                return (v483 !== l5.value ? (function(v486){
                    return (l56.fvalue(pv, 1, v486) !== l5.value ? (function(){
                        try {
                        var v487 = [];
                            return (function(v488,v489){
                                (function(){
                                    while(v488 !== l5.value){
                                        (v489 = (function(){
                                            var tmp = v488;
                                            return tmp === l5.value? l5.value: tmp.car;
                                        })());
                                        (function(){
                                            ((function(){
                                                var f = v484;
                                                return (typeof f === 'function'? f: f.fvalue)(pv, 2, (function(){
                                                    var f = v483;
                                                    return (typeof f === 'function'? f: f.fvalue)(pv, 1, v489)
                                                })(), v481)
                                            })() !== l5.value ? (function(){
                                                var values = mv;
                                                throw ({type: 'block', id: v487, values: v489, message: 'Return from unknown block NIL.'})
                                            })() : l5.value);
                                            return l5.value;
                                        })();
                                        (v488 = (function(){
                                            var tmp = v488;
                                            return tmp === l5.value? l5.value: tmp.cdr;
                                        })());
                                    }return l5.value;
                                })();
                                return l5.value;
                            })(v486,l5.value);
                        }
                        catch (cf){
                            if (cf.type == 'block' && cf.id == v487)
                                return values.apply(this, forcemv(cf.values));
                            else
                                throw cf;
                        }
                    })() : (function(){
                        try {
                        var v490 = [];
                            return (function(v491,v492){
                                (function(){
                                    while((function(){
                                        var x1 = v491;
                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                        var x2 = v492;
                                        if (typeof x2 !== 'number') throw 'Not a number!';
                                        return (x1<x2?l4.value: l5.value);
                                    })() !== l5.value){
                                        (function(){
                                            (function(v493){
                                                return ((function(){
                                                    var f = v484;
                                                    return (typeof f === 'function'? f: f.fvalue)(pv, 2, (function(){
                                                        var f = v483;
                                                        return (typeof f === 'function'? f: f.fvalue)(pv, 1, v493)
                                                    })(), v481)
                                                })() !== l5.value ? (function(){
                                                    var values = mv;
                                                    throw ({type: 'block', id: v490, values: v493, message: 'Return from unknown block NIL.'})
                                                })() : l5.value);
                                            })((function(){
                                                var x = (v486)[v491];
                                                if (x === undefined) throw 'Out of range';
                                                return x;
                                            })());
                                            return l5.value;
                                        })();
                                        (function(){
                                            var v494 = 1;
                                            var v495 = (function(){
                                                var x1 = v491;
                                                if (typeof x1 !== 'number') throw 'Not a number!';
                                                var x2 = v494;
                                                if (typeof x2 !== 'number') throw 'Not a number!';
                                                return x1+x2;
                                            })();
                                            return (v491 = v495);
                                        })();
                                    }return l5.value;
                                })();
                                return l5.value;
                            })(0,l54.fvalue(pv, 1, v486));
                        }
                        catch (cf){
                            if (cf.type == 'block' && cf.id == v490)
                                return values.apply(this, forcemv(cf.values));
                            else
                                throw cf;
                        }
                    })());
                })(v482) : (function(v496){
                    return (l56.fvalue(pv, 1, v496) !== l5.value ? (function(){
                        try {
                        var v497 = [];
                            return (function(v498,v499){
                                (function(){
                                    while(v498 !== l5.value){
                                        (v499 = (function(){
                                            var tmp = v498;
                                            return tmp === l5.value? l5.value: tmp.car;
                                        })());
                                        (function(){
                                            ((function(){
                                                var f = v484;
                                                return (typeof f === 'function'? f: f.fvalue)(pv, 2, v499, v481)
                                            })() !== l5.value ? (function(){
                                                var values = mv;
                                                throw ({type: 'block', id: v497, values: v499, message: 'Return from unknown block NIL.'})
                                            })() : l5.value);
                                            return l5.value;
                                        })();
                                        (v498 = (function(){
                                            var tmp = v498;
                                            return tmp === l5.value? l5.value: tmp.cdr;
                                        })());
                                    }return l5.value;
                                })();
                                return l5.value;
                            })(v496,l5.value);
                        }
                        catch (cf){
                            if (cf.type == 'block' && cf.id == v497)
                                return values.apply(this, forcemv(cf.values));
                            else
                                throw cf;
                        }
                    })() : (function(){
                        try {
                        var v500 = [];
                            return (function(v501,v502){
                                (function(){
                                    while((function(){
                                        var x1 = v501;
                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                        var x2 = v502;
                                        if (typeof x2 !== 'number') throw 'Not a number!';
                                        return (x1<x2?l4.value: l5.value);
                                    })() !== l5.value){
                                        (function(){
                                            (function(v503){
                                                return ((function(){
                                                    var f = v484;
                                                    return (typeof f === 'function'? f: f.fvalue)(pv, 2, v503, v481)
                                                })() !== l5.value ? (function(){
                                                    var values = mv;
                                                    throw ({type: 'block', id: v500, values: v503, message: 'Return from unknown block NIL.'})
                                                })() : l5.value);
                                            })((function(){
                                                var x = (v496)[v501];
                                                if (x === undefined) throw 'Out of range';
                                                return x;
                                            })());
                                            return l5.value;
                                        })();
                                        (function(){
                                            var v504 = 1;
                                            var v505 = (function(){
                                                var x1 = v501;
                                                if (typeof x1 !== 'number') throw 'Not a number!';
                                                var x2 = v504;
                                                if (typeof x2 !== 'number') throw 'Not a number!';
                                                return x1+x2;
                                            })();
                                            return (v501 = v505);
                                        })();
                                    }return l5.value;
                                })();
                                return l5.value;
                            })(0,l54.fvalue(pv, 1, v496));
                        }
                        catch (cf){
                            if (cf.type == 'block' && cf.id == v500)
                                return values.apply(this, forcemv(cf.values));
                            else
                                throw cf;
                        }
                    })());
                })(v482));
            })();
        });
        func.fname = 'FIND';
        return func;
    })();
    return l210;
})();
var l211 = (new Symbol(make_lisp_string("FIND-IF")));
(function(){
    (l211).fvalue = (function(){
        var func = (function (values,nargs,v506,v507){
            checkArgsAtLeast(nargs, 2);
            var v508; 
            var i;
            for (i=2; i<nargs; i+=2){
                if (arguments[i+2] === l176.value){
                    v508 = arguments[i+3];
                    break;
                }
            }
            if (i == nargs){
                v508 = l5.value;
            }
            for (i=2; i<nargs; i+=2){
                if (arguments[i+2] !== l176.value)
                    throw 'Unknown keyword argument ' + xstring(arguments[i].name);
            }
            return (function(){
                return (v508 !== l5.value ? (function(v510){
                    return (l56.fvalue(pv, 1, v510) !== l5.value ? (function(){
                        try {
                        var v511 = [];
                            return (function(v512,v513){
                                (function(){
                                    while(v512 !== l5.value){
                                        (v513 = (function(){
                                            var tmp = v512;
                                            return tmp === l5.value? l5.value: tmp.car;
                                        })());
                                        (function(){
                                            ((function(){
                                                var f = v506;
                                                return (typeof f === 'function'? f: f.fvalue)(pv, 1, (function(){
                                                    var f = v508;
                                                    return (typeof f === 'function'? f: f.fvalue)(pv, 1, v513)
                                                })())
                                            })() !== l5.value ? (function(){
                                                var values = mv;
                                                throw ({type: 'block', id: v511, values: v513, message: 'Return from unknown block NIL.'})
                                            })() : l5.value);
                                            return l5.value;
                                        })();
                                        (v512 = (function(){
                                            var tmp = v512;
                                            return tmp === l5.value? l5.value: tmp.cdr;
                                        })());
                                    }return l5.value;
                                })();
                                return l5.value;
                            })(v510,l5.value);
                        }
                        catch (cf){
                            if (cf.type == 'block' && cf.id == v511)
                                return values.apply(this, forcemv(cf.values));
                            else
                                throw cf;
                        }
                    })() : (function(){
                        try {
                        var v514 = [];
                            return (function(v515,v516){
                                (function(){
                                    while((function(){
                                        var x1 = v515;
                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                        var x2 = v516;
                                        if (typeof x2 !== 'number') throw 'Not a number!';
                                        return (x1<x2?l4.value: l5.value);
                                    })() !== l5.value){
                                        (function(){
                                            (function(v517){
                                                return ((function(){
                                                    var f = v506;
                                                    return (typeof f === 'function'? f: f.fvalue)(pv, 1, (function(){
                                                        var f = v508;
                                                        return (typeof f === 'function'? f: f.fvalue)(pv, 1, v517)
                                                    })())
                                                })() !== l5.value ? (function(){
                                                    var values = mv;
                                                    throw ({type: 'block', id: v514, values: v517, message: 'Return from unknown block NIL.'})
                                                })() : l5.value);
                                            })((function(){
                                                var x = (v510)[v515];
                                                if (x === undefined) throw 'Out of range';
                                                return x;
                                            })());
                                            return l5.value;
                                        })();
                                        (function(){
                                            var v518 = 1;
                                            var v519 = (function(){
                                                var x1 = v515;
                                                if (typeof x1 !== 'number') throw 'Not a number!';
                                                var x2 = v518;
                                                if (typeof x2 !== 'number') throw 'Not a number!';
                                                return x1+x2;
                                            })();
                                            return (v515 = v519);
                                        })();
                                    }return l5.value;
                                })();
                                return l5.value;
                            })(0,l54.fvalue(pv, 1, v510));
                        }
                        catch (cf){
                            if (cf.type == 'block' && cf.id == v514)
                                return values.apply(this, forcemv(cf.values));
                            else
                                throw cf;
                        }
                    })());
                })(v507) : (function(v520){
                    return (l56.fvalue(pv, 1, v520) !== l5.value ? (function(){
                        try {
                        var v521 = [];
                            return (function(v522,v523){
                                (function(){
                                    while(v522 !== l5.value){
                                        (v523 = (function(){
                                            var tmp = v522;
                                            return tmp === l5.value? l5.value: tmp.car;
                                        })());
                                        (function(){
                                            ((function(){
                                                var f = v506;
                                                return (typeof f === 'function'? f: f.fvalue)(pv, 1, v523)
                                            })() !== l5.value ? (function(){
                                                var values = mv;
                                                throw ({type: 'block', id: v521, values: v523, message: 'Return from unknown block NIL.'})
                                            })() : l5.value);
                                            return l5.value;
                                        })();
                                        (v522 = (function(){
                                            var tmp = v522;
                                            return tmp === l5.value? l5.value: tmp.cdr;
                                        })());
                                    }return l5.value;
                                })();
                                return l5.value;
                            })(v520,l5.value);
                        }
                        catch (cf){
                            if (cf.type == 'block' && cf.id == v521)
                                return values.apply(this, forcemv(cf.values));
                            else
                                throw cf;
                        }
                    })() : (function(){
                        try {
                        var v524 = [];
                            return (function(v525,v526){
                                (function(){
                                    while((function(){
                                        var x1 = v525;
                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                        var x2 = v526;
                                        if (typeof x2 !== 'number') throw 'Not a number!';
                                        return (x1<x2?l4.value: l5.value);
                                    })() !== l5.value){
                                        (function(){
                                            (function(v527){
                                                return ((function(){
                                                    var f = v506;
                                                    return (typeof f === 'function'? f: f.fvalue)(pv, 1, v527)
                                                })() !== l5.value ? (function(){
                                                    var values = mv;
                                                    throw ({type: 'block', id: v524, values: v527, message: 'Return from unknown block NIL.'})
                                                })() : l5.value);
                                            })((function(){
                                                var x = (v520)[v525];
                                                if (x === undefined) throw 'Out of range';
                                                return x;
                                            })());
                                            return l5.value;
                                        })();
                                        (function(){
                                            var v528 = 1;
                                            var v529 = (function(){
                                                var x1 = v525;
                                                if (typeof x1 !== 'number') throw 'Not a number!';
                                                var x2 = v528;
                                                if (typeof x2 !== 'number') throw 'Not a number!';
                                                return x1+x2;
                                            })();
                                            return (v525 = v529);
                                        })();
                                    }return l5.value;
                                })();
                                return l5.value;
                            })(0,l54.fvalue(pv, 1, v520));
                        }
                        catch (cf){
                            if (cf.type == 'block' && cf.id == v524)
                                return values.apply(this, forcemv(cf.values));
                            else
                                throw cf;
                        }
                    })());
                })(v507));
            })();
        });
        func.fname = 'FIND-IF';
        return func;
    })();
    return l211;
})();
var l212 = (new Symbol(make_lisp_string("POSITION")));
var l213 = (new Symbol(make_lisp_string("SEQ")));
(function(){
    (l212).fvalue = (function(){
        var func = (function (values,nargs,v530,v531){
            checkArgsAtLeast(nargs, 2);
            var v532; 
            var i;
            for (i=2; i<nargs; i+=2){
                if (arguments[i+2] === l177.value){
                    v532 = arguments[i+3];
                    break;
                }
            }
            if (i == nargs){
                v532 = (function(){
                    var symbol = l27;
                    var func = symbol.fvalue;
                    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                    return func;
                })();
            }
            for (i=2; i<nargs; i+=2){
                if (arguments[i+2] !== l177.value)
                    throw 'Unknown keyword argument ' + xstring(arguments[i].name);
            }
            return (function(){
                return (function(v534){
                    return (l56.fvalue(pv, 1, v534) !== l5.value ? (function(v535){
                        return (function(){
                            try {
                            var v536 = [];
                                return (function(v537,v538){
                                    (function(){
                                        while(v537 !== l5.value){
                                            (v538 = (function(){
                                                var tmp = v537;
                                                return tmp === l5.value? l5.value: tmp.car;
                                            })());
                                            (function(){
                                                (function(){
                                                    var v539 = 1;
                                                    var v540 = (function(){
                                                        var x1 = v535;
                                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                                        var x2 = v539;
                                                        if (typeof x2 !== 'number') throw 'Not a number!';
                                                        return x1+x2;
                                                    })();
                                                    return (v535 = v540);
                                                })();
                                                ((function(){
                                                    var f = v532;
                                                    return (typeof f === 'function'? f: f.fvalue)(pv, 2, v530, v538)
                                                })() !== l5.value ? (function(){
                                                    var values = mv;
                                                    throw ({type: 'block', id: v536, values: v535, message: 'Return from unknown block NIL.'})
                                                })() : l5.value);
                                                return l5.value;
                                            })();
                                            (v537 = (function(){
                                                var tmp = v537;
                                                return tmp === l5.value? l5.value: tmp.cdr;
                                            })());
                                        }return l5.value;
                                    })();
                                    return l5.value;
                                })(v534,l5.value);
                            }
                            catch (cf){
                                if (cf.type == 'block' && cf.id == v536)
                                    return values.apply(this, forcemv(cf.values));
                                else
                                    throw cf;
                            }
                        })();
                    })(-1) : (function(){
                        try {
                        var v541 = [];
                            return (function(v542,v543){
                                (function(){
                                    while((function(){
                                        var x1 = v542;
                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                        var x2 = v543;
                                        if (typeof x2 !== 'number') throw 'Not a number!';
                                        return (x1<x2?l4.value: l5.value);
                                    })() !== l5.value){
                                        (function(){
                                            (function(v544){
                                                return ((function(){
                                                    var f = v532;
                                                    return (typeof f === 'function'? f: f.fvalue)(pv, 2, v530, v544)
                                                })() !== l5.value ? (function(){
                                                    var values = mv;
                                                    throw ({type: 'block', id: v541, values: v542, message: 'Return from unknown block NIL.'})
                                                })() : l5.value);
                                            })((function(){
                                                var x = (v534)[v542];
                                                if (x === undefined) throw 'Out of range';
                                                return x;
                                            })());
                                            return l5.value;
                                        })();
                                        (function(){
                                            var v545 = 1;
                                            var v546 = (function(){
                                                var x1 = v542;
                                                if (typeof x1 !== 'number') throw 'Not a number!';
                                                var x2 = v545;
                                                if (typeof x2 !== 'number') throw 'Not a number!';
                                                return x1+x2;
                                            })();
                                            return (v542 = v546);
                                        })();
                                    }return l5.value;
                                })();
                                return l5.value;
                            })(0,l54.fvalue(pv, 1, v534));
                        }
                        catch (cf){
                            if (cf.type == 'block' && cf.id == v541)
                                return values.apply(this, forcemv(cf.values));
                            else
                                throw cf;
                        }
                    })());
                })((function(){
                    var symbol = l213;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })());
            })();
        });
        func.fname = 'POSITION';
        return func;
    })();
    return l212;
})();
var l214 = (new Symbol(make_lisp_string("REMOVE")));
(function(){
    (l214).fvalue = (function(){
        var func = (function (values,nargs,v547,v548){
            checkArgs(nargs, 2);
            return (function(){
                return (l44.fvalue(pv, 1, v548) !== l5.value ? l5.value : (l56.fvalue(pv, 1, v548) !== l5.value ? (function(){
                    var v550 = ({car: l5.value, cdr: l5.value});
                    var v551 = v550;
                    (function(v552){
                        return (l56.fvalue(pv, 1, v552) !== l5.value ? (function(){
                            return (function(v554,v555){
                                (function(){
                                    while(v554 !== l5.value){
                                        (v555 = (function(){
                                            var tmp = v554;
                                            return tmp === l5.value? l5.value: tmp.car;
                                        })());
                                        (function(){
                                            (l27.fvalue(pv, 2, v547, v555) !== l5.value ? l5.value : (function(v556){
                                                (function(){
                                                    var x = v551;
                                                    if (typeof x != 'object')
                                                        throw 'The value ' + x + ' is not a type object.';
                                                    return (x.cdr = v556, x);
                                                })();
                                                return (v551 = v556);
                                            })(l92.fvalue(pv, 1, v555)));
                                            return l5.value;
                                        })();
                                        (v554 = (function(){
                                            var tmp = v554;
                                            return tmp === l5.value? l5.value: tmp.cdr;
                                        })());
                                    }return l5.value;
                                })();
                                return l5.value;
                            })(v552,l5.value);
                        })() : (function(){
                            return (function(v558,v559){
                                (function(){
                                    while((function(){
                                        var x1 = v558;
                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                        var x2 = v559;
                                        if (typeof x2 !== 'number') throw 'Not a number!';
                                        return (x1<x2?l4.value: l5.value);
                                    })() !== l5.value){
                                        (function(){
                                            (function(v560){
                                                return (l27.fvalue(pv, 2, v547, v560) !== l5.value ? l5.value : (function(v561){
                                                    (function(){
                                                        var x = v551;
                                                        if (typeof x != 'object')
                                                            throw 'The value ' + x + ' is not a type object.';
                                                        return (x.cdr = v561, x);
                                                    })();
                                                    return (v551 = v561);
                                                })(l92.fvalue(pv, 1, v560)));
                                            })((function(){
                                                var x = (v552)[v558];
                                                if (x === undefined) throw 'Out of range';
                                                return x;
                                            })());
                                            return l5.value;
                                        })();
                                        (function(){
                                            var v562 = 1;
                                            var v563 = (function(){
                                                var x1 = v558;
                                                if (typeof x1 !== 'number') throw 'Not a number!';
                                                var x2 = v562;
                                                if (typeof x2 !== 'number') throw 'Not a number!';
                                                return x1+x2;
                                            })();
                                            return (v558 = v563);
                                        })();
                                    }return l5.value;
                                })();
                                return l5.value;
                            })(0,l54.fvalue(pv, 1, v552));
                        })());
                    })(v548);
                    return (function(){
                        var tmp = v550;
                        return tmp === l5.value? l5.value: tmp.cdr;
                    })();
                })() : (function(v564){
                    (function(v565){
                        return (l56.fvalue(pv, 1, v565) !== l5.value ? (function(v566){
                            return (function(){
                                return (function(v568,v569){
                                    (function(){
                                        while(v568 !== l5.value){
                                            (v569 = (function(){
                                                var tmp = v568;
                                                return tmp === l5.value? l5.value: tmp.car;
                                            })());
                                            (function(){
                                                (function(){
                                                    var v570 = 1;
                                                    var v571 = (function(){
                                                        var x1 = v566;
                                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                                        var x2 = v570;
                                                        if (typeof x2 !== 'number') throw 'Not a number!';
                                                        return x1+x2;
                                                    })();
                                                    return (v566 = v571);
                                                })();
                                                (l27.fvalue(pv, 2, v547, v569) !== l5.value ? (v564 !== l5.value ? l5.value : (function(){
                                                    (v564 = (function(){
                                                        var r = [];
                                                        for (var i = 0; i < 0; i++)
                                                            r.push(l5.value);
                                                        return r;
                                                    })());
                                                    return (function(){
                                                        return (function(v573,v574){
                                                            (function(){
                                                                while((function(){
                                                                    var x1 = v573;
                                                                    if (typeof x1 !== 'number') throw 'Not a number!';
                                                                    var x2 = v574;
                                                                    if (typeof x2 !== 'number') throw 'Not a number!';
                                                                    return (x1<x2?l4.value: l5.value);
                                                                })() !== l5.value){
                                                                    (function(){
                                                                        (function(){
                                                                            var v = v564;
                                                                            v.push((function(){
                                                                                var x = (v548)[v573];
                                                                                if (x === undefined) throw 'Out of range';
                                                                                return x;
                                                                            })());
                                                                            return v;
                                                                        })();
                                                                        return l5.value;
                                                                    })();
                                                                    (function(){
                                                                        var v575 = 1;
                                                                        var v576 = (function(){
                                                                            var x1 = v573;
                                                                            if (typeof x1 !== 'number') throw 'Not a number!';
                                                                            var x2 = v575;
                                                                            if (typeof x2 !== 'number') throw 'Not a number!';
                                                                            return x1+x2;
                                                                        })();
                                                                        return (v573 = v576);
                                                                    })();
                                                                }return l5.value;
                                                            })();
                                                            return l5.value;
                                                        })(0,v566);
                                                    })();
                                                })()) : (v564 !== l5.value ? (function(){
                                                    var v = v564;
                                                    v.push(v569);
                                                    return v;
                                                })() : l5.value));
                                                return l5.value;
                                            })();
                                            (v568 = (function(){
                                                var tmp = v568;
                                                return tmp === l5.value? l5.value: tmp.cdr;
                                            })());
                                        }return l5.value;
                                    })();
                                    return l5.value;
                                })(v565,l5.value);
                            })();
                        })(-1) : (function(){
                            return (function(v578,v579){
                                (function(){
                                    while((function(){
                                        var x1 = v578;
                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                        var x2 = v579;
                                        if (typeof x2 !== 'number') throw 'Not a number!';
                                        return (x1<x2?l4.value: l5.value);
                                    })() !== l5.value){
                                        (function(){
                                            (function(v580){
                                                return (l27.fvalue(pv, 2, v547, v580) !== l5.value ? (v564 !== l5.value ? l5.value : (function(){
                                                    (v564 = (function(){
                                                        var r = [];
                                                        for (var i = 0; i < 0; i++)
                                                            r.push(l5.value);
                                                        return r;
                                                    })());
                                                    return (function(){
                                                        return (function(v582,v583){
                                                            (function(){
                                                                while((function(){
                                                                    var x1 = v582;
                                                                    if (typeof x1 !== 'number') throw 'Not a number!';
                                                                    var x2 = v583;
                                                                    if (typeof x2 !== 'number') throw 'Not a number!';
                                                                    return (x1<x2?l4.value: l5.value);
                                                                })() !== l5.value){
                                                                    (function(){
                                                                        (function(){
                                                                            var v = v564;
                                                                            v.push((function(){
                                                                                var x = (v548)[v582];
                                                                                if (x === undefined) throw 'Out of range';
                                                                                return x;
                                                                            })());
                                                                            return v;
                                                                        })();
                                                                        return l5.value;
                                                                    })();
                                                                    (function(){
                                                                        var v584 = 1;
                                                                        var v585 = (function(){
                                                                            var x1 = v582;
                                                                            if (typeof x1 !== 'number') throw 'Not a number!';
                                                                            var x2 = v584;
                                                                            if (typeof x2 !== 'number') throw 'Not a number!';
                                                                            return x1+x2;
                                                                        })();
                                                                        return (v582 = v585);
                                                                    })();
                                                                }return l5.value;
                                                            })();
                                                            return l5.value;
                                                        })(0,v578);
                                                    })();
                                                })()) : (v564 !== l5.value ? (function(){
                                                    var v = v564;
                                                    v.push(v580);
                                                    return v;
                                                })() : l5.value));
                                            })((function(){
                                                var x = (v565)[v578];
                                                if (x === undefined) throw 'Out of range';
                                                return x;
                                            })());
                                            return l5.value;
                                        })();
                                        (function(){
                                            var v586 = 1;
                                            var v587 = (function(){
                                                var x1 = v578;
                                                if (typeof x1 !== 'number') throw 'Not a number!';
                                                var x2 = v586;
                                                if (typeof x2 !== 'number') throw 'Not a number!';
                                                return x1+x2;
                                            })();
                                            return (v578 = v587);
                                        })();
                                    }return l5.value;
                                })();
                                return l5.value;
                            })(0,l54.fvalue(pv, 1, v565));
                        })());
                    })(v548);
                    return (function(v588){
                        return (v588 !== l5.value ? v588 : v548);
                    })(v564);
                })(l5.value)));
            })();
        });
        func.fname = 'REMOVE';
        return func;
    })();
    return l214;
})();
(function(){
    (l102).fvalue = (function(){
        var func = (function (values,nargs,v589,v590){
            checkArgs(nargs, 2);
            return (function(){
                try {
                var v591 = [];
                    return (function(v592){
                        return (l56.fvalue(pv, 1, v592) !== l5.value ? (function(){
                            return (function(v594,v595){
                                (function(){
                                    while(v594 !== l5.value){
                                        (v595 = (function(){
                                            var tmp = v594;
                                            return tmp === l5.value? l5.value: tmp.car;
                                        })());
                                        (function(){
                                            ((function(){
                                                var f = v589;
                                                return (typeof f === 'function'? f: f.fvalue)(pv, 1, v595)
                                            })() !== l5.value ? (function(){
                                                var values = mv;
                                                throw ({type: 'block', id: v591, values: l4.value, message: 'Return from unknown block SOME.'})
                                            })() : l5.value);
                                            return l5.value;
                                        })();
                                        (v594 = (function(){
                                            var tmp = v594;
                                            return tmp === l5.value? l5.value: tmp.cdr;
                                        })());
                                    }return l5.value;
                                })();
                                return l5.value;
                            })(v592,l5.value);
                        })() : (function(){
                            return (function(v597,v598){
                                (function(){
                                    while((function(){
                                        var x1 = v597;
                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                        var x2 = v598;
                                        if (typeof x2 !== 'number') throw 'Not a number!';
                                        return (x1<x2?l4.value: l5.value);
                                    })() !== l5.value){
                                        (function(){
                                            (function(v599){
                                                return ((function(){
                                                    var f = v589;
                                                    return (typeof f === 'function'? f: f.fvalue)(pv, 1, v599)
                                                })() !== l5.value ? (function(){
                                                    var values = mv;
                                                    throw ({type: 'block', id: v591, values: l4.value, message: 'Return from unknown block SOME.'})
                                                })() : l5.value);
                                            })((function(){
                                                var x = (v592)[v597];
                                                if (x === undefined) throw 'Out of range';
                                                return x;
                                            })());
                                            return l5.value;
                                        })();
                                        (function(){
                                            var v600 = 1;
                                            var v601 = (function(){
                                                var x1 = v597;
                                                if (typeof x1 !== 'number') throw 'Not a number!';
                                                var x2 = v600;
                                                if (typeof x2 !== 'number') throw 'Not a number!';
                                                return x1+x2;
                                            })();
                                            return (v597 = v601);
                                        })();
                                    }return l5.value;
                                })();
                                return l5.value;
                            })(0,l54.fvalue(pv, 1, v592));
                        })());
                    })(v590);
                }
                catch (cf){
                    if (cf.type == 'block' && cf.id == v591)
                        return values.apply(this, forcemv(cf.values));
                    else
                        throw cf;
                }
            })();
        });
        func.fname = 'SOME';
        return func;
    })();
    return l102;
})();
var l215 = (new Symbol(make_lisp_string("EVERY")));
(function(){
    (l215).fvalue = (function(){
        var func = (function (values,nargs,v602,v603){
            checkArgs(nargs, 2);
            return (function(){
                try {
                var v604 = [];
                    (function(v605){
                        return (l56.fvalue(pv, 1, v605) !== l5.value ? (function(){
                            return (function(v607,v608){
                                (function(){
                                    while(v607 !== l5.value){
                                        (v608 = (function(){
                                            var tmp = v607;
                                            return tmp === l5.value? l5.value: tmp.car;
                                        })());
                                        (function(){
                                            ((function(){
                                                var f = v602;
                                                return (typeof f === 'function'? f: f.fvalue)(pv, 1, v608)
                                            })() !== l5.value ? l5.value : (function(){
                                                var values = mv;
                                                throw ({type: 'block', id: v604, values: l5.value, message: 'Return from unknown block EVERY.'})
                                            })());
                                            return l5.value;
                                        })();
                                        (v607 = (function(){
                                            var tmp = v607;
                                            return tmp === l5.value? l5.value: tmp.cdr;
                                        })());
                                    }return l5.value;
                                })();
                                return l5.value;
                            })(v605,l5.value);
                        })() : (function(){
                            return (function(v610,v611){
                                (function(){
                                    while((function(){
                                        var x1 = v610;
                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                        var x2 = v611;
                                        if (typeof x2 !== 'number') throw 'Not a number!';
                                        return (x1<x2?l4.value: l5.value);
                                    })() !== l5.value){
                                        (function(){
                                            (function(v612){
                                                return ((function(){
                                                    var f = v602;
                                                    return (typeof f === 'function'? f: f.fvalue)(pv, 1, v612)
                                                })() !== l5.value ? l5.value : (function(){
                                                    var values = mv;
                                                    throw ({type: 'block', id: v604, values: l5.value, message: 'Return from unknown block EVERY.'})
                                                })());
                                            })((function(){
                                                var x = (v605)[v610];
                                                if (x === undefined) throw 'Out of range';
                                                return x;
                                            })());
                                            return l5.value;
                                        })();
                                        (function(){
                                            var v613 = 1;
                                            var v614 = (function(){
                                                var x1 = v610;
                                                if (typeof x1 !== 'number') throw 'Not a number!';
                                                var x2 = v613;
                                                if (typeof x2 !== 'number') throw 'Not a number!';
                                                return x1+x2;
                                            })();
                                            return (v610 = v614);
                                        })();
                                    }return l5.value;
                                })();
                                return l5.value;
                            })(0,l54.fvalue(pv, 1, v605));
                        })());
                    })(v603);
                    return l4.value;
                }
                catch (cf){
                    if (cf.type == 'block' && cf.id == v604)
                        return values.apply(this, forcemv(cf.values));
                    else
                        throw cf;
                }
            })();
        });
        func.fname = 'EVERY';
        return func;
    })();
    return l215;
})();
var l216 = (new Symbol(make_lisp_string("REMOVE-IF")));
var l217 = (new Symbol(make_lisp_string("LIST-REMOVE-IF")));
var l218 = (new Symbol(make_lisp_string("VECTOR-REMOVE-IF")));
(function(){
    (l216).fvalue = (function(){
        var func = (function (values,nargs,v615,v616){
            checkArgs(nargs, 2);
            return (function(){
                return (l56.fvalue(pv, 1, v616) !== l5.value ? l217.fvalue(values, 3, v615, v616, l5.value) : (((function(){
                    var x = v616;
                    return typeof x === 'object' && 'length' in x;
                })()?l4.value: l5.value) !== l5.value ? l218.fvalue(values, 3, v615, v616, l5.value) : l207.fvalue(values, 1, v616)));
            })();
        });
        func.fname = 'REMOVE-IF';
        return func;
    })();
    return l216;
})();
var l219 = (new Symbol(make_lisp_string("REMOVE-IF-NOT")));
(function(){
    (l219).fvalue = (function(){
        var func = (function (values,nargs,v618,v619){
            checkArgs(nargs, 2);
            return (function(){
                return (l56.fvalue(pv, 1, v619) !== l5.value ? l217.fvalue(values, 3, v618, v619, l4.value) : (((function(){
                    var x = v619;
                    return typeof x === 'object' && 'length' in x;
                })()?l4.value: l5.value) !== l5.value ? l218.fvalue(values, 3, v618, v619, l4.value) : l207.fvalue(values, 1, v619)));
            })();
        });
        func.fname = 'REMOVE-IF-NOT';
        return func;
    })();
    return l219;
})();
(function(){
    (l217).fvalue = (function(){
        var func = (function (values,nargs,v621,v622,v623){
            checkArgs(nargs, 3);
            return (function(){
                return (l129.fvalue(pv, 1, v622) !== l5.value ? l5.value : (function(v625){
                    return ((v623 !== l5.value ? l28.fvalue(pv, 1, v625) : v625) !== l5.value ? l217.fvalue(values, 3, v621, (function(){
                        var tmp = v622;
                        return tmp === l5.value? l5.value: tmp.cdr;
                    })(), v623) : ({car: (function(){
                        var tmp = v622;
                        return tmp === l5.value? l5.value: tmp.car;
                    })(), cdr: l217.fvalue(pv, 3, v621, (function(){
                        var tmp = v622;
                        return tmp === l5.value? l5.value: tmp.cdr;
                    })(), v623)}));
                })((function(){
                    var f = v621;
                    return (typeof f === 'function'? f: f.fvalue)(pv, 1, (function(){
                        var tmp = v622;
                        return tmp === l5.value? l5.value: tmp.car;
                    })())
                })()));
            })();
        });
        func.fname = 'LIST-REMOVE-IF';
        return func;
    })();
    return l217;
})();
(function(){
    (l218).fvalue = (function(){
        var func = (function (values,nargs,v626,v627,v628){
            checkArgs(nargs, 3);
            return (function(){
                return (function(v630){
                    (function(v631){
                        return (l56.fvalue(pv, 1, v631) !== l5.value ? (function(v632){
                            return (function(){
                                return (function(v634,v635){
                                    (function(){
                                        while(v634 !== l5.value){
                                            (v635 = (function(){
                                                var tmp = v634;
                                                return tmp === l5.value? l5.value: tmp.car;
                                            })());
                                            (function(){
                                                (function(){
                                                    var v636 = 1;
                                                    var v637 = (function(){
                                                        var x1 = v632;
                                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                                        var x2 = v636;
                                                        if (typeof x2 !== 'number') throw 'Not a number!';
                                                        return x1+x2;
                                                    })();
                                                    return (v632 = v637);
                                                })();
                                                (function(v638){
                                                    return ((v628 !== l5.value ? v638 : l28.fvalue(pv, 1, v638)) !== l5.value ? (function(){
                                                        var v = v630;
                                                        v.push(v635);
                                                        return v;
                                                    })() : l5.value);
                                                })((function(){
                                                    var f = v626;
                                                    return (typeof f === 'function'? f: f.fvalue)(pv, 1, v635)
                                                })());
                                                return l5.value;
                                            })();
                                            (v634 = (function(){
                                                var tmp = v634;
                                                return tmp === l5.value? l5.value: tmp.cdr;
                                            })());
                                        }return l5.value;
                                    })();
                                    return l5.value;
                                })(v631,l5.value);
                            })();
                        })(-1) : (function(){
                            return (function(v640,v641){
                                (function(){
                                    while((function(){
                                        var x1 = v640;
                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                        var x2 = v641;
                                        if (typeof x2 !== 'number') throw 'Not a number!';
                                        return (x1<x2?l4.value: l5.value);
                                    })() !== l5.value){
                                        (function(){
                                            (function(v642){
                                                return (function(v643){
                                                    return ((v628 !== l5.value ? v643 : l28.fvalue(pv, 1, v643)) !== l5.value ? (function(){
                                                        var v = v630;
                                                        v.push(v642);
                                                        return v;
                                                    })() : l5.value);
                                                })((function(){
                                                    var f = v626;
                                                    return (typeof f === 'function'? f: f.fvalue)(pv, 1, v642)
                                                })());
                                            })((function(){
                                                var x = (v631)[v640];
                                                if (x === undefined) throw 'Out of range';
                                                return x;
                                            })());
                                            return l5.value;
                                        })();
                                        (function(){
                                            var v644 = 1;
                                            var v645 = (function(){
                                                var x1 = v640;
                                                if (typeof x1 !== 'number') throw 'Not a number!';
                                                var x2 = v644;
                                                if (typeof x2 !== 'number') throw 'Not a number!';
                                                return x1+x2;
                                            })();
                                            return (v640 = v645);
                                        })();
                                    }return l5.value;
                                })();
                                return l5.value;
                            })(0,l54.fvalue(pv, 1, v631));
                        })());
                    })(v627);
                    return v630;
                })((function(){
                    var r = [];
                    for (var i = 0; i < 0; i++)
                        r.push(l5.value);
                    return r;
                })());
            })();
        });
        func.fname = 'VECTOR-REMOVE-IF';
        return func;
    })();
    return l218;
})();
var l220 = (new Symbol(make_lisp_string("SUBSEQ")));
var l221 = make_lisp_string("Start index must be smaller than end index");
var l222 = make_lisp_string("Ending index larger than length of list");
(function(){
    (l220).fvalue = (function(){
        var func = (function (values,nargs,v646,v647,v648){
            checkArgsAtLeast(nargs, 2);
            checkArgsAtMost(nargs, 3);
            switch(nargs){
            case 2:
                v648=l5.value;
            default: break;
            }
            return (function(){
                return (l56.fvalue(pv, 1, v646) !== l5.value ? (v648 !== l5.value ? (function(v650){
                    return (l25.fvalue(pv, 1, v650) !== l5.value ? l5.value : (l68.fvalue(pv, 1, v650) !== l5.value ? l78.fvalue(values, 1, l221) : (function(){
                        var v651 = l180.fvalue(pv, 1, l150.fvalue(pv, 2, v647, v646));
                        var v652 = v651;
                        (function(){
                            return (function(v654,v655){
                                (function(){
                                    while((function(){
                                        var x1 = v654;
                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                        var x2 = v655;
                                        if (typeof x2 !== 'number') throw 'Not a number!';
                                        return (x1<x2?l4.value: l5.value);
                                    })() !== l5.value){
                                        (function(){
                                            (v652 = (function(){
                                                var tmp = v652;
                                                return tmp === l5.value? l5.value: tmp.cdr;
                                            })());
                                            (l44.fvalue(pv, 1, v652) !== l5.value ? l78.fvalue(pv, 1, l222) : l5.value);
                                            return l5.value;
                                        })();
                                        (function(){
                                            var v656 = 1;
                                            var v657 = (function(){
                                                var x1 = v654;
                                                if (typeof x1 !== 'number') throw 'Not a number!';
                                                var x2 = v656;
                                                if (typeof x2 !== 'number') throw 'Not a number!';
                                                return x1+x2;
                                            })();
                                            return (v654 = v657);
                                        })();
                                    }return l5.value;
                                })();
                                return l5.value;
                            })(0,l24.fvalue(pv, 1, v650));
                        })();
                        (function(){
                            var x = v652;
                            if (typeof x != 'object')
                                throw 'The value ' + x + ' is not a type object.';
                            return (x.cdr = l5.value, x);
                        })();
                        return v651;
                    })()));
                })((function(){
                    var x1 = v648;
                    if (typeof x1 !== 'number') throw 'Not a number!';
                    var x2 = v647;
                    if (typeof x2 !== 'number') throw 'Not a number!';
                    return x1-x2;
                })()) : l180.fvalue(values, 1, l150.fvalue(pv, 2, v647, v646))) : (((function(){
                    var x = v646;
                    return typeof x === 'object' && 'length' in x;
                })()?l4.value: l5.value) !== l5.value ? (v648 !== l5.value ? (function(){
                    var vector = v646;
                    var a = v647;
                    var b;
                    b = v648;
                    return vector.slice(a,b);
                })() : (function(){
                    var vector = v646;
                    var a = v647;
                    var b;
                    return vector.slice(a,b);
                })()) : l207.fvalue(values, 1, v646)));
            })();
        });
        func.fname = 'SUBSEQ';
        return func;
    })();
    return l220;
})();
var l223 = (new Symbol(make_lisp_string("ESCAPE-SYMBOL-NAME-P")));
var l224 = (new Symbol(make_lisp_string("TERMINALP")));
(function(){
    (l223).fvalue = (function(){
        var func = (function (values,nargs,v658,v659){
            checkArgsAtLeast(nargs, 1);
            checkArgsAtMost(nargs, 2);
            switch(nargs){
            case 1:
                v659=l5.value;
            default: break;
            }
            return (function(){
                try {
                var v660 = [];
                    return (function(v661){
                        (function(){
                            return (function(v663,v664){
                                (function(){
                                    while((function(){
                                        var x1 = v663;
                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                        var x2 = v664;
                                        if (typeof x2 !== 'number') throw 'Not a number!';
                                        return (x1<x2?l4.value: l5.value);
                                    })() !== l5.value){
                                        (function(){
                                            (function(v665){
                                                (function(){
                                                    return (function(){
                                                        var func = (function (values,nargs,v667){
                                                            switch(nargs){
                                                            case 0:
                                                                v667=l5.value;
                                                            default: break;
                                                            }
                                                            var v666= l5.value;
                                                            for (var i = nargs-1; i>=1; i--)
                                                                v666 = {car: arguments[i+2], cdr: v666};
                                                            return (v661 = v667);
                                                        });
                                                        var args = [pv, 0];
                                                        return (function(){
                                                            var values = mv;
                                                            var vs;
                                                            vs = (v661 !== l5.value ? l64.fvalue(values, 2, v665, ".") : l5.value);
                                                            if (typeof vs === 'object' && 'multiple-value' in vs)
                                                                args = args.concat(vs);
                                                            else
                                                                args.push(vs);
                                                            args[1] = args.length-2;
                                                            return func.apply(window, args);
                                                        })();
                                                    })();
                                                })();
                                                return ((function(v668){
                                                    return (v668 !== l5.value ? v668 : (function(v669){
                                                        return (v669 !== l5.value ? v669 : (function(v670){
                                                            return (v670 !== l5.value ? v670 : (function(v671){
                                                                return (v671 !== l5.value ? v671 : l64.fvalue(pv, 2, v665, "|"));
                                                            })(l64.fvalue(pv, 2, v665, "\\")));
                                                        })((v659 !== l5.value ? l28.fvalue(pv, 1, l64.fvalue(pv, 2, v665, make_lisp_string(xstring(l125.fvalue(pv, 1, v665)).toUpperCase())[0])) : l5.value)));
                                                    })(l64.fvalue(pv, 2, v665, ":")));
                                                })(l224.fvalue(pv, 1, v665)) !== l5.value ? (function(){
                                                    var values = mv;
                                                    throw ({type: 'block', id: v660, values: l4.value, message: 'Return from unknown block ESCAPE-SYMBOL-NAME-P.'})
                                                })() : l5.value);
                                            })(v658[v663]);
                                            return l5.value;
                                        })();
                                        (function(){
                                            var v672 = 1;
                                            var v673 = (function(){
                                                var x1 = v663;
                                                if (typeof x1 !== 'number') throw 'Not a number!';
                                                var x2 = v672;
                                                if (typeof x2 !== 'number') throw 'Not a number!';
                                                return x1+x2;
                                            })();
                                            return (v663 = v673);
                                        })();
                                    }return l5.value;
                                })();
                                return l5.value;
                            })(0,l54.fvalue(pv, 1, v658));
                        })();
                        return v661;
                    })(l4.value);
                }
                catch (cf){
                    if (cf.type == 'block' && cf.id == v660)
                        return values.apply(this, forcemv(cf.values));
                    else
                        throw cf;
                }
            })();
        });
        func.fname = 'ESCAPE-SYMBOL-NAME-P';
        return func;
    })();
    return l223;
})();
var l225 = (new Symbol(make_lisp_string("POTENTIAL-NUMBER-P")));
var l226 = make_lisp_string("+-/._^");
var l227 = make_lisp_string("+-._^");
var l228 = make_lisp_string("+-)");
(function(){
    (l225).fvalue = (function(){
        var func = (function (values,nargs,v674){
            checkArgs(nargs, 1);
            return (function(){
                try {
                var v675 = [];
                    (function(){
                        return (function(v677,v678){
                            (function(){
                                while((function(){
                                    var x1 = v677;
                                    if (typeof x1 !== 'number') throw 'Not a number!';
                                    var x2 = v678;
                                    if (typeof x2 !== 'number') throw 'Not a number!';
                                    return (x1<x2?l4.value: l5.value);
                                })() !== l5.value){
                                    (function(){
                                        (function(v679){
                                            return (function(v680){
                                                return (v680 !== l5.value ? v680 : (function(v681){
                                                    return (v681 !== l5.value ? v681 : (l70.fvalue(pv, 1, v679) !== l5.value ? (((function(){
                                                        var x1 = v677;
                                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                                        var x2 = l24.fvalue(pv, 1, l54.fvalue(pv, 1, v674));
                                                        if (typeof x2 !== 'number') throw 'Not a number!';
                                                        return (x1<x2?l4.value: l5.value);
                                                    })() !== l5.value ? l70.fvalue(pv, 1, v674[l23.fvalue(pv, 1, v677)]) : l5.value) !== l5.value ? (function(){
                                                        var values = mv;
                                                        throw ({type: 'block', id: v675, values: l5.value, message: 'Return from unknown block POTENTIAL-NUMBER-P.'})
                                                    })() : l5.value) : (function(){
                                                        var values = mv;
                                                        throw ({type: 'block', id: v675, values: l5.value, message: 'Return from unknown block POTENTIAL-NUMBER-P.'})
                                                    })()));
                                                })(l210.fvalue(pv, 2, v679, l226)));
                                            })(l71.fvalue(pv, 1, v679));
                                        })(v674[v677]);
                                        return l5.value;
                                    })();
                                    (function(){
                                        var v682 = 1;
                                        var v683 = (function(){
                                            var x1 = v677;
                                            if (typeof x1 !== 'number') throw 'Not a number!';
                                            var x2 = v682;
                                            if (typeof x2 !== 'number') throw 'Not a number!';
                                            return x1+x2;
                                        })();
                                        return (v677 = v683);
                                    })();
                                }return l5.value;
                            })();
                            return l5.value;
                        })(0,l54.fvalue(pv, 1, v674));
                    })();
                    return (l211.fvalue(pv, 2, (function(){
                        var symbol = l71;
                        var func = symbol.fvalue;
                        if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                        return func;
                    })(), v674) !== l5.value ? ((function(v684){
                        return (l28.fvalue(pv, 1, l64.fvalue(pv, 2, v684, ":")) !== l5.value ? (function(v685){
                            return (v685 !== l5.value ? v685 : l210.fvalue(pv, 2, v684, l227));
                        })(l71.fvalue(pv, 1, v684)) : l5.value);
                    })(v674[0]) !== l5.value ? l28.fvalue(values, 1, l210.fvalue(pv, 2, v674[l24.fvalue(pv, 1, l54.fvalue(pv, 1, v674))], l228)) : l5.value) : l5.value);
                }
                catch (cf){
                    if (cf.type == 'block' && cf.id == v675)
                        return values.apply(this, forcemv(cf.values));
                    else
                        throw cf;
                }
            })();
        });
        func.fname = 'POTENTIAL-NUMBER-P';
        return func;
    })();
    return l225;
})();
var l229 = (new Symbol(make_lisp_string("ESCAPE-TOKEN-P")));
(function(){
    (l229).fvalue = (function(){
        var func = (function (values,nargs,v686,v687){
            checkArgsAtLeast(nargs, 1);
            checkArgsAtMost(nargs, 2);
            switch(nargs){
            case 1:
                v687=l5.value;
            default: break;
            }
            return (function(){
                return (function(v689){
                    return (v689 !== l5.value ? v689 : l223.fvalue(values, 2, v686, v687));
                })(l225.fvalue(pv, 1, v686));
            })();
        });
        func.fname = 'ESCAPE-TOKEN-P';
        return func;
    })();
    return l229;
})();
var l230 = (new Symbol(make_lisp_string("ESCAPE-TOKEN")));
var l231 = make_lisp_string("|");
var l232 = make_lisp_string("\\");
var l233 = make_lisp_string("|");
(function(){
    (l230).fvalue = (function(){
        var func = (function (values,nargs,v690,v691){
            checkArgsAtLeast(nargs, 1);
            checkArgsAtMost(nargs, 2);
            switch(nargs){
            case 1:
                v691=l5.value;
            default: break;
            }
            return (function(){
                return (l229.fvalue(pv, 2, v690, v691) !== l5.value ? (function(v693){
                    (function(){
                        return (function(v695,v696){
                            (function(){
                                while((function(){
                                    var x1 = v695;
                                    if (typeof x1 !== 'number') throw 'Not a number!';
                                    var x2 = v696;
                                    if (typeof x2 !== 'number') throw 'Not a number!';
                                    return (x1<x2?l4.value: l5.value);
                                })() !== l5.value){
                                    (function(){
                                        (function(v697){
                                            ((function(v698){
                                                return (v698 !== l5.value ? v698 : l64.fvalue(pv, 2, v697, "\\"));
                                            })(l64.fvalue(pv, 2, v697, "|")) !== l5.value ? (function(){
                                                return (function(){
                                                    var func = (function (values,nargs,v700){
                                                        switch(nargs){
                                                        case 0:
                                                            v700=l5.value;
                                                        default: break;
                                                        }
                                                        var v699= l5.value;
                                                        for (var i = nargs-1; i>=1; i--)
                                                            v699 = {car: arguments[i+2], cdr: v699};
                                                        return (v693 = v700);
                                                    });
                                                    var args = [pv, 0];
                                                    return (function(){
                                                        var values = mv;
                                                        var vs;
                                                        vs = l107.fvalue(values, 2, v693, l232);
                                                        if (typeof vs === 'object' && 'multiple-value' in vs)
                                                            args = args.concat(vs);
                                                        else
                                                            args.push(vs);
                                                        args[1] = args.length-2;
                                                        return func.apply(window, args);
                                                    })();
                                                })();
                                            })() : l5.value);
                                            return (function(){
                                                return (function(){
                                                    var func = (function (values,nargs,v702){
                                                        switch(nargs){
                                                        case 0:
                                                            v702=l5.value;
                                                        default: break;
                                                        }
                                                        var v701= l5.value;
                                                        for (var i = nargs-1; i>=1; i--)
                                                            v701 = {car: arguments[i+2], cdr: v701};
                                                        return (v693 = v702);
                                                    });
                                                    var args = [pv, 0];
                                                    return (function(){
                                                        var values = mv;
                                                        var vs;
                                                        vs = l107.fvalue(values, 2, v693, l125.fvalue(pv, 1, v697));
                                                        if (typeof vs === 'object' && 'multiple-value' in vs)
                                                            args = args.concat(vs);
                                                        else
                                                            args.push(vs);
                                                        args[1] = args.length-2;
                                                        return func.apply(window, args);
                                                    })();
                                                })();
                                            })();
                                        })(v690[v695]);
                                        return l5.value;
                                    })();
                                    (function(){
                                        var v703 = 1;
                                        var v704 = (function(){
                                            var x1 = v695;
                                            if (typeof x1 !== 'number') throw 'Not a number!';
                                            var x2 = v703;
                                            if (typeof x2 !== 'number') throw 'Not a number!';
                                            return x1+x2;
                                        })();
                                        return (v695 = v704);
                                    })();
                                }return l5.value;
                            })();
                            return l5.value;
                        })(0,l54.fvalue(pv, 1, v690));
                    })();
                    return l107.fvalue(values, 2, v693, l233);
                })(l231) : v690);
            })();
        });
        func.fname = 'ESCAPE-TOKEN';
        return func;
    })();
    return l230;
})();
var l234 = (new Symbol(make_lisp_string("*PRINT-ESCAPE*")));
(function(){
    (((l234.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l234).value = l4.value));
    return l234;
})();
var l235 = (new Symbol(make_lisp_string("*PRINT-CIRCLE*")));
(function(){
    (((l235.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l235).value = l5.value));
    return l235;
})();
var l236 = (new Symbol(make_lisp_string("WRITE-TO-STRING")));
var l237 = (new Symbol(make_lisp_string("SYMBOL-PACKAGE")));
var l238 = make_lisp_string("#~S=");
var l239 = make_lisp_string("#~S#");
var l240 = make_lisp_string("NIL");
var l241 = (new Symbol(make_lisp_string("FIND-SYMBOL")));
var l242 = (new Symbol(make_lisp_string("*JS-PACKAGE*")));
var l243 = make_lisp_string("#");
var l244 = make_lisp_string("KEYWORD");
var l245 = (new Symbol(make_lisp_string("FIND-PACKAGE")));
var l246 = (new Symbol(make_lisp_string("PACKAGE-NAME")));
var l247 = make_lisp_string(":");
var l248 = (new Symbol(make_lisp_string("INTERNAL"), make_lisp_string("KEYWORD")));
l248.value = l248;
var l249 = make_lisp_string(":");
var l250 = make_lisp_string("#\\");
var l251 = make_lisp_string("newline");
var l252 = make_lisp_string("space");
var l253 = make_lisp_string("\"");
var l254 = (new Symbol(make_lisp_string("ESCAPE-STRING")));
var l255 = make_lisp_string("\"");
var l256 = make_lisp_string("fname");
var l257 = make_lisp_string("#<FUNCTION ");
var l258 = make_lisp_string(">");
var l259 = make_lisp_string("#<FUNCTION>");
var l260 = make_lisp_string("(");
var l261 = make_lisp_string(" ");
var l262 = make_lisp_string(" . ");
var l263 = make_lisp_string(")");
var l264 = make_lisp_string("#(");
var l265 = make_lisp_string(" ");
var l266 = make_lisp_string(")");
var l267 = (new Symbol(make_lisp_string("PACKAGEP")));
var l268 = make_lisp_string("#<PACKAGE ");
var l269 = make_lisp_string(">");
var l270 = make_lisp_string("#<javascript object>");
(function(){
    (l236).fvalue = (function(){
        var func = (function (values,nargs,v705,v706,v707){
            checkArgsAtLeast(nargs, 1);
            checkArgsAtMost(nargs, 3);
            switch(nargs){
            case 1:
                v706=l5.value;
            case 2:
                v707=l5.value;
            default: break;
            }
            return (function(){
                try {
                var v708 = [];
                    ((l28.fvalue(pv, 1, v706) !== l5.value ? (function(){
                        var symbol = l235;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })() : l5.value) !== l5.value ? (function(){
                        (function(){
                            return (function(){
                                var func = (function (values,nargs,v710){
                                    switch(nargs){
                                    case 0:
                                        v710=l5.value;
                                    default: break;
                                    }
                                    var v709= l5.value;
                                    for (var i = nargs-1; i>=1; i--)
                                        v709 = {car: arguments[i+2], cdr: v709};
                                    return (v706 = v710);
                                });
                                var args = [pv, 0];
                                return (function(){
                                    var values = mv;
                                    var vs;
                                    vs = (function(){
                                        var r = [];
                                        for (var i = 0; i < 100; i++)
                                            r.push(l5.value);
                                        return r;
                                    })();
                                    if (typeof vs === 'object' && 'multiple-value' in vs)
                                        args = args.concat(vs);
                                    else
                                        args.push(vs);
                                    args[1] = args.length-2;
                                    return func.apply(window, args);
                                })();
                            })();
                        })();
                        (function(){
                            return (function(){
                                var func = (function (values,nargs,v712){
                                    switch(nargs){
                                    case 0:
                                        v712=l5.value;
                                    default: break;
                                    }
                                    var v711= l5.value;
                                    for (var i = nargs-1; i>=1; i--)
                                        v711 = {car: arguments[i+2], cdr: v711};
                                    return (v707 = v712);
                                });
                                var args = [pv, 0];
                                return (function(){
                                    var values = mv;
                                    var vs;
                                    vs = (function(){
                                        var r = [];
                                        for (var i = 0; i < 100; i++)
                                            r.push(l5.value);
                                        return r;
                                    })();
                                    if (typeof vs === 'object' && 'multiple-value' in vs)
                                        args = args.concat(vs);
                                    else
                                        args.push(vs);
                                    args[1] = args.length-2;
                                    return func.apply(window, args);
                                })();
                            })();
                        })();
                        return (function(v713,v714,v715){
                            return (function(){
                                var v716 = (function (values,nargs,v718){
                                    checkArgs(nargs, 1);
                                    return (function(){
                                        return (function(v720){
                                            return ((function(){
                                                var x1 = v720;
                                                if (typeof x1 !== 'number') throw 'Not a number!';
                                                return (x1==-1?l4.value: l5.value);
                                            })() !== l5.value ? (function(){
                                                ((function(){
                                                    var x1 = v713;
                                                    if (typeof x1 !== 'number') throw 'Not a number!';
                                                    var x2 = v714;
                                                    if (typeof x2 !== 'number') throw 'Not a number!';
                                                    return (x1==x2?l4.value: l5.value);
                                                })() !== l5.value ? (function(){
                                                    (function(){
                                                        return (function(){
                                                            var func = (function (values,nargs,v722){
                                                                switch(nargs){
                                                                case 0:
                                                                    v722=l5.value;
                                                                default: break;
                                                                }
                                                                var v721= l5.value;
                                                                for (var i = nargs-1; i>=1; i--)
                                                                    v721 = {car: arguments[i+2], cdr: v721};
                                                                return (v714 = v722);
                                                            });
                                                            var args = [pv, 0];
                                                            return (function(){
                                                                var values = mv;
                                                                var vs;
                                                                vs = (function(){
                                                                    var x1 = v714;
                                                                    if (typeof x1 !== 'number') throw 'Not a number!';
                                                                    return 2*x1;
                                                                })();
                                                                if (typeof vs === 'object' && 'multiple-value' in vs)
                                                                    args = args.concat(vs);
                                                                else
                                                                    args.push(vs);
                                                                args[1] = args.length-2;
                                                                return func.apply(window, args);
                                                            })();
                                                        })();
                                                    })();
                                                    (function(){
                                                        var x = v706;
                                                        var n = v714;
                                                        return x.length = n;
                                                    })();
                                                    return (function(){
                                                        var x = v707;
                                                        var n = v714;
                                                        return x.length = n;
                                                    })();
                                                })() : l5.value);
                                                (function(){
                                                    var x = v706;
                                                    var i = l24.fvalue(pv, 1, (function(){
                                                        var v723 = 1;
                                                        var v724 = (function(){
                                                            var x1 = v713;
                                                            if (typeof x1 !== 'number') throw 'Not a number!';
                                                            var x2 = v723;
                                                            if (typeof x2 !== 'number') throw 'Not a number!';
                                                            return x1+x2;
                                                        })();
                                                        return (v713 = v724);
                                                    })());
                                                    if (i < 0 || i >= x.length) throw 'Out of range';
                                                    return x[i] = v718;
                                                })();
                                                return l4.value;
                                            })() : ((function(){
                                                var x = (v707)[v720];
                                                if (x === undefined) throw 'Out of range';
                                                return x;
                                            })() !== l5.value ? l5.value : (function(){
                                                (function(){
                                                    var x = v707;
                                                    var i = v720;
                                                    if (i < 0 || i >= x.length) throw 'Out of range';
                                                    return x[i] = (function(){
                                                        var v725 = 1;
                                                        var v726 = (function(){
                                                            var x1 = v715;
                                                            if (typeof x1 !== 'number') throw 'Not a number!';
                                                            var x2 = v725;
                                                            if (typeof x2 !== 'number') throw 'Not a number!';
                                                            return x1+x2;
                                                        })();
                                                        return (v715 = v726);
                                                    })();
                                                })();
                                                return l5.value;
                                            })()));
                                        })((function(){
                                            var v = v718;
                                            var x = v706;
                                            return x.indexOf(v);
                                        })());
                                    })();
                                });
                                var v717 = (function (values,nargs,v727){
                                    checkArgs(nargs, 1);
                                    return (function(){
                                        return ((v727 !== l5.value ? (((v727 instanceof Symbol)?l4.value: l5.value) !== l5.value ? l44.fvalue(pv, 1, l237.fvalue(pv, 1, v727)) : l5.value) : l5.value) !== l5.value ? v716(values, 1, v727) : (((function(){
                                            var tmp = v727;
                                            return (typeof tmp == 'object' && 'car' in tmp);
                                        })()?l4.value: l5.value) !== l5.value ? (v716(pv, 1, v727) !== l5.value ? (function(){
                                            v717(pv, 1, (function(){
                                                var tmp = v727;
                                                return tmp === l5.value? l5.value: tmp.car;
                                            })());
                                            return v717(values, 1, (function(){
                                                var tmp = v727;
                                                return tmp === l5.value? l5.value: tmp.cdr;
                                            })());
                                        })() : l5.value) : (((function(){
                                            var x = v727;
                                            return typeof x === 'object' && 'length' in x;
                                        })()?l4.value: l5.value) !== l5.value ? (v716(pv, 1, v727) !== l5.value ? (function(){
                                            return (function(v730,v731){
                                                (function(){
                                                    while((function(){
                                                        var x1 = v730;
                                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                                        var x2 = v731;
                                                        if (typeof x2 !== 'number') throw 'Not a number!';
                                                        return (x1<x2?l4.value: l5.value);
                                                    })() !== l5.value){
                                                        (function(){
                                                            v717(pv, 1, (function(){
                                                                var x = (v727)[v730];
                                                                if (x === undefined) throw 'Out of range';
                                                                return x;
                                                            })());
                                                            return l5.value;
                                                        })();
                                                        (function(){
                                                            var v732 = 1;
                                                            var v733 = (function(){
                                                                var x1 = v730;
                                                                if (typeof x1 !== 'number') throw 'Not a number!';
                                                                var x2 = v732;
                                                                if (typeof x2 !== 'number') throw 'Not a number!';
                                                                return x1+x2;
                                                            })();
                                                            return (v730 = v733);
                                                        })();
                                                    }return l5.value;
                                                })();
                                                return l5.value;
                                            })(0,l54.fvalue(pv, 1, v727));
                                        })() : l5.value) : l5.value)));
                                    })();
                                });
                                return v717(pv, 1, v705);
                            })();
                        })(0,100,0);
                    })() : l5.value);
                    return (function(v734){
                        (((function(){
                            var symbol = l235;
                            var value = symbol.value;
                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                            return value;
                        })() !== l5.value ? (function(v735){
                            return (v735 !== l5.value ? v735 : (function(v736){
                                return (v736 !== l5.value ? v736 : (v705 !== l5.value ? (((v705 instanceof Symbol)?l4.value: l5.value) !== l5.value ? l44.fvalue(pv, 1, l237.fvalue(pv, 1, v705)) : l5.value) : l5.value));
                            })(((function(){
                                var x = v705;
                                return typeof x === 'object' && 'length' in x;
                            })()?l4.value: l5.value)));
                        })(((function(){
                            var tmp = v705;
                            return (typeof tmp == 'object' && 'car' in tmp);
                        })()?l4.value: l5.value)) : l5.value) !== l5.value ? (function(){
                            var v737 = (function(){
                                var v = v705;
                                var x = v706;
                                return x.indexOf(v);
                            })();
                            var v738 = (function(){
                                var x = (v707)[v737];
                                if (x === undefined) throw 'Out of range';
                                return x;
                            })();
                            return ((v738 !== l5.value ? (function(){
                                var x1 = v738;
                                if (typeof x1 !== 'number') throw 'Not a number!';
                                return (x1>0?l4.value: l5.value);
                            })() : l5.value) !== l5.value ? (function(){
                                (function(){
                                    return (function(){
                                        var func = (function (values,nargs,v740){
                                            switch(nargs){
                                            case 0:
                                                v740=l5.value;
                                            default: break;
                                            }
                                            var v739= l5.value;
                                            for (var i = nargs-1; i>=1; i--)
                                                v739 = {car: arguments[i+2], cdr: v739};
                                            return (v734 = v740);
                                        });
                                        var args = [pv, 0];
                                        return (function(){
                                            var values = mv;
                                            var vs;
                                            vs = l112.fvalue(values, 3, l5.value, l238, v738);
                                            if (typeof vs === 'object' && 'multiple-value' in vs)
                                                args = args.concat(vs);
                                            else
                                                args.push(vs);
                                            args[1] = args.length-2;
                                            return func.apply(window, args);
                                        })();
                                    })();
                                })();
                                return (function(){
                                    var x = v707;
                                    var i = v737;
                                    if (i < 0 || i >= x.length) throw 'Out of range';
                                    return x[i] = (function(){
                                        var x1 = v738;
                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                        return -x1;
                                    })();
                                })();
                            })() : ((v738 !== l5.value ? (function(){
                                var x1 = v738;
                                if (typeof x1 !== 'number') throw 'Not a number!';
                                return (x1<0?l4.value: l5.value);
                            })() : l5.value) !== l5.value ? (function(){
                                var values = mv;
                                throw ({type: 'block', id: v708, values: l112.fvalue(values, 3, l5.value, l239, (function(){
                                    var x1 = v738;
                                    if (typeof x1 !== 'number') throw 'Not a number!';
                                    return -x1;
                                })()), message: 'Return from unknown block WRITE-TO-STRING.'})
                            })() : l5.value));
                        })() : l5.value);
                        return l107.fvalue(values, 2, v734, (l44.fvalue(pv, 1, v705) !== l5.value ? l240 : (((v705 instanceof Symbol)?l4.value: l5.value) !== l5.value ? (function(v741,v742){
                            return (((v705 === l241.fvalue(pv, 1, (v705).name))?l4.value: l5.value) !== l5.value ? l230.fvalue(pv, 2, (v705).name, l28.fvalue(pv, 1, ((v742 === (function(){
                                var symbol = l242;
                                var value = symbol.value;
                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                return value;
                            })())?l4.value: l5.value))) : l107.fvalue(pv, 4, (l44.fvalue(pv, 1, v742) !== l5.value ? l243 : (((v742 === l245.fvalue(pv, 1, l244))?l4.value: l5.value) !== l5.value ? l108 : l230.fvalue(pv, 2, l246.fvalue(pv, 1, v742), l4.value))), l247, ((v742 !== l5.value ? ((l134.fvalue(pv, 1, (function(){
                                var func = (function(){
                                    var symbol = l92;
                                    var func = symbol.fvalue;
                                    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                                    return func;
                                })();
                                var args = [pv, 0];
                                return (function(){
                                    var values = mv;
                                    var vs;
                                    vs = l241.fvalue(values, 2, v741, v742);
                                    if (typeof vs === 'object' && 'multiple-value' in vs)
                                        args = args.concat(vs);
                                    else
                                        args.push(vs);
                                    args[1] = args.length-2;
                                    return func.apply(window, args);
                                })();
                            })()) === l248.value)?l4.value: l5.value) : l5.value) !== l5.value ? l249 : l108), l230.fvalue(pv, 2, v741, l28.fvalue(pv, 1, ((v742 === (function(){
                                var symbol = l242;
                                var value = symbol.value;
                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                return value;
                            })())?l4.value: l5.value)))));
                        })((v705).name,l237.fvalue(pv, 1, v705)) : (l65.fvalue(pv, 1, v705) !== l5.value ? l17.fvalue(pv, 1, v705) : (l66.fvalue(pv, 1, v705) !== l5.value ? (function(){
                            var x = v705;
                            if (typeof x != 'number')
                                throw 'The value ' + x + ' is not a type number.';
                            return make_lisp_string(x.toString());
                        })() : (((function(){
                            var x = v705;
                            return (typeof(v705) == "string") && x.length == 1;
                        })()?l4.value: l5.value) !== l5.value ? l107.fvalue(pv, 2, l250, (function(v743){
                            return (l27.fvalue(pv, 2, v743, "\n") !== l5.value ? (function(){
                                l5.value;
                                return l251;
                            })() : (l27.fvalue(pv, 2, v743, " ") !== l5.value ? (function(){
                                l5.value;
                                return l252;
                            })() : (function(){
                                l5.value;
                                return l125.fvalue(pv, 1, v705);
                            })()));
                        })(v705)) : (((function(){
                            var x = v705;
                            return typeof(x) == 'object' && 'length' in x && x.type == 'character';
                        })()?l4.value: l5.value) !== l5.value ? ((function(){
                            var symbol = l234;
                            var value = symbol.value;
                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                            return value;
                        })() !== l5.value ? l107.fvalue(pv, 3, l253, l254.fvalue(pv, 1, v705), l255) : v705) : (((typeof v705 == 'function')?l4.value: l5.value) !== l5.value ? (function(v744){
                            return (v744 !== l5.value ? l107.fvalue(pv, 3, l257, v744, l258) : l107.fvalue(pv, 1, l259));
                        })((function(){
                            var tmp = (v705)[xstring(l256)];
                            return tmp == undefined? l5.value: tmp ;
                        })()) : (l56.fvalue(pv, 1, v705) !== l5.value ? l107.fvalue(pv, 4, l260, l118.fvalue(pv, 2, l120.fvalue(pv, 2, (function (values,nargs,v745){
                            checkArgs(nargs, 1);
                            return l236.fvalue(values, 3, v745, v706, v707);
                        }), l190.fvalue(pv, 1, v705)), l261), (function(v746){
                            return (l44.fvalue(pv, 1, (function(){
                                var tmp = v746;
                                return tmp === l5.value? l5.value: tmp.cdr;
                            })()) !== l5.value ? l236.fvalue(pv, 3, (function(){
                                var tmp = v746;
                                return tmp === l5.value? l5.value: tmp.car;
                            })(), v706, v707) : l107.fvalue(pv, 3, l236.fvalue(pv, 3, (function(){
                                var tmp = v746;
                                return tmp === l5.value? l5.value: tmp.car;
                            })(), v706, v707), l262, l236.fvalue(pv, 3, (function(){
                                var tmp = v746;
                                return tmp === l5.value? l5.value: tmp.cdr;
                            })(), v706, v707)));
                        })(l189.fvalue(pv, 1, v705)), l263) : (((function(){
                            var x = v705;
                            return typeof x === 'object' && 'length' in x;
                        })()?l4.value: l5.value) !== l5.value ? (function(v747,v748){
                            (function(){
                                return (function(v750,v751){
                                    (function(){
                                        while((function(){
                                            var x1 = v750;
                                            if (typeof x1 !== 'number') throw 'Not a number!';
                                            var x2 = v751;
                                            if (typeof x2 !== 'number') throw 'Not a number!';
                                            return (x1<x2?l4.value: l5.value);
                                        })() !== l5.value){
                                            (function(){
                                                (function(){
                                                    return (function(){
                                                        var func = (function (values,nargs,v753){
                                                            switch(nargs){
                                                            case 0:
                                                                v753=l5.value;
                                                            default: break;
                                                            }
                                                            var v752= l5.value;
                                                            for (var i = nargs-1; i>=1; i--)
                                                                v752 = {car: arguments[i+2], cdr: v752};
                                                            return (v747 = v753);
                                                        });
                                                        var args = [pv, 0];
                                                        return (function(){
                                                            var values = mv;
                                                            var vs;
                                                            vs = l107.fvalue(values, 3, v747, v748, l236.fvalue(pv, 3, (function(){
                                                                var x = (v705)[v750];
                                                                if (x === undefined) throw 'Out of range';
                                                                return x;
                                                            })(), v706, v707));
                                                            if (typeof vs === 'object' && 'multiple-value' in vs)
                                                                args = args.concat(vs);
                                                            else
                                                                args.push(vs);
                                                            args[1] = args.length-2;
                                                            return func.apply(window, args);
                                                        })();
                                                    })();
                                                })();
                                                (function(){
                                                    return (function(){
                                                        var func = (function (values,nargs,v755){
                                                            switch(nargs){
                                                            case 0:
                                                                v755=l5.value;
                                                            default: break;
                                                            }
                                                            var v754= l5.value;
                                                            for (var i = nargs-1; i>=1; i--)
                                                                v754 = {car: arguments[i+2], cdr: v754};
                                                            return (v748 = v755);
                                                        });
                                                        var args = [pv, 0];
                                                        return (function(){
                                                            var values = mv;
                                                            var vs;
                                                            vs = l265;
                                                            if (typeof vs === 'object' && 'multiple-value' in vs)
                                                                args = args.concat(vs);
                                                            else
                                                                args.push(vs);
                                                            args[1] = args.length-2;
                                                            return func.apply(window, args);
                                                        })();
                                                    })();
                                                })();
                                                return l5.value;
                                            })();
                                            (function(){
                                                var v756 = 1;
                                                var v757 = (function(){
                                                    var x1 = v750;
                                                    if (typeof x1 !== 'number') throw 'Not a number!';
                                                    var x2 = v756;
                                                    if (typeof x2 !== 'number') throw 'Not a number!';
                                                    return x1+x2;
                                                })();
                                                return (v750 = v757);
                                            })();
                                        }return l5.value;
                                    })();
                                    return l5.value;
                                })(0,l54.fvalue(pv, 1, v705));
                            })();
                            return l107.fvalue(pv, 2, v747, l266);
                        })(l264,l108) : (l267.fvalue(pv, 1, v705) !== l5.value ? l107.fvalue(pv, 3, l268, l246.fvalue(pv, 1, v705), l269) : l270)))))))))));
                    })(l108);
                }
                catch (cf){
                    if (cf.type == 'block' && cf.id == v708)
                        return values.apply(this, forcemv(cf.values));
                    else
                        throw cf;
                }
            })();
        });
        func.fname = 'WRITE-TO-STRING';
        return func;
    })();
    return l236;
})();
var l271 = (new Symbol(make_lisp_string("PRIN1-TO-STRING")));
(function(){
    (l271).fvalue = (function(){
        var func = (function (values,nargs,v758){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v760){
                    try {
                        var tmp;
                        tmp = l234.value;
                        l234.value = v760;
                        v760 = tmp;
                        return l236.fvalue(values, 1, v758);
                    }
                    finally {
                        l234.value = v760;
                    }
                })(l4.value);
            })();
        });
        func.fname = 'PRIN1-TO-STRING';
        return func;
    })();
    return l271;
})();
var l272 = (new Symbol(make_lisp_string("PRINC-TO-STRING")));
(function(){
    (l272).fvalue = (function(){
        var func = (function (values,nargs,v761){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v763){
                    try {
                        var tmp;
                        tmp = l234.value;
                        l234.value = v763;
                        v763 = tmp;
                        return l236.fvalue(values, 1, v761);
                    }
                    finally {
                        l234.value = v763;
                    }
                })(l5.value);
            })();
        });
        func.fname = 'PRINC-TO-STRING';
        return func;
    })();
    return l272;
})();
(function(){
    (l80).fvalue = (function(){
        var func = (function (values,nargs,v764){
            checkArgs(nargs, 1);
            return (function(){
                lisp.write(v764);
                lisp.write((function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })());
                return v764;
            })();
        });
        func.fname = 'WRITE-LINE';
        return func;
    })();
    return l80;
})();
var l273 = (new Symbol(make_lisp_string("WARN")));
var l274 = make_lisp_string("WARNING: ");
(function(){
    (l273).fvalue = (function(){
        var func = (function (values,nargs,v766){
            checkArgs(nargs, 1);
            return (function(){
                lisp.write(l274);
                return l80.fvalue(values, 1, v766);
            })();
        });
        func.fname = 'WARN';
        return func;
    })();
    return l273;
})();
var l275 = (new Symbol(make_lisp_string("PRINT")));
(function(){
    (l275).fvalue = (function(){
        var func = (function (values,nargs,v768){
            checkArgs(nargs, 1);
            return (function(){
                l80.fvalue(pv, 1, l271.fvalue(pv, 1, v768));
                return v768;
            })();
        });
        func.fname = 'PRINT';
        return func;
    })();
    return l275;
})();
var l276 = make_lisp_string("~");
var l277 = (new Symbol(make_lisp_string("FORMAT-SPECIAL")));
(function(){
    (l112).fvalue = (function(){
        var func = (function (values,nargs,v771,v772){
            checkArgsAtLeast(nargs, 2);
            var v770= l5.value;
            for (var i = nargs-1; i>=2; i--)
                v770 = {car: arguments[i+2], cdr: v770};
            return (function(){
                return (function(v774,v775,v776,v777){
                    (function(){
                        return (function(){
                            while((function(){
                                var x1 = v775;
                                if (typeof x1 !== 'number') throw 'Not a number!';
                                var x2 = v774;
                                if (typeof x2 !== 'number') throw 'Not a number!';
                                return (x1<x2?l4.value: l5.value);
                            })() !== l5.value){
                                (function(v779){
                                    (l64.fvalue(pv, 2, v779, "~") !== l5.value ? (function(v782){
                                        return (l64.fvalue(pv, 2, v782, "~") !== l5.value ? (v776 = l107.fvalue(pv, 2, v776, l276)) : (l64.fvalue(pv, 2, v782, "%") !== l5.value ? (v776 = l107.fvalue(pv, 2, v776, (function(){
                                            var symbol = l113;
                                            var value = symbol.value;
                                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                            return value;
                                        })())) : (function(){
                                            (v776 = l107.fvalue(pv, 2, v776, l277.fvalue(pv, 2, v782, (function(){
                                                var tmp = v777;
                                                return tmp === l5.value? l5.value: tmp.car;
                                            })())));
                                            return (function(){
                                                var v783 = v777;
                                                var v784 = (function(){
                                                    var tmp = v783;
                                                    return tmp === l5.value? l5.value: tmp.cdr;
                                                })();
                                                (v777 = v784);
                                                return (function(){
                                                    var tmp = v783;
                                                    return tmp === l5.value? l5.value: tmp.car;
                                                })();
                                            })();
                                        })()));
                                    })(v772[(function(){
                                        var v780 = 1;
                                        var v781 = (function(){
                                            var x1 = v775;
                                            if (typeof x1 !== 'number') throw 'Not a number!';
                                            var x2 = v780;
                                            if (typeof x2 !== 'number') throw 'Not a number!';
                                            return x1+x2;
                                        })();
                                        return (v775 = v781);
                                    })()]) : (v776 = l107.fvalue(pv, 2, v776, (function(){
                                        var r = [v779];
                                        r.type = 'character';return r
                                    })())));
                                    return (function(){
                                        var v785 = 1;
                                        var v786 = (function(){
                                            var x1 = v775;
                                            if (typeof x1 !== 'number') throw 'Not a number!';
                                            var x2 = v785;
                                            if (typeof x2 !== 'number') throw 'Not a number!';
                                            return x1+x2;
                                        })();
                                        return (v775 = v786);
                                    })();
                                })(v772[v775]);
                            }return l5.value;
                        })();
                    })();
                    return (v771 !== l5.value ? (function(){
                        lisp.write(v776);
                        return l5.value;
                    })() : v776);
                })(l54.fvalue(pv, 1, v772),0,l108,v770);
            })();
        });
        func.fname = 'FORMAT';
        return func;
    })();
    return l112;
})();
(function(){
    (l277).fvalue = (function(){
        var func = (function (values,nargs,v787,v788){
            checkArgs(nargs, 2);
            return (function(){
                return (function(v790){
                    return (l27.fvalue(pv, 2, v790, "S") !== l5.value ? (function(){
                        l5.value;
                        return l271.fvalue(values, 1, v788);
                    })() : (l27.fvalue(pv, 2, v790, "a") !== l5.value ? (function(){
                        l5.value;
                        return l272.fvalue(values, 1, v788);
                    })() : l5.value));
                })(v787);
            })();
        });
        func.fname = 'FORMAT-SPECIAL';
        return func;
    })();
    return l277;
})();
var l278 = (new Symbol(make_lisp_string("*PACKAGE-LIST*")));
(function(){
    (((l278.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l278).value = l5.value));
    return l278;
})();
var l279 = (new Symbol(make_lisp_string("LIST-ALL-PACKAGES")));
(function(){
    (l279).fvalue = (function(){
        var func = (function (values,nargs){
            checkArgsAtMost(nargs, 0);
            return (function(){
                return (function(){
                    var symbol = l278;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })();
            })();
        });
        func.fname = 'LIST-ALL-PACKAGES';
        return func;
    })();
    return l279;
})();
var l280 = (new Symbol(make_lisp_string("MAKE-PACKAGE")));
var l281 = (new Symbol(make_lisp_string("USE"), make_lisp_string("KEYWORD")));
l281.value = l281;
var l282 = (new Symbol(make_lisp_string("FIND-PACKAGE-OR-FAIL")));
var l283 = make_lisp_string("packageName");
var l284 = make_lisp_string("symbols");
var l285 = make_lisp_string("exports");
var l286 = make_lisp_string("use");
(function(){
    (l280).fvalue = (function(){
        var func = (function (values,nargs,v792){
            checkArgsAtLeast(nargs, 1);
            var v793; 
            var i;
            for (i=1; i<nargs; i+=2){
                if (arguments[i+2] === l281.value){
                    v793 = arguments[i+3];
                    break;
                }
            }
            if (i == nargs){
                v793 = l5.value;
            }
            for (i=1; i<nargs; i+=2){
                if (arguments[i+2] !== l281.value)
                    throw 'Unknown keyword argument ' + xstring(arguments[i].name);
            }
            return (function(){
                return (function(v795,v796){
                    ((v795)[xstring(l283)] = v792);
                    ((v795)[xstring(l284)] = {});
                    ((v795)[xstring(l285)] = {});
                    ((v795)[xstring(l286)] = v796);
                    (function(){
                        var v797 = v795;
                        var v798 = ({car: v797, cdr: (function(){
                            var symbol = l278;
                            var value = symbol.value;
                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                            return value;
                        })()});
                        return ((l278).value = v798);
                    })();
                    return v795;
                })({},l120.fvalue(pv, 2, (function(){
                    var symbol = l282;
                    var func = symbol.fvalue;
                    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                    return func;
                })(), v793));
            })();
        });
        func.fname = 'MAKE-PACKAGE';
        return func;
    })();
    return l280;
})();
var l287 = make_lisp_string("symbols");
(function(){
    (l267).fvalue = (function(){
        var func = (function (values,nargs,v799){
            checkArgs(nargs, 1);
            return (function(){
                return (((typeof (v799) === 'object')?l4.value: l5.value) !== l5.value ? ((xstring(l287) in (v799))?l4.value: l5.value) : l5.value);
            })();
        });
        func.fname = 'PACKAGEP';
        return func;
    })();
    return l267;
})();
(function(){
    (l245).fvalue = (function(){
        var func = (function (values,nargs,v801){
            checkArgs(nargs, 1);
            return (function(){
                try {
                var v802 = [];
                    (l267.fvalue(pv, 1, v801) !== l5.value ? (function(){
                        var values = mv;
                        throw ({type: 'block', id: v802, values: v801, message: 'Return from unknown block FIND-PACKAGE.'})
                    })() : l5.value);
                    return (function(v803){
                        return (function(){
                            try {
                            var v804 = [];
                                return (function(v805,v806){
                                    (function(){
                                        while(v805 !== l5.value){
                                            (v806 = (function(){
                                                var tmp = v805;
                                                return tmp === l5.value? l5.value: tmp.car;
                                            })());
                                            (function(){
                                                (l75.fvalue(pv, 2, l246.fvalue(pv, 1, v806), v803) !== l5.value ? (function(){
                                                    var values = mv;
                                                    throw ({type: 'block', id: v804, values: v806, message: 'Return from unknown block NIL.'})
                                                })() : l5.value);
                                                return l5.value;
                                            })();
                                            (v805 = (function(){
                                                var tmp = v805;
                                                return tmp === l5.value? l5.value: tmp.cdr;
                                            })());
                                        }return l5.value;
                                    })();
                                    return l5.value;
                                })((function(){
                                    var symbol = l278;
                                    var value = symbol.value;
                                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                    return value;
                                })(),l5.value);
                            }
                            catch (cf){
                                if (cf.type == 'block' && cf.id == v804)
                                    return values.apply(this, forcemv(cf.values));
                                else
                                    throw cf;
                            }
                        })();
                    })(l125.fvalue(pv, 1, v801));
                }
                catch (cf){
                    if (cf.type == 'block' && cf.id == v802)
                        return values.apply(this, forcemv(cf.values));
                    else
                        throw cf;
                }
            })();
        });
        func.fname = 'FIND-PACKAGE';
        return func;
    })();
    return l245;
})();
var l288 = make_lisp_string("The name `~S' does not designate any package.");
(function(){
    (l282).fvalue = (function(){
        var func = (function (values,nargs,v807){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v809){
                    return (v809 !== l5.value ? v809 : l78.fvalue(values, 2, l288, v807));
                })(l245.fvalue(pv, 1, v807));
            })();
        });
        func.fname = 'FIND-PACKAGE-OR-FAIL';
        return func;
    })();
    return l282;
})();
var l289 = make_lisp_string("packageName");
(function(){
    (l246).fvalue = (function(){
        var func = (function (values,nargs,v810){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v812){
                    return (function(){
                        var tmp = (v812)[xstring(l289)];
                        return tmp == undefined? l5.value: tmp ;
                    })();
                })(l282.fvalue(pv, 1, v810));
            })();
        });
        func.fname = 'PACKAGE-NAME';
        return func;
    })();
    return l246;
})();
var l290 = (new Symbol(make_lisp_string("%PACKAGE-SYMBOLS")));
var l291 = make_lisp_string("symbols");
(function(){
    (l290).fvalue = (function(){
        var func = (function (values,nargs,v813){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v815){
                    return (function(){
                        var tmp = (v815)[xstring(l291)];
                        return tmp == undefined? l5.value: tmp ;
                    })();
                })(l282.fvalue(pv, 1, v813));
            })();
        });
        func.fname = '%PACKAGE-SYMBOLS';
        return func;
    })();
    return l290;
})();
var l292 = (new Symbol(make_lisp_string("PACKAGE-USE-LIST")));
var l293 = make_lisp_string("use");
(function(){
    (l292).fvalue = (function(){
        var func = (function (values,nargs,v816){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v818){
                    return (function(){
                        var tmp = (v818)[xstring(l293)];
                        return tmp == undefined? l5.value: tmp ;
                    })();
                })(l282.fvalue(pv, 1, v816));
            })();
        });
        func.fname = 'PACKAGE-USE-LIST';
        return func;
    })();
    return l292;
})();
var l294 = (new Symbol(make_lisp_string("%PACKAGE-EXTERNAL-SYMBOLS")));
var l295 = make_lisp_string("exports");
(function(){
    (l294).fvalue = (function(){
        var func = (function (values,nargs,v819){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v821){
                    return (function(){
                        var tmp = (v821)[xstring(l295)];
                        return tmp == undefined? l5.value: tmp ;
                    })();
                })(l282.fvalue(pv, 1, v819));
            })();
        });
        func.fname = '%PACKAGE-EXTERNAL-SYMBOLS';
        return func;
    })();
    return l294;
})();
var l296 = (new Symbol(make_lisp_string("*COMMON-LISP-PACKAGE*")));
var l297 = make_lisp_string("CL");
(function(){
    (((l296.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l296).value = l280.fvalue(pv, 1, l297)));
    return l296;
})();
var l298 = (new Symbol(make_lisp_string("*USER-PACKAGE*")));
var l299 = make_lisp_string("CL-USER");
(function(){
    (((l298.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l298).value = l280.fvalue(pv, 3, l299, l281.value, l92.fvalue(pv, 1, (function(){
        var symbol = l296;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()))));
    return l298;
})();
var l300 = (new Symbol(make_lisp_string("*KEYWORD-PACKAGE*")));
var l301 = make_lisp_string("KEYWORD");
(function(){
    (((l300.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l300).value = l280.fvalue(pv, 1, l301)));
    return l300;
})();
var l302 = (new Symbol(make_lisp_string("KEYWORDP")));
(function(){
    (l302).fvalue = (function(){
        var func = (function (values,nargs,v822){
            checkArgs(nargs, 1);
            return (function(){
                return (((v822 instanceof Symbol)?l4.value: l5.value) !== l5.value ? ((l237.fvalue(pv, 1, v822) === (function(){
                    var symbol = l300;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })())?l4.value: l5.value) : l5.value);
            })();
        });
        func.fname = 'KEYWORDP';
        return func;
    })();
    return l302;
})();
var l303 = (new Symbol(make_lisp_string("*PACKAGE*")));
(function(){
    (((l303.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l303).value = (function(){
        var symbol = l296;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()));
    return l303;
})();
var l304 = (new Symbol(make_lisp_string("IN-PACKAGE")));
l304;
var l305 = (new Symbol(make_lisp_string("%INTERN-SYMBOL")));
var l306 = make_lisp_string("package");
var l307 = make_lisp_string("package");
var l308 = make_lisp_string("package");
var l309 = make_lisp_string("value");
(function(){
    (l305).fvalue = (function(){
        var func = (function (values,nargs,v824){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var v826 = (((xstring(l306) in (v824))?l4.value: l5.value) !== l5.value ? l282.fvalue(pv, 1, (function(){
                        var tmp = (v824)[xstring(l307)];
                        return tmp == undefined? l5.value: tmp ;
                    })()) : (function(){
                        var symbol = l296;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })());
                    var v827 = l290.fvalue(pv, 1, v826);
                    var v828 = l294.fvalue(pv, 1, v826);
                    ((v824)[xstring(l308)] = v826);
                    ((v827)[xstring((v824).name)] = v824);
                    return (((v826 === (function(){
                        var symbol = l300;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })())?l4.value: l5.value) !== l5.value ? (function(){
                        ((v824)[xstring(l309)] = v824);
                        return ((v828)[xstring((v824).name)] = v824);
                    })() : l5.value);
                })();
            })();
        });
        func.fname = '%INTERN-SYMBOL';
        return func;
    })();
    return l305;
})();
var l310 = (new Symbol(make_lisp_string("EXTERNAL"), make_lisp_string("KEYWORD")));
l310.value = l310;
var l311 = (new Symbol(make_lisp_string("INHERIT"), make_lisp_string("KEYWORD")));
l311.value = l311;
(function(){
    (l241).fvalue = (function(){
        var func = (function (values,nargs,v829,v830){
            checkArgsAtLeast(nargs, 1);
            checkArgsAtMost(nargs, 2);
            switch(nargs){
            case 1:
                v830=(function(){
                    var symbol = l303;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })();
            default: break;
            }
            return (function(){
                return (function(){
                    var v832 = l282.fvalue(pv, 1, v830);
                    var v833 = l294.fvalue(pv, 1, v832);
                    var v834 = l290.fvalue(pv, 1, v832);
                    return (((xstring(v829) in (v833))?l4.value: l5.value) !== l5.value ? values((function(){
                        var tmp = (v833)[xstring(v829)];
                        return tmp == undefined? l5.value: tmp ;
                    })(), l310.value) : (((xstring(v829) in (v834))?l4.value: l5.value) !== l5.value ? values((function(){
                        var tmp = (v834)[xstring(v829)];
                        return tmp == undefined? l5.value: tmp ;
                    })(), l248.value) : (function(){
                        try {
                        var v835 = [];
                            return (function(v836,v837){
                                (function(){
                                    while(v836 !== l5.value){
                                        (v837 = (function(){
                                            var tmp = v836;
                                            return tmp === l5.value? l5.value: tmp.car;
                                        })());
                                        (function(){
                                            (function(v838){
                                                return (((xstring(v829) in (v838))?l4.value: l5.value) !== l5.value ? (function(){
                                                    var values = mv;
                                                    throw ({type: 'block', id: v835, values: values((function(){
                                                        var tmp = (v838)[xstring(v829)];
                                                        return tmp == undefined? l5.value: tmp ;
                                                    })(), l311.value), message: 'Return from unknown block NIL.'})
                                                })() : l5.value);
                                            })(l294.fvalue(pv, 1, v837));
                                            return l5.value;
                                        })();
                                        (v836 = (function(){
                                            var tmp = v836;
                                            return tmp === l5.value? l5.value: tmp.cdr;
                                        })());
                                    }return l5.value;
                                })();
                                return values(l5.value, l5.value);
                            })(l292.fvalue(pv, 1, v832),l5.value);
                        }
                        catch (cf){
                            if (cf.type == 'block' && cf.id == v835)
                                return values.apply(this, forcemv(cf.values));
                            else
                                throw cf;
                        }
                    })()));
                })();
            })();
        });
        func.fname = 'FIND-SYMBOL';
        return func;
    })();
    return l241;
})();
var l312 = (new Symbol(make_lisp_string("*INTERN-HOOK*")));
(function(){
    (((l312.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l312).value = l5.value));
    return l312;
})();
var l313 = (new Symbol(make_lisp_string("INTERN")));
var l314 = make_lisp_string("package");
var l315 = make_lisp_string("value");
var l316 = (new Symbol(make_lisp_string("EXPORT")));
(function(){
    (l313).fvalue = (function(){
        var func = (function (values,nargs,v839,v840){
            checkArgsAtLeast(nargs, 1);
            checkArgsAtMost(nargs, 2);
            switch(nargs){
            case 1:
                v840=(function(){
                    var symbol = l303;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })();
            default: break;
            }
            return (function(){
                return (function(v842){
                    return (function(){
                        var func = (function (values,nargs,v844,v845){
                            switch(nargs){
                            case 0:
                                v844=l5.value;
                            case 1:
                                v845=l5.value;
                            default: break;
                            }
                            var v843= l5.value;
                            for (var i = nargs-1; i>=2; i--)
                                v843 = {car: arguments[i+2], cdr: v843};
                            return (v845 !== l5.value ? values(v844, v845) : (function(v846){
                                (function(){
                                    var tmp = (v846)[xstring(v839)];
                                    return tmp == undefined? l5.value: tmp ;
                                })();
                                return (function(v847){
                                    ((v847)[xstring(l314)] = v842);
                                    (((v842 === (function(){
                                        var symbol = l300;
                                        var value = symbol.value;
                                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                        return value;
                                    })())?l4.value: l5.value) !== l5.value ? (function(){
                                        ((v847)[xstring(l315)] = v847);
                                        return l316.fvalue(pv, 2, l92.fvalue(pv, 1, v847), v842);
                                    })() : l5.value);
                                    ((function(){
                                        var symbol = l312;
                                        var value = symbol.value;
                                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                        return value;
                                    })() !== l5.value ? (function(){
                                        var f = (function(){
                                            var symbol = l312;
                                            var value = symbol.value;
                                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                            return value;
                                        })();
                                        return (typeof f === 'function'? f: f.fvalue)(pv, 1, v847)
                                    })() : l5.value);
                                    ((v846)[xstring(v839)] = v847);
                                    return values(v847, l5.value);
                                })((new Symbol(v839)));
                            })(l290.fvalue(pv, 1, v842)));
                        });
                        var args = [values, 0];
                        return (function(){
                            var values = mv;
                            var vs;
                            vs = l241.fvalue(values, 2, v839, v842);
                            if (typeof vs === 'object' && 'multiple-value' in vs)
                                args = args.concat(vs);
                            else
                                args.push(vs);
                            args[1] = args.length-2;
                            return func.apply(window, args);
                        })();
                    })();
                })(l282.fvalue(pv, 1, v840));
            })();
        });
        func.fname = 'INTERN';
        return func;
    })();
    return l313;
})();
var l317 = make_lisp_string("`~S' is not a symbol.");
var l318 = make_lisp_string("package");
(function(){
    (l237).fvalue = (function(){
        var func = (function (values,nargs,v848){
            checkArgs(nargs, 1);
            return (function(){
                (((v848 instanceof Symbol)?l4.value: l5.value) !== l5.value ? l5.value : l78.fvalue(pv, 2, l317, v848));
                return (function(){
                    var tmp = (v848)[xstring(l318)];
                    return tmp == undefined? l5.value: tmp ;
                })();
            })();
        });
        func.fname = 'SYMBOL-PACKAGE';
        return func;
    })();
    return l237;
})();
(function(){
    (l316).fvalue = (function(){
        var func = (function (values,nargs,v850,v851){
            checkArgsAtLeast(nargs, 1);
            checkArgsAtMost(nargs, 2);
            switch(nargs){
            case 1:
                v851=(function(){
                    var symbol = l303;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })();
            default: break;
            }
            return (function(){
                return (function(v853){
                    return (function(){
                        return (function(v855,v856){
                            (function(){
                                while(v855 !== l5.value){
                                    (v856 = (function(){
                                        var tmp = v855;
                                        return tmp === l5.value? l5.value: tmp.car;
                                    })());
                                    (function(){
                                        ((v853)[xstring((v856).name)] = v856);
                                        return l5.value;
                                    })();
                                    (v855 = (function(){
                                        var tmp = v855;
                                        return tmp === l5.value? l5.value: tmp.cdr;
                                    })());
                                }return l5.value;
                            })();
                            return l4.value;
                        })(v850,l5.value);
                    })();
                })(l294.fvalue(pv, 1, v851));
            })();
        });
        func.fname = 'EXPORT';
        return func;
    })();
    return l316;
})();
var l319 = make_lisp_string("JS");
(function(){
    (((l242.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l242).value = l280.fvalue(pv, 1, l319)));
    return l242;
})();
var l320 = (new Symbol(make_lisp_string("FFI-INTERN-HOOK")));
var l321 = (new Symbol(make_lisp_string("%JS-VREF")));
var l322 = (new Symbol(make_lisp_string("EVAL")));
var l323 = (new Symbol(make_lisp_string("%DEFINE-SYMBOL-MACRO")));
(function(){
    (l320).fvalue = (function(){
        var func = (function (values,nargs,v857){
            checkArgs(nargs, 1);
            return (function(){
                return (((l237.fvalue(pv, 1, v857) === (function(){
                    var symbol = l242;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })())?l4.value: l5.value) !== l5.value ? (function(v859,v860){
                    (v857).fvalue = l322.fvalue(pv, 1, l92.fvalue(pv, 2, l321, v859));
                    return l323.fvalue(values, 2, v857, l92.fvalue(pv, 2, l321, l125.fvalue(pv, 1, v857)));
                })((v857).name,l15.fvalue(pv, 0)) : l5.value);
            })();
        });
        func.fname = 'FFI-INTERN-HOOK';
        return func;
    })();
    return l320;
})();
((l312).value = (function(){
    var symbol = l320;
    var func = symbol.fvalue;
    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
    return func;
})());
var l324 = (new Symbol(make_lisp_string("*FEATURES*")));
var l325 = (new Symbol(make_lisp_string("JSCL"), make_lisp_string("KEYWORD")));
l325.value = l325;
var l326 = (new Symbol(make_lisp_string("COMMON-LISP"), make_lisp_string("KEYWORD")));
l326.value = l326;
var l327 = QIList(l325,l326,l5);
(function(){
    ((l324).value = l327);
    return l324;
})();
var l328 = (new Symbol(make_lisp_string("LISP-IMPLEMENTATION-TYPE")));
var l329 = make_lisp_string("JSCL");
(function(){
    (l328).fvalue = (function(){
        var func = (function (values,nargs){
            checkArgsAtMost(nargs, 0);
            return (function(){
                return l329;
            })();
        });
        func.fname = 'LISP-IMPLEMENTATION-TYPE';
        return func;
    })();
    return l328;
})();
var l330 = (new Symbol(make_lisp_string("*LABELLED-OBJECTS*")));
(function(){
    (((l330.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l330).value = l5.value));
    return l330;
})();
var l331 = (new Symbol(make_lisp_string("NEW-LABELLED-OBJECTS-TABLE")));
(function(){
    (l331).fvalue = (function(){
        var func = (function (values,nargs){
            checkArgsAtMost(nargs, 0);
            return (function(){
                return (function(){
                    return (function(){
                        var func = (function (values,nargs,v864){
                            switch(nargs){
                            case 0:
                                v864=l5.value;
                            default: break;
                            }
                            var v863= l5.value;
                            for (var i = nargs-1; i>=1; i--)
                                v863 = {car: arguments[i+2], cdr: v863};
                            return ((l330).value = v864);
                        });
                        var args = [values, 0];
                        return (function(){
                            var values = mv;
                            var vs;
                            vs = l5.value;
                            if (typeof vs === 'object' && 'multiple-value' in vs)
                                args = args.concat(vs);
                            else
                                args.push(vs);
                            args[1] = args.length-2;
                            return func.apply(window, args);
                        })();
                    })();
                })();
            })();
        });
        func.fname = 'NEW-LABELLED-OBJECTS-TABLE';
        return func;
    })();
    return l331;
})();
var l332 = (new Symbol(make_lisp_string("FIND-LABELLED-OBJECT")));
(function(){
    (l332).fvalue = (function(){
        var func = (function (values,nargs,v865){
            checkArgs(nargs, 1);
            return (function(){
                return l95.fvalue(values, 2, v865, (function(){
                    var symbol = l330;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })());
            })();
        });
        func.fname = 'FIND-LABELLED-OBJECT';
        return func;
    })();
    return l332;
})();
var l333 = (new Symbol(make_lisp_string("ADD-LABELLED-OBJECT")));
(function(){
    (l333).fvalue = (function(){
        var func = (function (values,nargs,v867,v868){
            checkArgs(nargs, 2);
            return (function(){
                return (function(){
                    var v870 = ({car: v867, cdr: v868});
                    var v871 = ({car: v870, cdr: (function(){
                        var symbol = l330;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })()});
                    return ((l330).value = v871);
                })();
            })();
        });
        func.fname = 'ADD-LABELLED-OBJECT';
        return func;
    })();
    return l333;
})();
var l334 = (new Symbol(make_lisp_string("*FUTURE-VALUE*")));
var l335 = make_lisp_string("future");
(function(){
    (((l334.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l334).value = (new Symbol(l335))));
    return l334;
})();
var l336 = (new Symbol(make_lisp_string("*FIXUP-VALUE*")));
var l337 = make_lisp_string("fixup");
(function(){
    (((l336.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l336).value = (new Symbol(l337))));
    return l336;
})();
var l338 = (new Symbol(make_lisp_string("*FIXUP-LOCATIONS*")));
(function(){
    (((l338.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l338).value = l5.value));
    return l338;
})();
var l339 = (new Symbol(make_lisp_string("FIXUP-BACKREFS")));
var l340 = make_lisp_string("Internal error in fixup-backrefs: object #~S# not found");
(function(){
    (l339).fvalue = (function(){
        var func = (function (values,nargs){
            checkArgsAtMost(nargs, 0);
            return (function(){
                return (function(){
                    return (function(){
                        while((function(){
                            var symbol = l338;
                            var value = symbol.value;
                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                            return value;
                        })() !== l5.value){
                            (function(){
                                var v874 = (function(){
                                    var v875 = (function(){
                                        var symbol = l338;
                                        var value = symbol.value;
                                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                        return value;
                                    })();
                                    var v876 = (function(){
                                        var tmp = v875;
                                        return tmp === l5.value? l5.value: tmp.cdr;
                                    })();
                                    ((l338).value = v876);
                                    return (function(){
                                        var tmp = v875;
                                        return tmp === l5.value? l5.value: tmp.car;
                                    })();
                                })();
                                var v877 = (function(){
                                    var tmp = v874;
                                    return tmp === l5.value? l5.value: tmp.car;
                                })();
                                var v878 = l332.fvalue(pv, 1, (function(){
                                    var tmp = v874;
                                    return tmp === l5.value? l5.value: tmp.cdr;
                                })());
                                return (v878 !== l5.value ? (function(){
                                    var f = v877;
                                    return (typeof f === 'function'? f: f.fvalue)(pv, 1, (function(){
                                        var tmp = v878;
                                        return tmp === l5.value? l5.value: tmp.cdr;
                                    })())
                                })() : l78.fvalue(pv, 2, l340, (function(){
                                    var tmp = v874;
                                    return tmp === l5.value? l5.value: tmp.cdr;
                                })()));
                            })();
                        }return l5.value;
                    })();
                })();
            })();
        });
        func.fname = 'FIXUP-BACKREFS';
        return func;
    })();
    return l339;
})();
var l341 = (new Symbol(make_lisp_string("*MAKE-FIXUP-FUNCTION*")));
var l342 = make_lisp_string("Internal error in fixup creation during read");
(function(){
    (((l341.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l341).value = (function (values,nargs){
        checkArgsAtMost(nargs, 0);
        return l78.fvalue(values, 1, l342);
    })));
    return l341;
})();
var l343 = (new Symbol(make_lisp_string("MAKE-STRING-STREAM")));
(function(){
    (l343).fvalue = (function(){
        var func = (function (values,nargs,v879){
            checkArgs(nargs, 1);
            return (function(){
                return ({car: v879, cdr: 0});
            })();
        });
        func.fname = 'MAKE-STRING-STREAM';
        return func;
    })();
    return l343;
})();
var l344 = (new Symbol(make_lisp_string("%PEEK-CHAR")));
(function(){
    (l344).fvalue = (function(){
        var func = (function (values,nargs,v881){
            checkArgs(nargs, 1);
            return (function(){
                return ((function(){
                    var x1 = (function(){
                        var tmp = v881;
                        return tmp === l5.value? l5.value: tmp.cdr;
                    })();
                    if (typeof x1 !== 'number') throw 'Not a number!';
                    var x2 = l54.fvalue(pv, 1, (function(){
                        var tmp = v881;
                        return tmp === l5.value? l5.value: tmp.car;
                    })());
                    if (typeof x2 !== 'number') throw 'Not a number!';
                    return (x1<x2?l4.value: l5.value);
                })() !== l5.value ? (function(){
                    var tmp = v881;
                    return tmp === l5.value? l5.value: tmp.car;
                })()[(function(){
                    var tmp = v881;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })()] : l5.value);
            })();
        });
        func.fname = '%PEEK-CHAR';
        return func;
    })();
    return l344;
})();
var l345 = (new Symbol(make_lisp_string("%READ-CHAR")));
(function(){
    (l345).fvalue = (function(){
        var func = (function (values,nargs,v883){
            checkArgs(nargs, 1);
            return (function(){
                return ((function(){
                    var x1 = (function(){
                        var tmp = v883;
                        return tmp === l5.value? l5.value: tmp.cdr;
                    })();
                    if (typeof x1 !== 'number') throw 'Not a number!';
                    var x2 = l54.fvalue(pv, 1, (function(){
                        var tmp = v883;
                        return tmp === l5.value? l5.value: tmp.car;
                    })());
                    if (typeof x2 !== 'number') throw 'Not a number!';
                    return (x1<x2?l4.value: l5.value);
                })() !== l5.value ? (function(v885){
                    (function(){
                        var x = v883;
                        if (typeof x != 'object')
                            throw 'The value ' + x + ' is not a type object.';
                        return (x.cdr = l23.fvalue(pv, 1, (function(){
                            var tmp = v883;
                            return tmp === l5.value? l5.value: tmp.cdr;
                        })()), x);
                    })();
                    return v885;
                })((function(){
                    var tmp = v883;
                    return tmp === l5.value? l5.value: tmp.car;
                })()[(function(){
                    var tmp = v883;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })()]) : l5.value);
            })();
        });
        func.fname = '%READ-CHAR';
        return func;
    })();
    return l345;
})();
var l346 = (new Symbol(make_lisp_string("WHITESPACEP")));
(function(){
    (l346).fvalue = (function(){
        var func = (function (values,nargs,v886){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v888){
                    return (v888 !== l5.value ? v888 : (function(v889){
                        return (v889 !== l5.value ? v889 : l64.fvalue(values, 2, v886, "	"));
                    })(l64.fvalue(pv, 2, v886, "\n")));
                })(l64.fvalue(pv, 2, v886, " "));
            })();
        });
        func.fname = 'WHITESPACEP';
        return func;
    })();
    return l346;
})();
var l347 = (new Symbol(make_lisp_string("SKIP-WHITESPACES")));
(function(){
    (l347).fvalue = (function(){
        var func = (function (values,nargs,v890){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v892){
                    (v892 = l344.fvalue(pv, 1, v890));
                    return (function(){
                        return (function(){
                            while((v892 !== l5.value ? l346.fvalue(pv, 1, v892) : l5.value) !== l5.value){
                                l345.fvalue(pv, 1, v890);
                                (v892 = l344.fvalue(pv, 1, v890));
                            }return l5.value;
                        })();
                    })();
                })(l5.value);
            })();
        });
        func.fname = 'SKIP-WHITESPACES';
        return func;
    })();
    return l347;
})();
(function(){
    (l224).fvalue = (function(){
        var func = (function (values,nargs,v894){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v896){
                    return (v896 !== l5.value ? v896 : (function(v897){
                        return (v897 !== l5.value ? v897 : (function(v898){
                            return (v898 !== l5.value ? v898 : (function(v899){
                                return (v899 !== l5.value ? v899 : l64.fvalue(values, 2, "(", v894));
                            })(l64.fvalue(pv, 2, ")", v894)));
                        })(l64.fvalue(pv, 2, "\"", v894)));
                    })(l346.fvalue(pv, 1, v894)));
                })(l44.fvalue(pv, 1, v894));
            })();
        });
        func.fname = 'TERMINALP';
        return func;
    })();
    return l224;
})();
var l348 = (new Symbol(make_lisp_string("READ-UNTIL")));
(function(){
    (l348).fvalue = (function(){
        var func = (function (values,nargs,v900,v901){
            checkArgs(nargs, 2);
            return (function(){
                return (function(v903,v904){
                    (v904 = l344.fvalue(pv, 1, v900));
                    (function(){
                        return (function(){
                            while((v904 !== l5.value ? l28.fvalue(pv, 1, (function(){
                                var f = v901;
                                return (typeof f === 'function'? f: f.fvalue)(pv, 1, v904)
                            })()) : l5.value) !== l5.value){
                                (v903 = l107.fvalue(pv, 2, v903, l125.fvalue(pv, 1, v904)));
                                l345.fvalue(pv, 1, v900);
                                (v904 = l344.fvalue(pv, 1, v900));
                            }return l5.value;
                        })();
                    })();
                    return v903;
                })(l108,l5.value);
            })();
        });
        func.fname = 'READ-UNTIL';
        return func;
    })();
    return l348;
})();
var l349 = (new Symbol(make_lisp_string("READ-ESCAPED-UNTIL")));
var l350 = make_lisp_string("\\");
var l351 = make_lisp_string("\\");
(function(){
    (l349).fvalue = (function(){
        var func = (function (values,nargs,v906,v907){
            checkArgs(nargs, 2);
            return (function(){
                return (function(v909,v910,v911){
                    (function(){
                        return (function(){
                            while((v910 !== l5.value ? (function(v913){
                                return (v913 !== l5.value ? v913 : l28.fvalue(pv, 1, (function(){
                                    var f = v907;
                                    return (typeof f === 'function'? f: f.fvalue)(pv, 1, v910)
                                })()));
                            })(v911) : l5.value) !== l5.value){
                                (l64.fvalue(pv, 2, v910, "|") !== l5.value ? (v911 !== l5.value ? (function(){
                                    return (function(){
                                        var func = (function (values,nargs,v915){
                                            switch(nargs){
                                            case 0:
                                                v915=l5.value;
                                            default: break;
                                            }
                                            var v914= l5.value;
                                            for (var i = nargs-1; i>=1; i--)
                                                v914 = {car: arguments[i+2], cdr: v914};
                                            return (v911 = v915);
                                        });
                                        var args = [pv, 0];
                                        return (function(){
                                            var values = mv;
                                            var vs;
                                            vs = l5.value;
                                            if (typeof vs === 'object' && 'multiple-value' in vs)
                                                args = args.concat(vs);
                                            else
                                                args.push(vs);
                                            args[1] = args.length-2;
                                            return func.apply(window, args);
                                        })();
                                    })();
                                })() : (function(){
                                    return (function(){
                                        var func = (function (values,nargs,v917){
                                            switch(nargs){
                                            case 0:
                                                v917=l5.value;
                                            default: break;
                                            }
                                            var v916= l5.value;
                                            for (var i = nargs-1; i>=1; i--)
                                                v916 = {car: arguments[i+2], cdr: v916};
                                            return (v911 = v917);
                                        });
                                        var args = [pv, 0];
                                        return (function(){
                                            var values = mv;
                                            var vs;
                                            vs = l4.value;
                                            if (typeof vs === 'object' && 'multiple-value' in vs)
                                                args = args.concat(vs);
                                            else
                                                args.push(vs);
                                            args[1] = args.length-2;
                                            return func.apply(window, args);
                                        })();
                                    })();
                                })()) : (l64.fvalue(pv, 2, v910, "\\") !== l5.value ? (function(){
                                    l345.fvalue(pv, 1, v906);
                                    (function(){
                                        return (function(){
                                            var func = (function (values,nargs,v919){
                                                switch(nargs){
                                                case 0:
                                                    v919=l5.value;
                                                default: break;
                                                }
                                                var v918= l5.value;
                                                for (var i = nargs-1; i>=1; i--)
                                                    v918 = {car: arguments[i+2], cdr: v918};
                                                return (v910 = v919);
                                            });
                                            var args = [pv, 0];
                                            return (function(){
                                                var values = mv;
                                                var vs;
                                                vs = l344.fvalue(values, 1, v906);
                                                if (typeof vs === 'object' && 'multiple-value' in vs)
                                                    args = args.concat(vs);
                                                else
                                                    args.push(vs);
                                                args[1] = args.length-2;
                                                return func.apply(window, args);
                                            })();
                                        })();
                                    })();
                                    return (function(){
                                        return (function(){
                                            var func = (function (values,nargs,v921){
                                                switch(nargs){
                                                case 0:
                                                    v921=l5.value;
                                                default: break;
                                                }
                                                var v920= l5.value;
                                                for (var i = nargs-1; i>=1; i--)
                                                    v920 = {car: arguments[i+2], cdr: v920};
                                                return (v909 = v921);
                                            });
                                            var args = [pv, 0];
                                            return (function(){
                                                var values = mv;
                                                var vs;
                                                vs = l107.fvalue(values, 3, v909, l350, l125.fvalue(pv, 1, v910));
                                                if (typeof vs === 'object' && 'multiple-value' in vs)
                                                    args = args.concat(vs);
                                                else
                                                    args.push(vs);
                                                args[1] = args.length-2;
                                                return func.apply(window, args);
                                            })();
                                        })();
                                    })();
                                })() : (v911 !== l5.value ? (function(){
                                    return (function(){
                                        var func = (function (values,nargs,v923){
                                            switch(nargs){
                                            case 0:
                                                v923=l5.value;
                                            default: break;
                                            }
                                            var v922= l5.value;
                                            for (var i = nargs-1; i>=1; i--)
                                                v922 = {car: arguments[i+2], cdr: v922};
                                            return (v909 = v923);
                                        });
                                        var args = [pv, 0];
                                        return (function(){
                                            var values = mv;
                                            var vs;
                                            vs = l107.fvalue(values, 3, v909, l351, l125.fvalue(pv, 1, v910));
                                            if (typeof vs === 'object' && 'multiple-value' in vs)
                                                args = args.concat(vs);
                                            else
                                                args.push(vs);
                                            args[1] = args.length-2;
                                            return func.apply(window, args);
                                        })();
                                    })();
                                })() : (function(){
                                    return (function(){
                                        var func = (function (values,nargs,v925){
                                            switch(nargs){
                                            case 0:
                                                v925=l5.value;
                                            default: break;
                                            }
                                            var v924= l5.value;
                                            for (var i = nargs-1; i>=1; i--)
                                                v924 = {car: arguments[i+2], cdr: v924};
                                            return (v909 = v925);
                                        });
                                        var args = [pv, 0];
                                        return (function(){
                                            var values = mv;
                                            var vs;
                                            vs = l107.fvalue(values, 2, v909, l125.fvalue(pv, 1, v910));
                                            if (typeof vs === 'object' && 'multiple-value' in vs)
                                                args = args.concat(vs);
                                            else
                                                args.push(vs);
                                            args[1] = args.length-2;
                                            return func.apply(window, args);
                                        })();
                                    })();
                                })())));
                                l345.fvalue(pv, 1, v906);
                                (function(){
                                    return (function(){
                                        var func = (function (values,nargs,v927){
                                            switch(nargs){
                                            case 0:
                                                v927=l5.value;
                                            default: break;
                                            }
                                            var v926= l5.value;
                                            for (var i = nargs-1; i>=1; i--)
                                                v926 = {car: arguments[i+2], cdr: v926};
                                            return (v910 = v927);
                                        });
                                        var args = [pv, 0];
                                        return (function(){
                                            var values = mv;
                                            var vs;
                                            vs = l344.fvalue(values, 1, v906);
                                            if (typeof vs === 'object' && 'multiple-value' in vs)
                                                args = args.concat(vs);
                                            else
                                                args.push(vs);
                                            args[1] = args.length-2;
                                            return func.apply(window, args);
                                        })();
                                    })();
                                })();
                            }return l5.value;
                        })();
                    })();
                    return v909;
                })(l108,l344.fvalue(pv, 1, v906),l5.value);
            })();
        });
        func.fname = 'READ-ESCAPED-UNTIL';
        return func;
    })();
    return l349;
})();
var l352 = (new Symbol(make_lisp_string("SKIP-WHITESPACES-AND-COMMENTS")));
(function(){
    (l352).fvalue = (function(){
        var func = (function (values,nargs,v928){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v930){
                    l347.fvalue(pv, 1, v928);
                    (v930 = l344.fvalue(pv, 1, v928));
                    return (function(){
                        return (function(){
                            while((v930 !== l5.value ? l64.fvalue(pv, 2, v930, ";") : l5.value) !== l5.value){
                                l348.fvalue(pv, 2, v928, (function (values,nargs,v932){
                                    checkArgs(nargs, 1);
                                    return l64.fvalue(values, 2, v932, "\n");
                                }));
                                l347.fvalue(pv, 1, v928);
                                (v930 = l344.fvalue(pv, 1, v928));
                            }return l5.value;
                        })();
                    })();
                })(l5.value);
            })();
        });
        func.fname = 'SKIP-WHITESPACES-AND-COMMENTS';
        return func;
    })();
    return l352;
})();
var l353 = (new Symbol(make_lisp_string("DISCARD-CHAR")));
var l354 = make_lisp_string("End of file when character ~S was expected.");
var l355 = make_lisp_string("Character ~S was found but ~S was expected.");
(function(){
    (l353).fvalue = (function(){
        var func = (function (values,nargs,v933,v934){
            checkArgs(nargs, 2);
            return (function(){
                return (function(v936){
                    (l44.fvalue(pv, 1, v936) !== l5.value ? l78.fvalue(pv, 2, l354, v934) : l5.value);
                    return (l64.fvalue(pv, 2, v936, v934) !== l5.value ? l5.value : l78.fvalue(values, 3, l355, v936, v934));
                })(l345.fvalue(pv, 1, v933));
            })();
        });
        func.fname = 'DISCARD-CHAR';
        return func;
    })();
    return l353;
})();
var l356 = (new Symbol(make_lisp_string("%READ-LIST")));
var l357 = make_lisp_string("Unspected EOF");
var l358 = (new Symbol(make_lisp_string("LS-READ")));
var l359 = make_lisp_string("Multiple objects following . in a list");
var l360 = make_lisp_string(".");
var l361 = (new Symbol(make_lisp_string("INTERPRET-TOKEN")));
(function(){
    (l356).fvalue = (function(){
        var func = (function (values,nargs,v937,v938,v939){
            checkArgsAtLeast(nargs, 1);
            checkArgsAtMost(nargs, 3);
            switch(nargs){
            case 1:
                v938=l4.value;
            case 2:
                v939=l5.value;
            default: break;
            }
            return (function(){
                l352.fvalue(pv, 1, v937);
                return (function(v941){
                    return (l44.fvalue(pv, 1, v941) !== l5.value ? l78.fvalue(values, 1, l357) : (l64.fvalue(pv, 2, v941, ")") !== l5.value ? (function(){
                        l353.fvalue(pv, 2, v937, ")");
                        return l5.value;
                    })() : (function(){
                        try {
                            var v951 = l341.value;
                            var v942 = ({car: l5.value, cdr: l5.value});
                            ((l341).value = (function (values,nargs){
                                checkArgsAtMost(nargs, 0);
                                return (function (values,nargs,v943){
                                    checkArgs(nargs, 1);
                                    return (function(){
                                        var x = v942;
                                        if (typeof x != 'object')
                                            throw 'The value ' + x + ' is not a type object.';
                                        return (x.car = v943, x);
                                    })();
                                });
                            }));
                            var v944 = l15.fvalue(pv, 0);
                            var v945 = l358.fvalue(pv, 4, v937, l5.value, v944, l4.value);
                            (function(){
                                var x = v942;
                                if (typeof x != 'object')
                                    throw 'The value ' + x + ' is not a type object.';
                                return (x.car = v945, x);
                            })();
                            l352.fvalue(pv, 1, v937);
                            return (((v945 === v944)?l4.value: l5.value) !== l5.value ? (function(){
                                l353.fvalue(pv, 2, v937, ")");
                                return l5.value;
                            })() : (function(){
                                (l64.fvalue(pv, 2, l344.fvalue(pv, 1, v937), ".") !== l5.value ? (function(){
                                    l353.fvalue(pv, 2, v937, ".");
                                    return (l224.fvalue(pv, 1, l344.fvalue(pv, 1, v937)) !== l5.value ? (function(v947){
                                        try {
                                            var tmp;
                                            tmp = l341.value;
                                            l341.value = v947;
                                            v947 = tmp;
                                            (function(){
                                                var x = v942;
                                                if (typeof x != 'object')
                                                    throw 'The value ' + x + ' is not a type object.';
                                                return (x.cdr = l358.fvalue(pv, 4, v937, v938, v939, l4.value), x);
                                            })();
                                            l352.fvalue(pv, 1, v937);
                                            return (function(v948){
                                                return ((function(v949){
                                                    return (v949 !== l5.value ? v949 : l64.fvalue(pv, 2, ")", v948));
                                                })(l44.fvalue(pv, 1, v948)) !== l5.value ? l353.fvalue(pv, 2, v937, ")") : l78.fvalue(pv, 1, l359));
                                            })(l344.fvalue(pv, 1, v937));
                                        }
                                        finally {
                                            l341.value = v947;
                                        }
                                    })((function (values,nargs){
                                        checkArgsAtMost(nargs, 0);
                                        return (function (values,nargs,v946){
                                            checkArgs(nargs, 1);
                                            return (function(){
                                                var x = v942;
                                                if (typeof x != 'object')
                                                    throw 'The value ' + x + ' is not a type object.';
                                                return (x.cdr = v946, x);
                                            })();
                                        });
                                    })) : (function(v950){
                                        return (function(){
                                            var x = v942;
                                            if (typeof x != 'object')
                                                throw 'The value ' + x + ' is not a type object.';
                                            return (x.cdr = ({car: l361.fvalue(pv, 1, v950), cdr: l356.fvalue(pv, 3, v937, v938, v939)}), x);
                                        })();
                                    })(l107.fvalue(pv, 2, l360, l349.fvalue(pv, 2, v937, (function(){
                                        var symbol = l224;
                                        var func = symbol.fvalue;
                                        if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                                        return func;
                                    })()))));
                                })() : (function(){
                                    var x = v942;
                                    if (typeof x != 'object')
                                        throw 'The value ' + x + ' is not a type object.';
                                    return (x.cdr = l356.fvalue(pv, 3, v937, v938, v939), x);
                                })());
                                return v942;
                            })());
                        }
                        finally {
                            l341.value = v951;
                        }
                    })()));
                })(l344.fvalue(pv, 1, v937));
            })();
        });
        func.fname = '%READ-LIST';
        return func;
    })();
    return l356;
})();
var l362 = (new Symbol(make_lisp_string("READ-STRING")));
var l363 = make_lisp_string("Unexpected EOF");
(function(){
    (l362).fvalue = (function(){
        var func = (function (values,nargs,v952){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v954,v955){
                    (v955 = l345.fvalue(pv, 1, v952));
                    (function(){
                        return (function(){
                            while(l28.fvalue(pv, 1, l27.fvalue(pv, 2, v955, "\"")) !== l5.value){
                                (l44.fvalue(pv, 1, v955) !== l5.value ? l78.fvalue(pv, 1, l363) : l5.value);
                                (l27.fvalue(pv, 2, v955, "\\") !== l5.value ? (v955 = l345.fvalue(pv, 1, v952)) : l5.value);
                                (v954 = l107.fvalue(pv, 2, v954, l125.fvalue(pv, 1, v955)));
                                (v955 = l345.fvalue(pv, 1, v952));
                            }return l5.value;
                        })();
                    })();
                    return v954;
                })(l108,l5.value);
            })();
        });
        func.fname = 'READ-STRING';
        return func;
    })();
    return l362;
})();
var l364 = (new Symbol(make_lisp_string("READ-SHARP")));
var l365 = (new Symbol(make_lisp_string("STRING-UPCASE-NOESCAPED")));
var l366 = (new Symbol(make_lisp_string("UNESCAPE-TOKEN")));
var l367 = make_lisp_string("space");
var l368 = make_lisp_string("tab");
var l369 = make_lisp_string("newline");
var l370 = make_lisp_string("Invalid feature ~S");
var l371 = make_lisp_string("KEYWORD");
var l372 = make_lisp_string("Duplicated label #~S=");
var l373 = make_lisp_string("Invalid labelled object #~S#");
var l374 = make_lisp_string("Invalid dispatch character after #");
(function(){
    (l364).fvalue = (function(){
        var func = (function (values,nargs,v957,v958,v959){
            checkArgsAtLeast(nargs, 1);
            checkArgsAtMost(nargs, 3);
            switch(nargs){
            case 1:
                v958=l5.value;
            case 2:
                v959=l5.value;
            default: break;
            }
            return (function(){
                l345.fvalue(pv, 1, v957);
                return (function(v961){
                    return (l64.fvalue(pv, 2, v961, "'") !== l5.value ? l92.fvalue(values, 2, l82, l358.fvalue(pv, 4, v957, v958, v959, l4.value)) : (l64.fvalue(pv, 2, v961, "(") !== l5.value ? (function(){
                        return (function(v963,v964,v965){
                            return (function(){
                                try {
                                var v966 = [];
                                    return (function(){
                                        while(l4.value !== l5.value){
                                            ((function(){
                                                l352.fvalue(pv, 1, v957);
                                                return (function(v967){
                                                    return (v967 !== l5.value ? v967 : l64.fvalue(pv, 2, l344.fvalue(pv, 1, v957), ")"));
                                                })(l44.fvalue(pv, 1, l344.fvalue(pv, 1, v957)));
                                            })() !== l5.value ? (function(){
                                                var values = mv;
                                                throw ({type: 'block', id: v966, values: (function(){
                                                    l353.fvalue(pv, 2, v957, ")");
                                                    (function(){
                                                        return (function(){
                                                            var func = (function (values,nargs,v969){
                                                                switch(nargs){
                                                                case 0:
                                                                    v969=l5.value;
                                                                default: break;
                                                                }
                                                                var v968= l5.value;
                                                                for (var i = nargs-1; i>=1; i--)
                                                                    v968 = {car: arguments[i+2], cdr: v968};
                                                                return (v964 = v969);
                                                            });
                                                            var args = [pv, 0];
                                                            return (function(){
                                                                var values = mv;
                                                                var vs;
                                                                vs = (function(){
                                                                    var r = [];
                                                                    for (var i = 0; i < v965; i++)
                                                                        r.push(l5.value);
                                                                    return r;
                                                                })();
                                                                if (typeof vs === 'object' && 'multiple-value' in vs)
                                                                    args = args.concat(vs);
                                                                else
                                                                    args.push(vs);
                                                                args[1] = args.length-2;
                                                                return func.apply(window, args);
                                                            })();
                                                        })();
                                                    })();
                                                    (function(){
                                                        return (function(v971,v972){
                                                            (function(){
                                                                while((function(){
                                                                    var x1 = v971;
                                                                    if (typeof x1 !== 'number') throw 'Not a number!';
                                                                    var x2 = v972;
                                                                    if (typeof x2 !== 'number') throw 'Not a number!';
                                                                    return (x1<x2?l4.value: l5.value);
                                                                })() !== l5.value){
                                                                    (function(){
                                                                        (function(){
                                                                            var x = v964;
                                                                            var i = (function(){
                                                                                var v973 = 1;
                                                                                var v974 = (function(){
                                                                                    var x1 = v965;
                                                                                    if (typeof x1 !== 'number') throw 'Not a number!';
                                                                                    var x2 = v973;
                                                                                    if (typeof x2 !== 'number') throw 'Not a number!';
                                                                                    return x1-x2;
                                                                                })();
                                                                                return (v965 = v974);
                                                                            })();
                                                                            if (i < 0 || i >= x.length) throw 'Out of range';
                                                                            return x[i] = (function(){
                                                                                var v975 = v963;
                                                                                var v976 = (function(){
                                                                                    var tmp = v975;
                                                                                    return tmp === l5.value? l5.value: tmp.cdr;
                                                                                })();
                                                                                (v963 = v976);
                                                                                return (function(){
                                                                                    var tmp = v975;
                                                                                    return tmp === l5.value? l5.value: tmp.car;
                                                                                })();
                                                                            })();
                                                                        })();
                                                                        return l5.value;
                                                                    })();
                                                                    (function(){
                                                                        var v977 = 1;
                                                                        var v978 = (function(){
                                                                            var x1 = v971;
                                                                            if (typeof x1 !== 'number') throw 'Not a number!';
                                                                            var x2 = v977;
                                                                            if (typeof x2 !== 'number') throw 'Not a number!';
                                                                            return x1+x2;
                                                                        })();
                                                                        return (v971 = v978);
                                                                    })();
                                                                }return l5.value;
                                                            })();
                                                            return l5.value;
                                                        })(0,v965);
                                                    })();
                                                    return v964;
                                                })(), message: 'Return from unknown block NIL.'})
                                            })() : l5.value);
                                            (function(){
                                                (function(){
                                                    try {
                                                        var v985 = l341.value;
                                                        var v979 = v965;
                                                        ((l341).value = (function (values,nargs){
                                                            checkArgsAtMost(nargs, 0);
                                                            return (function (values,nargs,v980){
                                                                checkArgs(nargs, 1);
                                                                return (function(){
                                                                    var x = v964;
                                                                    var i = v979;
                                                                    if (i < 0 || i >= x.length) throw 'Out of range';
                                                                    return x[i] = v980;
                                                                })();
                                                            });
                                                        }));
                                                        var v981 = l15.fvalue(pv, 0);
                                                        var v982 = l358.fvalue(pv, 4, v957, l5.value, v981, l4.value);
                                                        return (function(){
                                                            var v983 = v982;
                                                            var v984 = ({car: v983, cdr: v963});
                                                            return (v963 = v984);
                                                        })();
                                                    }
                                                    finally {
                                                        l341.value = v985;
                                                    }
                                                })();
                                                return l5.value;
                                            })();
                                            (function(v986){
                                                return (v965 = v986);
                                            })(l23.fvalue(pv, 1, v965));
                                        }return l5.value;
                                    })();
                                }
                                catch (cf){
                                    if (cf.type == 'block' && cf.id == v966)
                                        return values.apply(this, forcemv(cf.values));
                                    else
                                        throw cf;
                                }
                            })();
                        })(l5.value,l5.value,0);
                    })() : (l64.fvalue(pv, 2, v961, ":") !== l5.value ? (new Symbol(l366.fvalue(pv, 1, l365.fvalue(pv, 1, l349.fvalue(pv, 2, v957, (function(){
                        var symbol = l224;
                        var func = symbol.fvalue;
                        if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                        return func;
                    })()))))) : (l64.fvalue(pv, 2, v961, "\\") !== l5.value ? (function(v987){
                        return (l75.fvalue(pv, 2, v987, l367) !== l5.value ? " " : (l75.fvalue(pv, 2, v987, l368) !== l5.value ? "	" : (l75.fvalue(pv, 2, v987, l369) !== l5.value ? "\n" : v987[0])));
                    })(l107.fvalue(pv, 2, l125.fvalue(pv, 1, l345.fvalue(pv, 1, v957)), l348.fvalue(pv, 2, v957, (function(){
                        var symbol = l224;
                        var func = symbol.fvalue;
                        if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                        return func;
                    })()))) : ((function(v988){
                        return (v988 !== l5.value ? v988 : l64.fvalue(pv, 2, v961, "-"));
                    })(l64.fvalue(pv, 2, v961, "+")) !== l5.value ? (function(v990){
                        return (l27.fvalue(pv, 2, l64.fvalue(pv, 2, v961, "+"), (l210.fvalue(pv, 2, v990, (function(){
                            var symbol = l324;
                            var value = symbol.value;
                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                            return value;
                        })()) !== l5.value ? l4.value : l5.value)) !== l5.value ? l358.fvalue(values, 4, v957, v958, v959, l4.value) : (function(v991){
                            return v991;
                        })((function(){
                            l358.fvalue(pv, 1, v957);
                            return l358.fvalue(pv, 4, v957, v958, v959, l4.value);
                        })()));
                    })((function(v989){
                        (((v989 instanceof Symbol)?l4.value: l5.value) !== l5.value ? l5.value : l78.fvalue(pv, 2, l370, v989));
                        return l313.fvalue(pv, 2, l125.fvalue(pv, 1, v989), l371);
                    })(l358.fvalue(pv, 4, v957, v958, v959, l4.value))) : ((v961 !== l5.value ? l71.fvalue(pv, 1, v961) : l5.value) !== l5.value ? (function(v992){
                        (function(){
                            return (function(){
                                while((l344.fvalue(pv, 1, v957) !== l5.value ? l71.fvalue(pv, 1, l344.fvalue(pv, 1, v957)) : l5.value) !== l5.value){
                                    (function(){
                                        return (function(){
                                            var func = (function (values,nargs,v995){
                                                switch(nargs){
                                                case 0:
                                                    v995=l5.value;
                                                default: break;
                                                }
                                                var v994= l5.value;
                                                for (var i = nargs-1; i>=1; i--)
                                                    v994 = {car: arguments[i+2], cdr: v994};
                                                return (v992 = v995);
                                            });
                                            var args = [pv, 0];
                                            return (function(){
                                                var values = mv;
                                                var vs;
                                                vs = (function(){
                                                    var x1 = (function(){
                                                        var x1 = v992;
                                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                                        return x1*10;
                                                    })();
                                                    if (typeof x1 !== 'number') throw 'Not a number!';
                                                    var x2 = l71.fvalue(pv, 1, l345.fvalue(pv, 1, v957));
                                                    if (typeof x2 !== 'number') throw 'Not a number!';
                                                    return x1+x2;
                                                })();
                                                if (typeof vs === 'object' && 'multiple-value' in vs)
                                                    args = args.concat(vs);
                                                else
                                                    args.push(vs);
                                                args[1] = args.length-2;
                                                return func.apply(window, args);
                                            })();
                                        })();
                                    })();
                                }return l5.value;
                            })();
                        })();
                        return (function(v996){
                            return (function(v997){
                                return (l27.fvalue(pv, 2, v997, "=") !== l5.value ? (function(){
                                    l5.value;
                                    l345.fvalue(pv, 1, v957);
                                    return (l332.fvalue(pv, 1, v992) !== l5.value ? l78.fvalue(values, 2, l372, v992) : (function(){
                                        l333.fvalue(pv, 2, v992, (function(){
                                            var symbol = l334;
                                            var value = symbol.value;
                                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                            return value;
                                        })());
                                        return (function(v998){
                                            (function(){
                                                var x = l332.fvalue(pv, 1, v992);
                                                if (typeof x != 'object')
                                                    throw 'The value ' + x + ' is not a type object.';
                                                return (x.cdr = v998, x);
                                            })();
                                            return v998;
                                        })(l358.fvalue(pv, 4, v957, v958, v959, l4.value));
                                    })());
                                })() : (l27.fvalue(pv, 2, v997, "#") !== l5.value ? (function(){
                                    l5.value;
                                    l345.fvalue(pv, 1, v957);
                                    return (function(v999){
                                        return (v999 !== l5.value ? ((((function(){
                                            var tmp = v999;
                                            return tmp === l5.value? l5.value: tmp.cdr;
                                        })() === (function(){
                                            var symbol = l334;
                                            var value = symbol.value;
                                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                            return value;
                                        })())?l4.value: l5.value) !== l5.value ? (function(){
                                            (function(){
                                                var v1000 = ({car: (function(){
                                                    var f = (function(){
                                                        var symbol = l341;
                                                        var value = symbol.value;
                                                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                                        return value;
                                                    })();
                                                    return (typeof f === 'function'? f: f.fvalue)(pv, 0)
                                                })(), cdr: v992});
                                                var v1001 = ({car: v1000, cdr: (function(){
                                                    var symbol = l338;
                                                    var value = symbol.value;
                                                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                                    return value;
                                                })()});
                                                return ((l338).value = v1001);
                                            })();
                                            return (function(){
                                                var symbol = l336;
                                                var value = symbol.value;
                                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                                return value;
                                            })();
                                        })() : (function(){
                                            var tmp = v999;
                                            return tmp === l5.value? l5.value: tmp.cdr;
                                        })()) : l78.fvalue(values, 2, l373, v992));
                                    })(l332.fvalue(pv, 1, v992));
                                })() : (function(){
                                    l5.value;
                                    return l78.fvalue(values, 2, l87, v996);
                                })()));
                            })(v996);
                        })(l344.fvalue(pv, 1, v957));
                    })(l71.fvalue(pv, 1, v961)) : l78.fvalue(values, 1, l374)))))));
                })(l345.fvalue(pv, 1, v957));
            })();
        });
        func.fname = 'READ-SHARP';
        return func;
    })();
    return l364;
})();
(function(){
    (l366).fvalue = (function(){
        var func = (function (values,nargs,v1002){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v1004){
                    (function(){
                        return (function(v1006,v1007){
                            (function(){
                                while((function(){
                                    var x1 = v1006;
                                    if (typeof x1 !== 'number') throw 'Not a number!';
                                    var x2 = v1007;
                                    if (typeof x2 !== 'number') throw 'Not a number!';
                                    return (x1<x2?l4.value: l5.value);
                                })() !== l5.value){
                                    (function(){
                                        (l64.fvalue(pv, 2, v1002[v1006], "\\") !== l5.value ? l5.value : (v1004 = l107.fvalue(pv, 2, v1004, l125.fvalue(pv, 1, v1002[v1006]))));
                                        return l5.value;
                                    })();
                                    (function(){
                                        var v1008 = 1;
                                        var v1009 = (function(){
                                            var x1 = v1006;
                                            if (typeof x1 !== 'number') throw 'Not a number!';
                                            var x2 = v1008;
                                            if (typeof x2 !== 'number') throw 'Not a number!';
                                            return x1+x2;
                                        })();
                                        return (v1006 = v1009);
                                    })();
                                }return l5.value;
                            })();
                            return l5.value;
                        })(0,l54.fvalue(pv, 1, v1002));
                    })();
                    return v1004;
                })(l108);
            })();
        });
        func.fname = 'UNESCAPE-TOKEN';
        return func;
    })();
    return l366;
})();
(function(){
    (l365).fvalue = (function(){
        var func = (function (values,nargs,v1010){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v1012,v1013){
                    (function(){
                        return (function(v1015,v1016){
                            (function(){
                                while((function(){
                                    var x1 = v1015;
                                    if (typeof x1 !== 'number') throw 'Not a number!';
                                    var x2 = v1016;
                                    if (typeof x2 !== 'number') throw 'Not a number!';
                                    return (x1<x2?l4.value: l5.value);
                                })() !== l5.value){
                                    (function(){
                                        (function(v1017){
                                            return (v1013 !== l5.value ? (function(){
                                                (function(){
                                                    return (function(){
                                                        var func = (function (values,nargs,v1019){
                                                            switch(nargs){
                                                            case 0:
                                                                v1019=l5.value;
                                                            default: break;
                                                            }
                                                            var v1018= l5.value;
                                                            for (var i = nargs-1; i>=1; i--)
                                                                v1018 = {car: arguments[i+2], cdr: v1018};
                                                            return (v1013 = v1019);
                                                        });
                                                        var args = [pv, 0];
                                                        return (function(){
                                                            var values = mv;
                                                            var vs;
                                                            vs = l5.value;
                                                            if (typeof vs === 'object' && 'multiple-value' in vs)
                                                                args = args.concat(vs);
                                                            else
                                                                args.push(vs);
                                                            args[1] = args.length-2;
                                                            return func.apply(window, args);
                                                        })();
                                                    })();
                                                })();
                                                return (function(){
                                                    return (function(){
                                                        var func = (function (values,nargs,v1021){
                                                            switch(nargs){
                                                            case 0:
                                                                v1021=l5.value;
                                                            default: break;
                                                            }
                                                            var v1020= l5.value;
                                                            for (var i = nargs-1; i>=1; i--)
                                                                v1020 = {car: arguments[i+2], cdr: v1020};
                                                            return (v1012 = v1021);
                                                        });
                                                        var args = [pv, 0];
                                                        return (function(){
                                                            var values = mv;
                                                            var vs;
                                                            vs = l107.fvalue(values, 2, v1012, l125.fvalue(pv, 1, v1017));
                                                            if (typeof vs === 'object' && 'multiple-value' in vs)
                                                                args = args.concat(vs);
                                                            else
                                                                args.push(vs);
                                                            args[1] = args.length-2;
                                                            return func.apply(window, args);
                                                        })();
                                                    })();
                                                })();
                                            })() : (l64.fvalue(pv, 2, v1017, "\\") !== l5.value ? (function(){
                                                return (function(){
                                                    var func = (function (values,nargs,v1023){
                                                        switch(nargs){
                                                        case 0:
                                                            v1023=l5.value;
                                                        default: break;
                                                        }
                                                        var v1022= l5.value;
                                                        for (var i = nargs-1; i>=1; i--)
                                                            v1022 = {car: arguments[i+2], cdr: v1022};
                                                        return (v1013 = v1023);
                                                    });
                                                    var args = [pv, 0];
                                                    return (function(){
                                                        var values = mv;
                                                        var vs;
                                                        vs = l4.value;
                                                        if (typeof vs === 'object' && 'multiple-value' in vs)
                                                            args = args.concat(vs);
                                                        else
                                                            args.push(vs);
                                                        args[1] = args.length-2;
                                                        return func.apply(window, args);
                                                    })();
                                                })();
                                            })() : (function(){
                                                return (function(){
                                                    var func = (function (values,nargs,v1025){
                                                        switch(nargs){
                                                        case 0:
                                                            v1025=l5.value;
                                                        default: break;
                                                        }
                                                        var v1024= l5.value;
                                                        for (var i = nargs-1; i>=1; i--)
                                                            v1024 = {car: arguments[i+2], cdr: v1024};
                                                        return (v1012 = v1025);
                                                    });
                                                    var args = [pv, 0];
                                                    return (function(){
                                                        var values = mv;
                                                        var vs;
                                                        vs = l107.fvalue(values, 2, v1012, make_lisp_string(xstring(l125.fvalue(pv, 1, v1017)).toUpperCase()));
                                                        if (typeof vs === 'object' && 'multiple-value' in vs)
                                                            args = args.concat(vs);
                                                        else
                                                            args.push(vs);
                                                        args[1] = args.length-2;
                                                        return func.apply(window, args);
                                                    })();
                                                })();
                                            })()));
                                        })(v1010[v1015]);
                                        return l5.value;
                                    })();
                                    (function(){
                                        var v1026 = 1;
                                        var v1027 = (function(){
                                            var x1 = v1015;
                                            if (typeof x1 !== 'number') throw 'Not a number!';
                                            var x2 = v1026;
                                            if (typeof x2 !== 'number') throw 'Not a number!';
                                            return x1+x2;
                                        })();
                                        return (v1015 = v1027);
                                    })();
                                }return l5.value;
                            })();
                            return l5.value;
                        })(0,l54.fvalue(pv, 1, v1010));
                    })();
                    return v1012;
                })(l108,l5.value);
            })();
        });
        func.fname = 'STRING-UPCASE-NOESCAPED';
        return func;
    })();
    return l365;
})();
var l375 = (new Symbol(make_lisp_string("READ-SYMBOL")));
var l376 = make_lisp_string("KEYWORD");
var l377 = make_lisp_string("JS");
var l378 = make_lisp_string("KEYWORD");
var l379 = make_lisp_string("JS");
var l380 = make_lisp_string("The symbol `~S' is not external in the package ~S.");
(function(){
    (l375).fvalue = (function(){
        var func = (function (values,nargs,v1028){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v1030,v1031,v1032,v1033,v1034){
                    (v1034 = 0);
                    (function(){
                        return (function(){
                            while(((function(){
                                var x1 = v1034;
                                if (typeof x1 !== 'number') throw 'Not a number!';
                                var x2 = v1030;
                                if (typeof x2 !== 'number') throw 'Not a number!';
                                return (x1<x2?l4.value: l5.value);
                            })() !== l5.value ? l28.fvalue(pv, 1, l64.fvalue(pv, 2, v1028[v1034], ":")) : l5.value) !== l5.value){
                                (l64.fvalue(pv, 2, v1028[v1034], "\\") !== l5.value ? (function(){
                                    var v1036 = 1;
                                    var v1037 = (function(){
                                        var x1 = v1034;
                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                        var x2 = v1036;
                                        if (typeof x2 !== 'number') throw 'Not a number!';
                                        return x1+x2;
                                    })();
                                    return (v1034 = v1037);
                                })() : l5.value);
                                (function(){
                                    var v1038 = 1;
                                    var v1039 = (function(){
                                        var x1 = v1034;
                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                        var x2 = v1038;
                                        if (typeof x2 !== 'number') throw 'Not a number!';
                                        return x1+x2;
                                    })();
                                    return (v1034 = v1039);
                                })();
                            }return l5.value;
                        })();
                    })();
                    ((function(){
                        var x1 = v1034;
                        if (typeof x1 !== 'number') throw 'Not a number!';
                        var x2 = v1030;
                        if (typeof x2 !== 'number') throw 'Not a number!';
                        return (x1==x2?l4.value: l5.value);
                    })() !== l5.value ? (function(){
                        (v1032 = v1028);
                        (v1031 = (function(){
                            var symbol = l303;
                            var value = symbol.value;
                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                            return value;
                        })());
                        return (v1033 = l4.value);
                    })() : (function(){
                        (l25.fvalue(pv, 1, v1034) !== l5.value ? (v1031 = l376) : (v1031 = l365.fvalue(pv, 1, l220.fvalue(pv, 3, v1028, 0, v1034))));
                        (function(){
                            var v1040 = 1;
                            var v1041 = (function(){
                                var x1 = v1034;
                                if (typeof x1 !== 'number') throw 'Not a number!';
                                var x2 = v1040;
                                if (typeof x2 !== 'number') throw 'Not a number!';
                                return x1+x2;
                            })();
                            return (v1034 = v1041);
                        })();
                        (l64.fvalue(pv, 2, v1028[v1034], ":") !== l5.value ? (function(){
                            (v1033 = l4.value);
                            return (function(){
                                var v1042 = 1;
                                var v1043 = (function(){
                                    var x1 = v1034;
                                    if (typeof x1 !== 'number') throw 'Not a number!';
                                    var x2 = v1042;
                                    if (typeof x2 !== 'number') throw 'Not a number!';
                                    return x1+x2;
                                })();
                                return (v1034 = v1043);
                            })();
                        })() : l5.value);
                        return (v1032 = l220.fvalue(pv, 2, v1028, v1034));
                    })());
                    (v1032 = (l74.fvalue(pv, 2, v1031, l377) !== l5.value ? (v1032 = l366.fvalue(pv, 1, v1032)) : (v1032 = l365.fvalue(pv, 1, v1032))));
                    (v1031 = l245.fvalue(pv, 1, v1031));
                    return ((function(v1044){
                        return (v1044 !== l5.value ? v1044 : (function(v1045){
                            return (v1045 !== l5.value ? v1045 : ((v1031 === l245.fvalue(pv, 1, l379))?l4.value: l5.value));
                        })(((v1031 === l245.fvalue(pv, 1, l378))?l4.value: l5.value)));
                    })(v1033) !== l5.value ? l313.fvalue(values, 2, v1032, v1031) : (function(){
                        var func = (function (values,nargs,v1047,v1048){
                            switch(nargs){
                            case 0:
                                v1047=l5.value;
                            case 1:
                                v1048=l5.value;
                            default: break;
                            }
                            var v1046= l5.value;
                            for (var i = nargs-1; i>=2; i--)
                                v1046 = {car: arguments[i+2], cdr: v1046};
                            return (((v1048 === l310.value)?l4.value: l5.value) !== l5.value ? v1047 : l78.fvalue(values, 3, l380, v1032, v1031));
                        });
                        var args = [values, 0];
                        return (function(){
                            var values = mv;
                            var vs;
                            vs = l241.fvalue(values, 2, v1032, v1031);
                            if (typeof vs === 'object' && 'multiple-value' in vs)
                                args = args.concat(vs);
                            else
                                args.push(vs);
                            args[1] = args.length-2;
                            return func.apply(window, args);
                        })();
                    })());
                })(l54.fvalue(pv, 1, v1028),l5.value,l5.value,l5.value,l5.value);
            })();
        });
        func.fname = 'READ-SYMBOL';
        return func;
    })();
    return l375;
})();
var l381 = (new Symbol(make_lisp_string("READ-INTEGER")));
(function(){
    (l381).fvalue = (function(){
        var func = (function (values,nargs,v1049){
            checkArgs(nargs, 1);
            return (function(){
                try {
                var v1050 = [];
                    return (function(v1051,v1052,v1053){
                        (function(){
                            return (function(v1055,v1056){
                                (function(){
                                    while((function(){
                                        var x1 = v1055;
                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                        var x2 = v1056;
                                        if (typeof x2 !== 'number') throw 'Not a number!';
                                        return (x1<x2?l4.value: l5.value);
                                    })() !== l5.value){
                                        (function(){
                                            (function(v1057){
                                                return (l71.fvalue(pv, 1, v1057) !== l5.value ? (v1052 = (function(){
                                                    var x1 = (function(){
                                                        var x1 = (function(v1058){
                                                            return (v1058 !== l5.value ? v1058 : 0);
                                                        })(v1052);
                                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                                        return x1*10;
                                                    })();
                                                    if (typeof x1 !== 'number') throw 'Not a number!';
                                                    var x2 = l71.fvalue(pv, 1, v1057);
                                                    if (typeof x2 !== 'number') throw 'Not a number!';
                                                    return x1+x2;
                                                })()) : (l25.fvalue(pv, 1, v1055) !== l5.value ? (function(v1059){
                                                    return (l27.fvalue(pv, 2, v1059, "+") !== l5.value ? (function(){
                                                        l5.value;
                                                        return l5.value;
                                                    })() : (l27.fvalue(pv, 2, v1059, "-") !== l5.value ? (function(){
                                                        l5.value;
                                                        return (v1051 = -1);
                                                    })() : (function(){
                                                        l5.value;
                                                        return (function(){
                                                            var values = mv;
                                                            throw ({type: 'block', id: v1050, values: l5.value, message: 'Return from unknown block READ-INTEGER.'})
                                                        })();
                                                    })()));
                                                })(v1057) : (((function(){
                                                    var x1 = v1055;
                                                    if (typeof x1 !== 'number') throw 'Not a number!';
                                                    var x2 = l24.fvalue(pv, 1, v1053);
                                                    if (typeof x2 !== 'number') throw 'Not a number!';
                                                    return (x1==x2?l4.value: l5.value);
                                                })() !== l5.value ? l64.fvalue(pv, 2, v1057, ".") : l5.value) !== l5.value ? l5.value : (function(){
                                                    var values = mv;
                                                    throw ({type: 'block', id: v1050, values: l5.value, message: 'Return from unknown block READ-INTEGER.'})
                                                })())));
                                            })(v1049[v1055]);
                                            return l5.value;
                                        })();
                                        (function(){
                                            var v1060 = 1;
                                            var v1061 = (function(){
                                                var x1 = v1055;
                                                if (typeof x1 !== 'number') throw 'Not a number!';
                                                var x2 = v1060;
                                                if (typeof x2 !== 'number') throw 'Not a number!';
                                                return x1+x2;
                                            })();
                                            return (v1055 = v1061);
                                        })();
                                    }return l5.value;
                                })();
                                return l5.value;
                            })(0,v1053);
                        })();
                        return (v1052 !== l5.value ? (function(){
                            var x1 = v1051;
                            if (typeof x1 !== 'number') throw 'Not a number!';
                            var x2 = v1052;
                            if (typeof x2 !== 'number') throw 'Not a number!';
                            return x1*x2;
                        })() : l5.value);
                    })(1,l5.value,l54.fvalue(pv, 1, v1049));
                }
                catch (cf){
                    if (cf.type == 'block' && cf.id == v1050)
                        return values.apply(this, forcemv(cf.values));
                    else
                        throw cf;
                }
            })();
        });
        func.fname = 'READ-INTEGER';
        return func;
    })();
    return l381;
})();
var l382 = (new Symbol(make_lisp_string("READ-FLOAT")));
var l383 = make_lisp_string("ESFDL");
(function(){
    (l382).fvalue = (function(){
        var func = (function (values,nargs,v1062){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    try {
                    var v1064 = [];
                        return (function(v1065,v1066,v1067,v1068,v1069,v1070,v1071,v1072,v1073){
                            (l25.fvalue(pv, 1, v1072) !== l5.value ? (function(){
                                var values = mv;
                                throw ({type: 'block', id: v1064, values: l5.value, message: 'Return from unknown block NIL.'})
                            })() : l5.value);
                            (function(v1074){
                                return (l27.fvalue(pv, 2, v1074, "+") !== l5.value ? (function(){
                                    l5.value;
                                    return (function(){
                                        var v1075 = 1;
                                        var v1076 = (function(){
                                            var x1 = v1073;
                                            if (typeof x1 !== 'number') throw 'Not a number!';
                                            var x2 = v1075;
                                            if (typeof x2 !== 'number') throw 'Not a number!';
                                            return x1+x2;
                                        })();
                                        return (v1073 = v1076);
                                    })();
                                })() : (l27.fvalue(pv, 2, v1074, "-") !== l5.value ? (function(){
                                    l5.value;
                                    (v1065 = -1);
                                    return (function(){
                                        var v1077 = 1;
                                        var v1078 = (function(){
                                            var x1 = v1073;
                                            if (typeof x1 !== 'number') throw 'Not a number!';
                                            var x2 = v1077;
                                            if (typeof x2 !== 'number') throw 'Not a number!';
                                            return x1+x2;
                                        })();
                                        return (v1073 = v1078);
                                    })();
                                })() : l5.value));
                            })(v1062[v1073]);
                            ((function(){
                                var x1 = v1073;
                                if (typeof x1 !== 'number') throw 'Not a number!';
                                var x2 = v1072;
                                if (typeof x2 !== 'number') throw 'Not a number!';
                                return (x1<x2?l4.value: l5.value);
                            })() !== l5.value ? l5.value : (function(){
                                var values = mv;
                                throw ({type: 'block', id: v1064, values: l5.value, message: 'Return from unknown block NIL.'})
                            })());
                            (function(v1079){
                                return (v1079 !== l5.value ? (function(){
                                    (v1066 = l4.value);
                                    return (function(){
                                        return (function(){
                                            while(((function(){
                                                var x1 = v1073;
                                                if (typeof x1 !== 'number') throw 'Not a number!';
                                                var x2 = v1072;
                                                if (typeof x2 !== 'number') throw 'Not a number!';
                                                return (x1<x2?l4.value: l5.value);
                                            })() !== l5.value ? (v1079 = l71.fvalue(pv, 1, v1062[v1073])) : l5.value) !== l5.value){
                                                (v1068 = (function(){
                                                    var x1 = (function(){
                                                        var x1 = v1068;
                                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                                        return x1*10;
                                                    })();
                                                    if (typeof x1 !== 'number') throw 'Not a number!';
                                                    var x2 = v1079;
                                                    if (typeof x2 !== 'number') throw 'Not a number!';
                                                    return x1+x2;
                                                })());
                                                (function(){
                                                    var v1081 = 1;
                                                    var v1082 = (function(){
                                                        var x1 = v1073;
                                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                                        var x2 = v1081;
                                                        if (typeof x2 !== 'number') throw 'Not a number!';
                                                        return x1+x2;
                                                    })();
                                                    return (v1073 = v1082);
                                                })();
                                            }return l5.value;
                                        })();
                                    })();
                                })() : l5.value);
                            })(l71.fvalue(pv, 1, v1062[v1073]));
                            ((function(){
                                var x1 = v1073;
                                if (typeof x1 !== 'number') throw 'Not a number!';
                                var x2 = v1072;
                                if (typeof x2 !== 'number') throw 'Not a number!';
                                return (x1<x2?l4.value: l5.value);
                            })() !== l5.value ? l5.value : (function(){
                                var values = mv;
                                throw ({type: 'block', id: v1064, values: l5.value, message: 'Return from unknown block NIL.'})
                            })());
                            ((function(v1083){
                                return (v1083 !== l5.value ? v1083 : l64.fvalue(pv, 2, ".", v1062[v1073]));
                            })(v1066) !== l5.value ? l5.value : (function(){
                                var values = mv;
                                throw ({type: 'block', id: v1064, values: l5.value, message: 'Return from unknown block NIL.'})
                            })());
                            (l64.fvalue(pv, 2, ".", v1062[v1073]) !== l5.value ? (function(){
                                (function(){
                                    var v1084 = 1;
                                    var v1085 = (function(){
                                        var x1 = v1073;
                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                        var x2 = v1084;
                                        if (typeof x2 !== 'number') throw 'Not a number!';
                                        return x1+x2;
                                    })();
                                    return (v1073 = v1085);
                                })();
                                ((function(){
                                    var x1 = v1073;
                                    if (typeof x1 !== 'number') throw 'Not a number!';
                                    var x2 = v1072;
                                    if (typeof x2 !== 'number') throw 'Not a number!';
                                    return (x1<x2?l4.value: l5.value);
                                })() !== l5.value ? l5.value : (function(){
                                    var values = mv;
                                    throw ({type: 'block', id: v1064, values: l5.value, message: 'Return from unknown block NIL.'})
                                })());
                                return (function(v1086){
                                    return (v1086 !== l5.value ? (function(){
                                        (v1067 = l4.value);
                                        return (function(){
                                            return (function(){
                                                while(((function(){
                                                    var x1 = v1073;
                                                    if (typeof x1 !== 'number') throw 'Not a number!';
                                                    var x2 = v1072;
                                                    if (typeof x2 !== 'number') throw 'Not a number!';
                                                    return (x1<x2?l4.value: l5.value);
                                                })() !== l5.value ? (v1086 = l71.fvalue(pv, 1, v1062[v1073])) : l5.value) !== l5.value){
                                                    (v1068 = (function(){
                                                        var x1 = (function(){
                                                            var x1 = v1068;
                                                            if (typeof x1 !== 'number') throw 'Not a number!';
                                                            return x1*10;
                                                        })();
                                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                                        var x2 = v1086;
                                                        if (typeof x2 !== 'number') throw 'Not a number!';
                                                        return x1+x2;
                                                    })());
                                                    (v1069 = (function(){
                                                        var x1 = v1069;
                                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                                        return x1*10;
                                                    })());
                                                    (function(){
                                                        var v1088 = 1;
                                                        var v1089 = (function(){
                                                            var x1 = v1073;
                                                            if (typeof x1 !== 'number') throw 'Not a number!';
                                                            var x2 = v1088;
                                                            if (typeof x2 !== 'number') throw 'Not a number!';
                                                            return x1+x2;
                                                        })();
                                                        return (v1073 = v1089);
                                                    })();
                                                }return l5.value;
                                            })();
                                        })();
                                    })() : l5.value);
                                })(l71.fvalue(pv, 1, v1062[v1073]));
                            })() : l5.value);
                            ((function(v1090){
                                return (v1090 !== l5.value ? v1090 : v1067);
                            })(v1066) !== l5.value ? l5.value : (function(){
                                var values = mv;
                                throw ({type: 'block', id: v1064, values: l5.value, message: 'Return from unknown block NIL.'})
                            })());
                            (((function(){
                                var x1 = v1073;
                                if (typeof x1 !== 'number') throw 'Not a number!';
                                var x2 = v1072;
                                if (typeof x2 !== 'number') throw 'Not a number!';
                                return (x1==x2?l4.value: l5.value);
                            })() !== l5.value ? l28.fvalue(pv, 1, v1067) : l5.value) !== l5.value ? (function(){
                                var values = mv;
                                throw ({type: 'block', id: v1064, values: l5.value, message: 'Return from unknown block NIL.'})
                            })() : l5.value);
                            ((function(){
                                var x1 = v1073;
                                if (typeof x1 !== 'number') throw 'Not a number!';
                                var x2 = v1072;
                                if (typeof x2 !== 'number') throw 'Not a number!';
                                return (x1<x2?l4.value: l5.value);
                            })() !== l5.value ? (function(){
                                (l210.fvalue(pv, 2, v1062[v1073].toUpperCase(), l383) !== l5.value ? l5.value : (function(){
                                    var values = mv;
                                    throw ({type: 'block', id: v1064, values: l5.value, message: 'Return from unknown block NIL.'})
                                })());
                                (function(){
                                    var v1091 = 1;
                                    var v1092 = (function(){
                                        var x1 = v1073;
                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                        var x2 = v1091;
                                        if (typeof x2 !== 'number') throw 'Not a number!';
                                        return x1+x2;
                                    })();
                                    return (v1073 = v1092);
                                })();
                                ((function(){
                                    var x1 = v1073;
                                    if (typeof x1 !== 'number') throw 'Not a number!';
                                    var x2 = v1072;
                                    if (typeof x2 !== 'number') throw 'Not a number!';
                                    return (x1<x2?l4.value: l5.value);
                                })() !== l5.value ? l5.value : (function(){
                                    var values = mv;
                                    throw ({type: 'block', id: v1064, values: l5.value, message: 'Return from unknown block NIL.'})
                                })());
                                (function(v1093){
                                    return (l27.fvalue(pv, 2, v1093, "+") !== l5.value ? (function(){
                                        l5.value;
                                        return (function(){
                                            var v1094 = 1;
                                            var v1095 = (function(){
                                                var x1 = v1073;
                                                if (typeof x1 !== 'number') throw 'Not a number!';
                                                var x2 = v1094;
                                                if (typeof x2 !== 'number') throw 'Not a number!';
                                                return x1+x2;
                                            })();
                                            return (v1073 = v1095);
                                        })();
                                    })() : (l27.fvalue(pv, 2, v1093, "-") !== l5.value ? (function(){
                                        l5.value;
                                        (v1070 = -1);
                                        return (function(){
                                            var v1096 = 1;
                                            var v1097 = (function(){
                                                var x1 = v1073;
                                                if (typeof x1 !== 'number') throw 'Not a number!';
                                                var x2 = v1096;
                                                if (typeof x2 !== 'number') throw 'Not a number!';
                                                return x1+x2;
                                            })();
                                            return (v1073 = v1097);
                                        })();
                                    })() : l5.value));
                                })(v1062[v1073]);
                                ((function(){
                                    var x1 = v1073;
                                    if (typeof x1 !== 'number') throw 'Not a number!';
                                    var x2 = v1072;
                                    if (typeof x2 !== 'number') throw 'Not a number!';
                                    return (x1<x2?l4.value: l5.value);
                                })() !== l5.value ? l5.value : (function(){
                                    var values = mv;
                                    throw ({type: 'block', id: v1064, values: l5.value, message: 'Return from unknown block NIL.'})
                                })());
                                return (function(v1098){
                                    (v1098 !== l5.value ? l5.value : (function(){
                                        var values = mv;
                                        throw ({type: 'block', id: v1064, values: l5.value, message: 'Return from unknown block NIL.'})
                                    })());
                                    return (function(){
                                        return (function(){
                                            while(((function(){
                                                var x1 = v1073;
                                                if (typeof x1 !== 'number') throw 'Not a number!';
                                                var x2 = v1072;
                                                if (typeof x2 !== 'number') throw 'Not a number!';
                                                return (x1<x2?l4.value: l5.value);
                                            })() !== l5.value ? (v1098 = l71.fvalue(pv, 1, v1062[v1073])) : l5.value) !== l5.value){
                                                (v1071 = (function(){
                                                    var x1 = (function(){
                                                        var x1 = v1071;
                                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                                        return x1*10;
                                                    })();
                                                    if (typeof x1 !== 'number') throw 'Not a number!';
                                                    var x2 = v1098;
                                                    if (typeof x2 !== 'number') throw 'Not a number!';
                                                    return x1+x2;
                                                })());
                                                (function(){
                                                    var v1100 = 1;
                                                    var v1101 = (function(){
                                                        var x1 = v1073;
                                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                                        var x2 = v1100;
                                                        if (typeof x2 !== 'number') throw 'Not a number!';
                                                        return x1+x2;
                                                    })();
                                                    return (v1073 = v1101);
                                                })();
                                            }return l5.value;
                                        })();
                                    })();
                                })(l71.fvalue(pv, 1, v1062[v1073]));
                            })() : l5.value);
                            ((function(){
                                var x1 = v1073;
                                if (typeof x1 !== 'number') throw 'Not a number!';
                                var x2 = v1072;
                                if (typeof x2 !== 'number') throw 'Not a number!';
                                return (x1==x2?l4.value: l5.value);
                            })() !== l5.value ? l5.value : (function(){
                                var values = mv;
                                throw ({type: 'block', id: v1064, values: l5.value, message: 'Return from unknown block NIL.'})
                            })());
                            return (function(){
                                var x1 = (function(){
                                    var x1 = v1065;
                                    if (typeof x1 !== 'number') throw 'Not a number!';
                                    var x2 = (function(){
                                        var x = 10.0;
                                        var y = (function(){
                                            var x1 = v1070;
                                            if (typeof x1 !== 'number') throw 'Not a number!';
                                            var x2 = v1071;
                                            if (typeof x2 !== 'number') throw 'Not a number!';
                                            return x1*x2;
                                        })();
                                        if (typeof x != 'number')
                                            throw 'The value ' + x + ' is not a type number.';
                                        if (typeof y != 'number')
                                            throw 'The value ' + y + ' is not a type number.';
                                        return Math.pow(x, y);
                                    })();
                                    if (typeof x2 !== 'number') throw 'Not a number!';
                                    var x3 = v1068;
                                    if (typeof x3 !== 'number') throw 'Not a number!';
                                    return x1*x2*x3;
                                })();
                                if (typeof x1 !== 'number') throw 'Not a number!';
                                var x2 = v1069;
                                if (typeof x2 !== 'number') throw 'Not a number!';
                                return x1/x2/1.0;
                            })();
                        })(1,l5.value,l5.value,0,1,1,0,l54.fvalue(pv, 1, v1062),0);
                    }
                    catch (cf){
                        if (cf.type == 'block' && cf.id == v1064)
                            return values.apply(this, forcemv(cf.values));
                        else
                            throw cf;
                    }
                })();
            })();
        });
        func.fname = 'READ-FLOAT';
        return func;
    })();
    return l382;
})();
var l384 = (new Symbol(make_lisp_string("!PARSE-INTEGER")));
(function(){
    (l384).fvalue = (function(){
        var func = (function (values,nargs,v1102,v1103){
            checkArgs(nargs, 2);
            return (function(){
                return (function(){
                    try {
                    var v1105 = [];
                        return (function(v1106,v1107,v1108,v1109){
                            (function(){
                                return (function(){
                                    while(((function(){
                                        var x1 = v1107;
                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                        var x2 = v1108;
                                        if (typeof x2 !== 'number') throw 'Not a number!';
                                        return (x1<x2?l4.value: l5.value);
                                    })() !== l5.value ? l346.fvalue(pv, 1, v1102[v1107]) : l5.value) !== l5.value){
                                        (function(){
                                            var v1111 = 1;
                                            var v1112 = (function(){
                                                var x1 = v1107;
                                                if (typeof x1 !== 'number') throw 'Not a number!';
                                                var x2 = v1111;
                                                if (typeof x2 !== 'number') throw 'Not a number!';
                                                return x1+x2;
                                            })();
                                            return (v1107 = v1112);
                                        })();
                                    }return l5.value;
                                })();
                            })();
                            ((function(){
                                var x1 = v1107;
                                if (typeof x1 !== 'number') throw 'Not a number!';
                                var x2 = v1108;
                                if (typeof x2 !== 'number') throw 'Not a number!';
                                return (x1<x2?l4.value: l5.value);
                            })() !== l5.value ? l5.value : (function(){
                                var values = mv;
                                throw ({type: 'block', id: v1105, values: values(l5.value, 0), message: 'Return from unknown block NIL.'})
                            })());
                            (function(v1113){
                                return (l27.fvalue(pv, 2, v1113, "+") !== l5.value ? (function(){
                                    l5.value;
                                    return (function(){
                                        var v1114 = 1;
                                        var v1115 = (function(){
                                            var x1 = v1107;
                                            if (typeof x1 !== 'number') throw 'Not a number!';
                                            var x2 = v1114;
                                            if (typeof x2 !== 'number') throw 'Not a number!';
                                            return x1+x2;
                                        })();
                                        return (v1107 = v1115);
                                    })();
                                })() : (l27.fvalue(pv, 2, v1113, "-") !== l5.value ? (function(){
                                    l5.value;
                                    (v1109 = -1);
                                    return (function(){
                                        var v1116 = 1;
                                        var v1117 = (function(){
                                            var x1 = v1107;
                                            if (typeof x1 !== 'number') throw 'Not a number!';
                                            var x2 = v1116;
                                            if (typeof x2 !== 'number') throw 'Not a number!';
                                            return x1+x2;
                                        })();
                                        return (v1107 = v1117);
                                    })();
                                })() : l5.value));
                            })(v1102[0]);
                            (((function(){
                                var x1 = v1107;
                                if (typeof x1 !== 'number') throw 'Not a number!';
                                var x2 = v1108;
                                if (typeof x2 !== 'number') throw 'Not a number!';
                                return (x1<x2?l4.value: l5.value);
                            })() !== l5.value ? (v1106 = l71.fvalue(pv, 1, v1102[v1107])) : l5.value) !== l5.value ? l5.value : (function(){
                                var values = mv;
                                throw ({type: 'block', id: v1105, values: values(l5.value, v1107), message: 'Return from unknown block NIL.'})
                            })());
                            (function(){
                                var v1118 = 1;
                                var v1119 = (function(){
                                    var x1 = v1107;
                                    if (typeof x1 !== 'number') throw 'Not a number!';
                                    var x2 = v1118;
                                    if (typeof x2 !== 'number') throw 'Not a number!';
                                    return x1+x2;
                                })();
                                return (v1107 = v1119);
                            })();
                            (function(){
                                try {
                                var v1120 = [];
                                    return (function(){
                                        while((function(){
                                            var x1 = v1107;
                                            if (typeof x1 !== 'number') throw 'Not a number!';
                                            var x2 = v1108;
                                            if (typeof x2 !== 'number') throw 'Not a number!';
                                            return (x1<x2?l4.value: l5.value);
                                        })() !== l5.value){
                                            (function(v1121){
                                                (v1121 !== l5.value ? l5.value : (function(){
                                                    throw ({type: 'block', id: v1120, values: l5.value, message: 'Return from unknown block NIL.'})
                                                })());
                                                (v1106 = (function(){
                                                    var x1 = (function(){
                                                        var x1 = v1106;
                                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                                        return x1*10;
                                                    })();
                                                    if (typeof x1 !== 'number') throw 'Not a number!';
                                                    var x2 = v1121;
                                                    if (typeof x2 !== 'number') throw 'Not a number!';
                                                    return x1+x2;
                                                })());
                                                return (function(){
                                                    var v1122 = 1;
                                                    var v1123 = (function(){
                                                        var x1 = v1107;
                                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                                        var x2 = v1122;
                                                        if (typeof x2 !== 'number') throw 'Not a number!';
                                                        return x1+x2;
                                                    })();
                                                    return (v1107 = v1123);
                                                })();
                                            })(l71.fvalue(pv, 1, v1102[v1107]));
                                        }return l5.value;
                                    })();
                                }
                                catch (cf){
                                    if (cf.type == 'block' && cf.id == v1120)
                                        return cf.values;
                                    else
                                        throw cf;
                                }
                            })();
                            (function(){
                                return (function(v1125){
                                    return (function(){
                                        try {
                                        var v1126 = [];
                                            return (function(){
                                                while(l4.value !== l5.value){
                                                    ((function(v1127){
                                                        return (v1127 !== l5.value ? v1127 : l28.fvalue(pv, 1, l346.fvalue(pv, 1, v1102[v1125])));
                                                    })((function(){
                                                        var x1 = v1125;
                                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                                        var x2 = v1108;
                                                        if (typeof x2 !== 'number') throw 'Not a number!';
                                                        return (x1==x2?l4.value: l5.value);
                                                    })()) !== l5.value ? (function(){
                                                        throw ({type: 'block', id: v1126, values: ((function(){
                                                            var x1 = v1125;
                                                            if (typeof x1 !== 'number') throw 'Not a number!';
                                                            var x2 = v1108;
                                                            if (typeof x2 !== 'number') throw 'Not a number!';
                                                            return (x1==x2?l4.value: l5.value);
                                                        })() !== l5.value ? (v1107 = v1125) : l5.value), message: 'Return from unknown block NIL.'})
                                                    })() : l5.value);
                                                    l5.value;
                                                    (function(v1128){
                                                        return (v1125 = v1128);
                                                    })(l23.fvalue(pv, 1, v1125));
                                                }return l5.value;
                                            })();
                                        }
                                        catch (cf){
                                            if (cf.type == 'block' && cf.id == v1126)
                                                return cf.values;
                                            else
                                                throw cf;
                                        }
                                    })();
                                })(v1107);
                            })();
                            return ((function(v1129){
                                return (v1129 !== l5.value ? v1129 : (function(){
                                    var x1 = v1107;
                                    if (typeof x1 !== 'number') throw 'Not a number!';
                                    var x2 = v1108;
                                    if (typeof x2 !== 'number') throw 'Not a number!';
                                    return (x1==x2?l4.value: l5.value);
                                })());
                            })(v1103) !== l5.value ? values((function(){
                                var x1 = v1109;
                                if (typeof x1 !== 'number') throw 'Not a number!';
                                var x2 = v1106;
                                if (typeof x2 !== 'number') throw 'Not a number!';
                                return x1*x2;
                            })(), v1107) : values(l5.value, v1107));
                        })(0,0,l54.fvalue(pv, 1, v1102),1);
                    }
                    catch (cf){
                        if (cf.type == 'block' && cf.id == v1105)
                            return values.apply(this, forcemv(cf.values));
                        else
                            throw cf;
                    }
                })();
            })();
        });
        func.fname = '!PARSE-INTEGER';
        return func;
    })();
    return l384;
})();
var l385 = (new Symbol(make_lisp_string("PARSE-INTEGER")));
var l386 = (new Symbol(make_lisp_string("JUNK-ALLOWED"), make_lisp_string("KEYWORD")));
l386.value = l386;
var l387 = make_lisp_string("Junk detected.");
(function(){
    (l385).fvalue = (function(){
        var func = (function (values,nargs,v1130){
            checkArgsAtLeast(nargs, 1);
            var v1131; 
            var i;
            for (i=1; i<nargs; i+=2){
                if (arguments[i+2] === l386.value){
                    v1131 = arguments[i+3];
                    break;
                }
            }
            if (i == nargs){
                v1131 = l5.value;
            }
            for (i=1; i<nargs; i+=2){
                if (arguments[i+2] !== l386.value)
                    throw 'Unknown keyword argument ' + xstring(arguments[i].name);
            }
            return (function(){
                return (function(){
                    var func = (function (values,nargs,v1134,v1135){
                        switch(nargs){
                        case 0:
                            v1134=l5.value;
                        case 1:
                            v1135=l5.value;
                        default: break;
                        }
                        var v1133= l5.value;
                        for (var i = nargs-1; i>=2; i--)
                            v1133 = {car: arguments[i+2], cdr: v1133};
                        return (v1134 !== l5.value ? values(v1134, v1135) : l78.fvalue(values, 1, l387));
                    });
                    var args = [values, 0];
                    return (function(){
                        var values = mv;
                        var vs;
                        vs = l384.fvalue(values, 2, v1130, v1131);
                        if (typeof vs === 'object' && 'multiple-value' in vs)
                            args = args.concat(vs);
                        else
                            args.push(vs);
                        args[1] = args.length-2;
                        return func.apply(window, args);
                    })();
                })();
            })();
        });
        func.fname = 'PARSE-INTEGER';
        return func;
    })();
    return l385;
})();
(function(){
    (l361).fvalue = (function(){
        var func = (function (values,nargs,v1136){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v1138){
                    return (v1138 !== l5.value ? v1138 : (function(v1139){
                        return (v1139 !== l5.value ? v1139 : l375.fvalue(values, 1, v1136));
                    })(l382.fvalue(pv, 1, v1136)));
                })(l381.fvalue(pv, 1, v1136));
            })();
        });
        func.fname = 'INTERPRET-TOKEN';
        return func;
    })();
    return l361;
})();
var l388 = make_lisp_string("End of file");
var l389 = (new Symbol(make_lisp_string("QUOTE")));
var l390 = (new Symbol(make_lisp_string("BACKQUOTE")));
var l391 = (new Symbol(make_lisp_string("UNQUOTE-SPLICING")));
var l392 = (new Symbol(make_lisp_string("UNQUOTE")));
(function(){
    (l358).fvalue = (function(){
        var func = (function (values,nargs,v1140,v1141,v1142,v1143){
            checkArgsAtLeast(nargs, 1);
            checkArgsAtMost(nargs, 4);
            switch(nargs){
            case 1:
                v1141=l4.value;
            case 2:
                v1142=l5.value;
            case 3:
                v1143=l5.value;
            default: break;
            }
            return (function(){
                return (function(v1145,v1146){
                    (v1143 !== l5.value ? l5.value : (function(){
                        (function(){
                            return (function(){
                                var func = (function (values,nargs,v1148){
                                    switch(nargs){
                                    case 0:
                                        v1148=l5.value;
                                    default: break;
                                    }
                                    var v1147= l5.value;
                                    for (var i = nargs-1; i>=1; i--)
                                        v1147 = {car: arguments[i+2], cdr: v1147};
                                    return ((l338).value = v1148);
                                });
                                var args = [pv, 0];
                                return (function(){
                                    var values = mv;
                                    var vs;
                                    vs = l5.value;
                                    if (typeof vs === 'object' && 'multiple-value' in vs)
                                        args = args.concat(vs);
                                    else
                                        args.push(vs);
                                    args[1] = args.length-2;
                                    return func.apply(window, args);
                                })();
                            })();
                        })();
                        return (function(){
                            return (function(){
                                var func = (function (values,nargs,v1150){
                                    switch(nargs){
                                    case 0:
                                        v1150=l5.value;
                                    default: break;
                                    }
                                    var v1149= l5.value;
                                    for (var i = nargs-1; i>=1; i--)
                                        v1149 = {car: arguments[i+2], cdr: v1149};
                                    return ((l330).value = v1150);
                                });
                                var args = [pv, 0];
                                return (function(){
                                    var values = mv;
                                    var vs;
                                    vs = l331.fvalue(values, 0);
                                    if (typeof vs === 'object' && 'multiple-value' in vs)
                                        args = args.concat(vs);
                                    else
                                        args.push(vs);
                                    args[1] = args.length-2;
                                    return func.apply(window, args);
                                })();
                            })();
                        })();
                    })());
                    return (function(v1154){
                        (v1143 !== l5.value ? l5.value : (function(){
                            l339.fvalue(pv, 0);
                            (function(){
                                return (function(){
                                    var func = (function (values,nargs,v1156){
                                        switch(nargs){
                                        case 0:
                                            v1156=l5.value;
                                        default: break;
                                        }
                                        var v1155= l5.value;
                                        for (var i = nargs-1; i>=1; i--)
                                            v1155 = {car: arguments[i+2], cdr: v1155};
                                        return ((l330).value = v1156);
                                    });
                                    var args = [pv, 0];
                                    return (function(){
                                        var values = mv;
                                        var vs;
                                        vs = v1145;
                                        if (typeof vs === 'object' && 'multiple-value' in vs)
                                            args = args.concat(vs);
                                        else
                                            args.push(vs);
                                        args[1] = args.length-2;
                                        return func.apply(window, args);
                                    })();
                                })();
                            })();
                            return (function(){
                                return (function(){
                                    var func = (function (values,nargs,v1158){
                                        switch(nargs){
                                        case 0:
                                            v1158=l5.value;
                                        default: break;
                                        }
                                        var v1157= l5.value;
                                        for (var i = nargs-1; i>=1; i--)
                                            v1157 = {car: arguments[i+2], cdr: v1157};
                                        return ((l338).value = v1158);
                                    });
                                    var args = [pv, 0];
                                    return (function(){
                                        var values = mv;
                                        var vs;
                                        vs = v1146;
                                        if (typeof vs === 'object' && 'multiple-value' in vs)
                                            args = args.concat(vs);
                                        else
                                            args.push(vs);
                                        args[1] = args.length-2;
                                        return func.apply(window, args);
                                    })();
                                })();
                            })();
                        })());
                        return v1154;
                    })((function(){
                        l352.fvalue(pv, 1, v1140);
                        return (function(v1151){
                            return ((function(v1152){
                                return (v1152 !== l5.value ? v1152 : l64.fvalue(pv, 2, v1151, ")"));
                            })(l44.fvalue(pv, 1, v1151)) !== l5.value ? (v1141 !== l5.value ? l78.fvalue(pv, 1, l388) : v1142) : (l64.fvalue(pv, 2, v1151, "(") !== l5.value ? (function(){
                                l345.fvalue(pv, 1, v1140);
                                return l356.fvalue(pv, 3, v1140, v1141, v1142);
                            })() : (l64.fvalue(pv, 2, v1151, "'") !== l5.value ? (function(){
                                l345.fvalue(pv, 1, v1140);
                                return l92.fvalue(pv, 2, l389, l358.fvalue(pv, 4, v1140, v1141, v1142, l4.value));
                            })() : (l64.fvalue(pv, 2, v1151, "`") !== l5.value ? (function(){
                                l345.fvalue(pv, 1, v1140);
                                return l92.fvalue(pv, 2, l390, l358.fvalue(pv, 4, v1140, v1141, v1142, l4.value));
                            })() : (l64.fvalue(pv, 2, v1151, "\"") !== l5.value ? (function(){
                                l345.fvalue(pv, 1, v1140);
                                return l362.fvalue(pv, 1, v1140);
                            })() : (l64.fvalue(pv, 2, v1151, ",") !== l5.value ? (function(){
                                l345.fvalue(pv, 1, v1140);
                                return (l27.fvalue(pv, 2, l344.fvalue(pv, 1, v1140), "@") !== l5.value ? (function(){
                                    l345.fvalue(pv, 1, v1140);
                                    return l92.fvalue(pv, 2, l391, l358.fvalue(pv, 4, v1140, v1141, v1142, l4.value));
                                })() : l92.fvalue(pv, 2, l392, l358.fvalue(pv, 4, v1140, v1141, v1142, l4.value)));
                            })() : (l64.fvalue(pv, 2, v1151, "#") !== l5.value ? l364.fvalue(pv, 3, v1140, v1141, v1142) : (function(v1153){
                                return l361.fvalue(pv, 1, v1153);
                            })(l349.fvalue(pv, 2, v1140, (function(){
                                var symbol = l224;
                                var func = symbol.fvalue;
                                if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                                return func;
                            })())))))))));
                        })(l344.fvalue(pv, 1, v1140));
                    })());
                })((function(){
                    var symbol = l330;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(),(function(){
                    var symbol = l338;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })());
            })();
        });
        func.fname = 'LS-READ';
        return func;
    })();
    return l358;
})();
var l393 = (new Symbol(make_lisp_string("LS-READ-FROM-STRING")));
(function(){
    (l393).fvalue = (function(){
        var func = (function (values,nargs,v1159,v1160,v1161){
            checkArgsAtLeast(nargs, 1);
            checkArgsAtMost(nargs, 3);
            switch(nargs){
            case 1:
                v1160=l4.value;
            case 2:
                v1161=l5.value;
            default: break;
            }
            return (function(){
                return l358.fvalue(values, 3, l343.fvalue(pv, 1, v1159), v1160, v1161);
            })();
        });
        func.fname = 'LS-READ-FROM-STRING';
        return func;
    })();
    return l393;
})();
var l394 = (new Symbol(make_lisp_string("READ-FROM-STRING")));
(function(){
    (l394).fvalue = (function(){
        var func = (function (values,nargs,v1163,v1164,v1165){
            checkArgsAtLeast(nargs, 1);
            checkArgsAtMost(nargs, 3);
            switch(nargs){
            case 1:
                v1164=l4.value;
            case 2:
                v1165=l5.value;
            default: break;
            }
            return (function(){
                return l393.fvalue(values, 3, v1163, v1164, v1165);
            })();
        });
        func.fname = 'READ-FROM-STRING';
        return func;
    })();
    return l394;
})();
var l395 = (new Symbol(make_lisp_string("DEF!STRUCT")));
l395;
var l396 = (new Symbol(make_lisp_string("!LAMBDA-LIST-KEYWORDS")));
var l397 = (new Symbol(make_lisp_string("&OPTIONAL")));
var l398 = (new Symbol(make_lisp_string("&REST")));
var l399 = (new Symbol(make_lisp_string("&KEY")));
var l400 = (new Symbol(make_lisp_string("&AUX")));
var l401 = (new Symbol(make_lisp_string("&ALLOW-OTHER-KEYS")));
var l402 = (new Symbol(make_lisp_string("&BODY")));
var l403 = QIList(l397,l398,l399,l400,l401,l402,l397,l5);
(function(){
    (((l396.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l396).value = l403));
    return l396;
})();
var l404 = (new Symbol(make_lisp_string("MAKE-OPTVAR")));
var l405 = (new Symbol(make_lisp_string("VARIABLE"), make_lisp_string("KEYWORD")));
l405.value = l405;
var l406 = (new Symbol(make_lisp_string("INITFORM"), make_lisp_string("KEYWORD")));
l406.value = l406;
var l407 = (new Symbol(make_lisp_string("SUPPLIED-P-PARAMETER"), make_lisp_string("KEYWORD")));
l407.value = l407;
var l408 = (new Symbol(make_lisp_string("OPTVAR")));
var l409 = (new Symbol(make_lisp_string("OPTVAR-P")));
var l410 = (new Symbol(make_lisp_string("COPY-OPTVAR")));
var l411 = (new Symbol(make_lisp_string("OPTVAR-VARIABLE")));
var l412 = make_lisp_string("The object `~S' is not of type `~S'");
var l413 = make_lisp_string("OPTVAR");
var l414 = (new Symbol(make_lisp_string("OPTVAR-INITFORM")));
var l415 = (new Symbol(make_lisp_string("OPTVAR-SUPPLIED-P-PARAMETER")));
(function(){
    (function(){
        (l404).fvalue = (function(){
            var func = (function (values,nargs){
                var v1167; 
                var v1168; 
                var v1169; 
                var i;
                for (i=0; i<nargs; i+=2){
                    if (arguments[i+2] === l405.value){
                        v1167 = arguments[i+3];
                        break;
                    }
                }
                if (i == nargs){
                    v1167 = l5.value;
                }
                for (i=0; i<nargs; i+=2){
                    if (arguments[i+2] === l406.value){
                        v1168 = arguments[i+3];
                        break;
                    }
                }
                if (i == nargs){
                    v1168 = l5.value;
                }
                for (i=0; i<nargs; i+=2){
                    if (arguments[i+2] === l407.value){
                        v1169 = arguments[i+3];
                        break;
                    }
                }
                if (i == nargs){
                    v1169 = l5.value;
                }
                for (i=0; i<nargs; i+=2){
                    if (arguments[i+2] !== l405.value && arguments[i+2] !== l406.value && arguments[i+2] !== l407.value)
                        throw 'Unknown keyword argument ' + xstring(arguments[i].name);
                }
                return (function(){
                    return l92.fvalue(values, 4, l408, v1167, v1168, v1169);
                })();
            });
            func.fname = 'MAKE-OPTVAR';
            return func;
        })();
        return l404;
    })();
    (function(){
        (l409).fvalue = (function(){
            var func = (function (values,nargs,v1171){
                checkArgs(nargs, 1);
                return (function(){
                    return (((function(){
                        var tmp = v1171;
                        return (typeof tmp == 'object' && 'car' in tmp);
                    })()?l4.value: l5.value) !== l5.value ? (((function(){
                        var tmp = v1171;
                        return tmp === l5.value? l5.value: tmp.car;
                    })() === l408)?l4.value: l5.value) : l5.value);
                })();
            });
            func.fname = 'OPTVAR-P';
            return func;
        })();
        return l409;
    })();
    (function(){
        (l410).fvalue = (function(){
            var func = (function (values,nargs,v1173){
                checkArgs(nargs, 1);
                return (function(){
                    return l180.fvalue(values, 1, v1173);
                })();
            });
            func.fname = 'COPY-OPTVAR';
            return func;
        })();
        return l410;
    })();
    (function(){
        (l411).fvalue = (function(){
            var func = (function (values,nargs,v1175){
                checkArgs(nargs, 1);
                return (function(){
                    (l409.fvalue(pv, 1, v1175) !== l5.value ? l5.value : l78.fvalue(pv, 3, l412, v1175, l413));
                    return l151.fvalue(values, 2, 1, v1175);
                })();
            });
            func.fname = 'OPTVAR-VARIABLE';
            return func;
        })();
        return l411;
    })();
    (function(){
        (function(){
            var v1177 = ({car: l411, cdr: (function (values,nargs,v1178){
                checkArgs(nargs, 1);
                return (function(v1179,v1180){
                    return values(l92.fvalue(pv, 1, v1179), l92.fvalue(pv, 1, v1178), l92.fvalue(pv, 1, v1180), l92.fvalue(pv, 3, l196, l92.fvalue(pv, 3, l197, l92.fvalue(pv, 3, l150, 1, v1179), v1180), v1180), l92.fvalue(pv, 2, l411, v1179));
                })(l15.fvalue(pv, 0),l15.fvalue(pv, 0));
            })});
            var v1181 = ({car: v1177, cdr: (function(){
                var symbol = l90;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })()});
            return ((l90).value = v1181);
        })();
        return l411;
    })();
    (function(){
        (l414).fvalue = (function(){
            var func = (function (values,nargs,v1182){
                checkArgs(nargs, 1);
                return (function(){
                    (l409.fvalue(pv, 1, v1182) !== l5.value ? l5.value : l78.fvalue(pv, 3, l412, v1182, l413));
                    return l151.fvalue(values, 2, 2, v1182);
                })();
            });
            func.fname = 'OPTVAR-INITFORM';
            return func;
        })();
        return l414;
    })();
    (function(){
        (function(){
            var v1184 = ({car: l414, cdr: (function (values,nargs,v1185){
                checkArgs(nargs, 1);
                return (function(v1186,v1187){
                    return values(l92.fvalue(pv, 1, v1186), l92.fvalue(pv, 1, v1185), l92.fvalue(pv, 1, v1187), l92.fvalue(pv, 3, l196, l92.fvalue(pv, 3, l197, l92.fvalue(pv, 3, l150, 2, v1186), v1187), v1187), l92.fvalue(pv, 2, l414, v1186));
                })(l15.fvalue(pv, 0),l15.fvalue(pv, 0));
            })});
            var v1188 = ({car: v1184, cdr: (function(){
                var symbol = l90;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })()});
            return ((l90).value = v1188);
        })();
        return l414;
    })();
    (function(){
        (l415).fvalue = (function(){
            var func = (function (values,nargs,v1189){
                checkArgs(nargs, 1);
                return (function(){
                    (l409.fvalue(pv, 1, v1189) !== l5.value ? l5.value : l78.fvalue(pv, 3, l412, v1189, l413));
                    return l151.fvalue(values, 2, 3, v1189);
                })();
            });
            func.fname = 'OPTVAR-SUPPLIED-P-PARAMETER';
            return func;
        })();
        return l415;
    })();
    (function(){
        (function(){
            var v1191 = ({car: l415, cdr: (function (values,nargs,v1192){
                checkArgs(nargs, 1);
                return (function(v1193,v1194){
                    return values(l92.fvalue(pv, 1, v1193), l92.fvalue(pv, 1, v1192), l92.fvalue(pv, 1, v1194), l92.fvalue(pv, 3, l196, l92.fvalue(pv, 3, l197, l92.fvalue(pv, 3, l150, 3, v1193), v1194), v1194), l92.fvalue(pv, 2, l415, v1193));
                })(l15.fvalue(pv, 0),l15.fvalue(pv, 0));
            })});
            var v1195 = ({car: v1191, cdr: (function(){
                var symbol = l90;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })()});
            return ((l90).value = v1195);
        })();
        return l415;
    })();
    return l408;
})();
var l416 = (new Symbol(make_lisp_string("MAKE-KEYVAR")));
var l417 = (new Symbol(make_lisp_string("KEYWORD-NAME"), make_lisp_string("KEYWORD")));
l417.value = l417;
var l418 = (new Symbol(make_lisp_string("KEYVAR")));
var l419 = (new Symbol(make_lisp_string("KEYVAR-P")));
var l420 = (new Symbol(make_lisp_string("COPY-KEYVAR")));
var l421 = (new Symbol(make_lisp_string("KEYVAR-VARIABLE")));
var l422 = make_lisp_string("KEYVAR");
var l423 = (new Symbol(make_lisp_string("KEYVAR-KEYWORD-NAME")));
var l424 = (new Symbol(make_lisp_string("KEYVAR-INITFORM")));
var l425 = (new Symbol(make_lisp_string("KEYVAR-SUPPLIED-P-PARAMETER")));
(function(){
    (function(){
        (l416).fvalue = (function(){
            var func = (function (values,nargs){
                var v1196; 
                var v1197; 
                var v1198; 
                var v1199; 
                var i;
                for (i=0; i<nargs; i+=2){
                    if (arguments[i+2] === l405.value){
                        v1196 = arguments[i+3];
                        break;
                    }
                }
                if (i == nargs){
                    v1196 = l5.value;
                }
                for (i=0; i<nargs; i+=2){
                    if (arguments[i+2] === l417.value){
                        v1197 = arguments[i+3];
                        break;
                    }
                }
                if (i == nargs){
                    v1197 = l5.value;
                }
                for (i=0; i<nargs; i+=2){
                    if (arguments[i+2] === l406.value){
                        v1198 = arguments[i+3];
                        break;
                    }
                }
                if (i == nargs){
                    v1198 = l5.value;
                }
                for (i=0; i<nargs; i+=2){
                    if (arguments[i+2] === l407.value){
                        v1199 = arguments[i+3];
                        break;
                    }
                }
                if (i == nargs){
                    v1199 = l5.value;
                }
                for (i=0; i<nargs; i+=2){
                    if (arguments[i+2] !== l405.value && arguments[i+2] !== l417.value && arguments[i+2] !== l406.value && arguments[i+2] !== l407.value)
                        throw 'Unknown keyword argument ' + xstring(arguments[i].name);
                }
                return (function(){
                    return l92.fvalue(values, 5, l418, v1196, v1197, v1198, v1199);
                })();
            });
            func.fname = 'MAKE-KEYVAR';
            return func;
        })();
        return l416;
    })();
    (function(){
        (l419).fvalue = (function(){
            var func = (function (values,nargs,v1201){
                checkArgs(nargs, 1);
                return (function(){
                    return (((function(){
                        var tmp = v1201;
                        return (typeof tmp == 'object' && 'car' in tmp);
                    })()?l4.value: l5.value) !== l5.value ? (((function(){
                        var tmp = v1201;
                        return tmp === l5.value? l5.value: tmp.car;
                    })() === l418)?l4.value: l5.value) : l5.value);
                })();
            });
            func.fname = 'KEYVAR-P';
            return func;
        })();
        return l419;
    })();
    (function(){
        (l420).fvalue = (function(){
            var func = (function (values,nargs,v1203){
                checkArgs(nargs, 1);
                return (function(){
                    return l180.fvalue(values, 1, v1203);
                })();
            });
            func.fname = 'COPY-KEYVAR';
            return func;
        })();
        return l420;
    })();
    (function(){
        (l421).fvalue = (function(){
            var func = (function (values,nargs,v1205){
                checkArgs(nargs, 1);
                return (function(){
                    (l419.fvalue(pv, 1, v1205) !== l5.value ? l5.value : l78.fvalue(pv, 3, l412, v1205, l422));
                    return l151.fvalue(values, 2, 1, v1205);
                })();
            });
            func.fname = 'KEYVAR-VARIABLE';
            return func;
        })();
        return l421;
    })();
    (function(){
        (function(){
            var v1207 = ({car: l421, cdr: (function (values,nargs,v1208){
                checkArgs(nargs, 1);
                return (function(v1209,v1210){
                    return values(l92.fvalue(pv, 1, v1209), l92.fvalue(pv, 1, v1208), l92.fvalue(pv, 1, v1210), l92.fvalue(pv, 3, l196, l92.fvalue(pv, 3, l197, l92.fvalue(pv, 3, l150, 1, v1209), v1210), v1210), l92.fvalue(pv, 2, l421, v1209));
                })(l15.fvalue(pv, 0),l15.fvalue(pv, 0));
            })});
            var v1211 = ({car: v1207, cdr: (function(){
                var symbol = l90;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })()});
            return ((l90).value = v1211);
        })();
        return l421;
    })();
    (function(){
        (l423).fvalue = (function(){
            var func = (function (values,nargs,v1212){
                checkArgs(nargs, 1);
                return (function(){
                    (l419.fvalue(pv, 1, v1212) !== l5.value ? l5.value : l78.fvalue(pv, 3, l412, v1212, l422));
                    return l151.fvalue(values, 2, 2, v1212);
                })();
            });
            func.fname = 'KEYVAR-KEYWORD-NAME';
            return func;
        })();
        return l423;
    })();
    (function(){
        (function(){
            var v1214 = ({car: l423, cdr: (function (values,nargs,v1215){
                checkArgs(nargs, 1);
                return (function(v1216,v1217){
                    return values(l92.fvalue(pv, 1, v1216), l92.fvalue(pv, 1, v1215), l92.fvalue(pv, 1, v1217), l92.fvalue(pv, 3, l196, l92.fvalue(pv, 3, l197, l92.fvalue(pv, 3, l150, 2, v1216), v1217), v1217), l92.fvalue(pv, 2, l423, v1216));
                })(l15.fvalue(pv, 0),l15.fvalue(pv, 0));
            })});
            var v1218 = ({car: v1214, cdr: (function(){
                var symbol = l90;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })()});
            return ((l90).value = v1218);
        })();
        return l423;
    })();
    (function(){
        (l424).fvalue = (function(){
            var func = (function (values,nargs,v1219){
                checkArgs(nargs, 1);
                return (function(){
                    (l419.fvalue(pv, 1, v1219) !== l5.value ? l5.value : l78.fvalue(pv, 3, l412, v1219, l422));
                    return l151.fvalue(values, 2, 3, v1219);
                })();
            });
            func.fname = 'KEYVAR-INITFORM';
            return func;
        })();
        return l424;
    })();
    (function(){
        (function(){
            var v1221 = ({car: l424, cdr: (function (values,nargs,v1222){
                checkArgs(nargs, 1);
                return (function(v1223,v1224){
                    return values(l92.fvalue(pv, 1, v1223), l92.fvalue(pv, 1, v1222), l92.fvalue(pv, 1, v1224), l92.fvalue(pv, 3, l196, l92.fvalue(pv, 3, l197, l92.fvalue(pv, 3, l150, 3, v1223), v1224), v1224), l92.fvalue(pv, 2, l424, v1223));
                })(l15.fvalue(pv, 0),l15.fvalue(pv, 0));
            })});
            var v1225 = ({car: v1221, cdr: (function(){
                var symbol = l90;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })()});
            return ((l90).value = v1225);
        })();
        return l424;
    })();
    (function(){
        (l425).fvalue = (function(){
            var func = (function (values,nargs,v1226){
                checkArgs(nargs, 1);
                return (function(){
                    (l419.fvalue(pv, 1, v1226) !== l5.value ? l5.value : l78.fvalue(pv, 3, l412, v1226, l422));
                    return l151.fvalue(values, 2, 4, v1226);
                })();
            });
            func.fname = 'KEYVAR-SUPPLIED-P-PARAMETER';
            return func;
        })();
        return l425;
    })();
    (function(){
        (function(){
            var v1228 = ({car: l425, cdr: (function (values,nargs,v1229){
                checkArgs(nargs, 1);
                return (function(v1230,v1231){
                    return values(l92.fvalue(pv, 1, v1230), l92.fvalue(pv, 1, v1229), l92.fvalue(pv, 1, v1231), l92.fvalue(pv, 3, l196, l92.fvalue(pv, 3, l197, l92.fvalue(pv, 3, l150, 4, v1230), v1231), v1231), l92.fvalue(pv, 2, l425, v1230));
                })(l15.fvalue(pv, 0),l15.fvalue(pv, 0));
            })});
            var v1232 = ({car: v1228, cdr: (function(){
                var symbol = l90;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })()});
            return ((l90).value = v1232);
        })();
        return l425;
    })();
    return l418;
})();
var l426 = (new Symbol(make_lisp_string("MAKE-AUXVAR")));
var l427 = (new Symbol(make_lisp_string("AUXVAR")));
var l428 = (new Symbol(make_lisp_string("AUXVAR-P")));
var l429 = (new Symbol(make_lisp_string("COPY-AUXVAR")));
var l430 = (new Symbol(make_lisp_string("AUXVAR-VARIABLE")));
var l431 = make_lisp_string("AUXVAR");
var l432 = (new Symbol(make_lisp_string("AUXVAR-INITFORM")));
(function(){
    (function(){
        (l426).fvalue = (function(){
            var func = (function (values,nargs){
                var v1233; 
                var v1234; 
                var i;
                for (i=0; i<nargs; i+=2){
                    if (arguments[i+2] === l405.value){
                        v1233 = arguments[i+3];
                        break;
                    }
                }
                if (i == nargs){
                    v1233 = l5.value;
                }
                for (i=0; i<nargs; i+=2){
                    if (arguments[i+2] === l406.value){
                        v1234 = arguments[i+3];
                        break;
                    }
                }
                if (i == nargs){
                    v1234 = l5.value;
                }
                for (i=0; i<nargs; i+=2){
                    if (arguments[i+2] !== l405.value && arguments[i+2] !== l406.value)
                        throw 'Unknown keyword argument ' + xstring(arguments[i].name);
                }
                return (function(){
                    return l92.fvalue(values, 3, l427, v1233, v1234);
                })();
            });
            func.fname = 'MAKE-AUXVAR';
            return func;
        })();
        return l426;
    })();
    (function(){
        (l428).fvalue = (function(){
            var func = (function (values,nargs,v1236){
                checkArgs(nargs, 1);
                return (function(){
                    return (((function(){
                        var tmp = v1236;
                        return (typeof tmp == 'object' && 'car' in tmp);
                    })()?l4.value: l5.value) !== l5.value ? (((function(){
                        var tmp = v1236;
                        return tmp === l5.value? l5.value: tmp.car;
                    })() === l427)?l4.value: l5.value) : l5.value);
                })();
            });
            func.fname = 'AUXVAR-P';
            return func;
        })();
        return l428;
    })();
    (function(){
        (l429).fvalue = (function(){
            var func = (function (values,nargs,v1238){
                checkArgs(nargs, 1);
                return (function(){
                    return l180.fvalue(values, 1, v1238);
                })();
            });
            func.fname = 'COPY-AUXVAR';
            return func;
        })();
        return l429;
    })();
    (function(){
        (l430).fvalue = (function(){
            var func = (function (values,nargs,v1240){
                checkArgs(nargs, 1);
                return (function(){
                    (l428.fvalue(pv, 1, v1240) !== l5.value ? l5.value : l78.fvalue(pv, 3, l412, v1240, l431));
                    return l151.fvalue(values, 2, 1, v1240);
                })();
            });
            func.fname = 'AUXVAR-VARIABLE';
            return func;
        })();
        return l430;
    })();
    (function(){
        (function(){
            var v1242 = ({car: l430, cdr: (function (values,nargs,v1243){
                checkArgs(nargs, 1);
                return (function(v1244,v1245){
                    return values(l92.fvalue(pv, 1, v1244), l92.fvalue(pv, 1, v1243), l92.fvalue(pv, 1, v1245), l92.fvalue(pv, 3, l196, l92.fvalue(pv, 3, l197, l92.fvalue(pv, 3, l150, 1, v1244), v1245), v1245), l92.fvalue(pv, 2, l430, v1244));
                })(l15.fvalue(pv, 0),l15.fvalue(pv, 0));
            })});
            var v1246 = ({car: v1242, cdr: (function(){
                var symbol = l90;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })()});
            return ((l90).value = v1246);
        })();
        return l430;
    })();
    (function(){
        (l432).fvalue = (function(){
            var func = (function (values,nargs,v1247){
                checkArgs(nargs, 1);
                return (function(){
                    (l428.fvalue(pv, 1, v1247) !== l5.value ? l5.value : l78.fvalue(pv, 3, l412, v1247, l431));
                    return l151.fvalue(values, 2, 2, v1247);
                })();
            });
            func.fname = 'AUXVAR-INITFORM';
            return func;
        })();
        return l432;
    })();
    (function(){
        (function(){
            var v1249 = ({car: l432, cdr: (function (values,nargs,v1250){
                checkArgs(nargs, 1);
                return (function(v1251,v1252){
                    return values(l92.fvalue(pv, 1, v1251), l92.fvalue(pv, 1, v1250), l92.fvalue(pv, 1, v1252), l92.fvalue(pv, 3, l196, l92.fvalue(pv, 3, l197, l92.fvalue(pv, 3, l150, 2, v1251), v1252), v1252), l92.fvalue(pv, 2, l432, v1251));
                })(l15.fvalue(pv, 0),l15.fvalue(pv, 0));
            })});
            var v1253 = ({car: v1249, cdr: (function(){
                var symbol = l90;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })()});
            return ((l90).value = v1253);
        })();
        return l432;
    })();
    return l427;
})();
var l433 = (new Symbol(make_lisp_string("MAKE-D-LAMBDA-LIST")));
var l434 = (new Symbol(make_lisp_string("WHOLEVAR"), make_lisp_string("KEYWORD")));
l434.value = l434;
var l435 = (new Symbol(make_lisp_string("REQVARS"), make_lisp_string("KEYWORD")));
l435.value = l435;
var l436 = (new Symbol(make_lisp_string("OPTVARS"), make_lisp_string("KEYWORD")));
l436.value = l436;
var l437 = (new Symbol(make_lisp_string("RESTVAR"), make_lisp_string("KEYWORD")));
l437.value = l437;
var l438 = (new Symbol(make_lisp_string("ALLOW-OTHER-KEYS"), make_lisp_string("KEYWORD")));
l438.value = l438;
var l439 = (new Symbol(make_lisp_string("KEYVARS"), make_lisp_string("KEYWORD")));
l439.value = l439;
var l440 = (new Symbol(make_lisp_string("AUXVARS"), make_lisp_string("KEYWORD")));
l440.value = l440;
var l441 = (new Symbol(make_lisp_string("D-LAMBDA-LIST")));
var l442 = (new Symbol(make_lisp_string("D-LAMBDA-LIST-P")));
var l443 = (new Symbol(make_lisp_string("COPY-D-LAMBDA-LIST")));
var l444 = (new Symbol(make_lisp_string("D-LAMBDA-LIST-WHOLEVAR")));
var l445 = make_lisp_string("D-LAMBDA-LIST");
var l446 = (new Symbol(make_lisp_string("D-LAMBDA-LIST-REQVARS")));
var l447 = (new Symbol(make_lisp_string("D-LAMBDA-LIST-OPTVARS")));
var l448 = (new Symbol(make_lisp_string("D-LAMBDA-LIST-RESTVAR")));
var l449 = (new Symbol(make_lisp_string("D-LAMBDA-LIST-ALLOW-OTHER-KEYS")));
var l450 = (new Symbol(make_lisp_string("D-LAMBDA-LIST-KEYVARS")));
var l451 = (new Symbol(make_lisp_string("D-LAMBDA-LIST-AUXVARS")));
(function(){
    (function(){
        (l433).fvalue = (function(){
            var func = (function (values,nargs){
                var v1254; 
                var v1255; 
                var v1256; 
                var v1257; 
                var v1258; 
                var v1259; 
                var v1260; 
                var i;
                for (i=0; i<nargs; i+=2){
                    if (arguments[i+2] === l434.value){
                        v1254 = arguments[i+3];
                        break;
                    }
                }
                if (i == nargs){
                    v1254 = l5.value;
                }
                for (i=0; i<nargs; i+=2){
                    if (arguments[i+2] === l435.value){
                        v1255 = arguments[i+3];
                        break;
                    }
                }
                if (i == nargs){
                    v1255 = l5.value;
                }
                for (i=0; i<nargs; i+=2){
                    if (arguments[i+2] === l436.value){
                        v1256 = arguments[i+3];
                        break;
                    }
                }
                if (i == nargs){
                    v1256 = l5.value;
                }
                for (i=0; i<nargs; i+=2){
                    if (arguments[i+2] === l437.value){
                        v1257 = arguments[i+3];
                        break;
                    }
                }
                if (i == nargs){
                    v1257 = l5.value;
                }
                for (i=0; i<nargs; i+=2){
                    if (arguments[i+2] === l438.value){
                        v1258 = arguments[i+3];
                        break;
                    }
                }
                if (i == nargs){
                    v1258 = l5.value;
                }
                for (i=0; i<nargs; i+=2){
                    if (arguments[i+2] === l439.value){
                        v1259 = arguments[i+3];
                        break;
                    }
                }
                if (i == nargs){
                    v1259 = l5.value;
                }
                for (i=0; i<nargs; i+=2){
                    if (arguments[i+2] === l440.value){
                        v1260 = arguments[i+3];
                        break;
                    }
                }
                if (i == nargs){
                    v1260 = l5.value;
                }
                for (i=0; i<nargs; i+=2){
                    if (arguments[i+2] !== l434.value && arguments[i+2] !== l435.value && arguments[i+2] !== l436.value && arguments[i+2] !== l437.value && arguments[i+2] !== l438.value && arguments[i+2] !== l439.value && arguments[i+2] !== l440.value)
                        throw 'Unknown keyword argument ' + xstring(arguments[i].name);
                }
                return (function(){
                    return l92.fvalue(values, 8, l441, v1254, v1255, v1256, v1257, v1258, v1259, v1260);
                })();
            });
            func.fname = 'MAKE-D-LAMBDA-LIST';
            return func;
        })();
        return l433;
    })();
    (function(){
        (l442).fvalue = (function(){
            var func = (function (values,nargs,v1262){
                checkArgs(nargs, 1);
                return (function(){
                    return (((function(){
                        var tmp = v1262;
                        return (typeof tmp == 'object' && 'car' in tmp);
                    })()?l4.value: l5.value) !== l5.value ? (((function(){
                        var tmp = v1262;
                        return tmp === l5.value? l5.value: tmp.car;
                    })() === l441)?l4.value: l5.value) : l5.value);
                })();
            });
            func.fname = 'D-LAMBDA-LIST-P';
            return func;
        })();
        return l442;
    })();
    (function(){
        (l443).fvalue = (function(){
            var func = (function (values,nargs,v1264){
                checkArgs(nargs, 1);
                return (function(){
                    return l180.fvalue(values, 1, v1264);
                })();
            });
            func.fname = 'COPY-D-LAMBDA-LIST';
            return func;
        })();
        return l443;
    })();
    (function(){
        (l444).fvalue = (function(){
            var func = (function (values,nargs,v1266){
                checkArgs(nargs, 1);
                return (function(){
                    (l442.fvalue(pv, 1, v1266) !== l5.value ? l5.value : l78.fvalue(pv, 3, l412, v1266, l445));
                    return l151.fvalue(values, 2, 1, v1266);
                })();
            });
            func.fname = 'D-LAMBDA-LIST-WHOLEVAR';
            return func;
        })();
        return l444;
    })();
    (function(){
        (function(){
            var v1268 = ({car: l444, cdr: (function (values,nargs,v1269){
                checkArgs(nargs, 1);
                return (function(v1270,v1271){
                    return values(l92.fvalue(pv, 1, v1270), l92.fvalue(pv, 1, v1269), l92.fvalue(pv, 1, v1271), l92.fvalue(pv, 3, l196, l92.fvalue(pv, 3, l197, l92.fvalue(pv, 3, l150, 1, v1270), v1271), v1271), l92.fvalue(pv, 2, l444, v1270));
                })(l15.fvalue(pv, 0),l15.fvalue(pv, 0));
            })});
            var v1272 = ({car: v1268, cdr: (function(){
                var symbol = l90;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })()});
            return ((l90).value = v1272);
        })();
        return l444;
    })();
    (function(){
        (l446).fvalue = (function(){
            var func = (function (values,nargs,v1273){
                checkArgs(nargs, 1);
                return (function(){
                    (l442.fvalue(pv, 1, v1273) !== l5.value ? l5.value : l78.fvalue(pv, 3, l412, v1273, l445));
                    return l151.fvalue(values, 2, 2, v1273);
                })();
            });
            func.fname = 'D-LAMBDA-LIST-REQVARS';
            return func;
        })();
        return l446;
    })();
    (function(){
        (function(){
            var v1275 = ({car: l446, cdr: (function (values,nargs,v1276){
                checkArgs(nargs, 1);
                return (function(v1277,v1278){
                    return values(l92.fvalue(pv, 1, v1277), l92.fvalue(pv, 1, v1276), l92.fvalue(pv, 1, v1278), l92.fvalue(pv, 3, l196, l92.fvalue(pv, 3, l197, l92.fvalue(pv, 3, l150, 2, v1277), v1278), v1278), l92.fvalue(pv, 2, l446, v1277));
                })(l15.fvalue(pv, 0),l15.fvalue(pv, 0));
            })});
            var v1279 = ({car: v1275, cdr: (function(){
                var symbol = l90;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })()});
            return ((l90).value = v1279);
        })();
        return l446;
    })();
    (function(){
        (l447).fvalue = (function(){
            var func = (function (values,nargs,v1280){
                checkArgs(nargs, 1);
                return (function(){
                    (l442.fvalue(pv, 1, v1280) !== l5.value ? l5.value : l78.fvalue(pv, 3, l412, v1280, l445));
                    return l151.fvalue(values, 2, 3, v1280);
                })();
            });
            func.fname = 'D-LAMBDA-LIST-OPTVARS';
            return func;
        })();
        return l447;
    })();
    (function(){
        (function(){
            var v1282 = ({car: l447, cdr: (function (values,nargs,v1283){
                checkArgs(nargs, 1);
                return (function(v1284,v1285){
                    return values(l92.fvalue(pv, 1, v1284), l92.fvalue(pv, 1, v1283), l92.fvalue(pv, 1, v1285), l92.fvalue(pv, 3, l196, l92.fvalue(pv, 3, l197, l92.fvalue(pv, 3, l150, 3, v1284), v1285), v1285), l92.fvalue(pv, 2, l447, v1284));
                })(l15.fvalue(pv, 0),l15.fvalue(pv, 0));
            })});
            var v1286 = ({car: v1282, cdr: (function(){
                var symbol = l90;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })()});
            return ((l90).value = v1286);
        })();
        return l447;
    })();
    (function(){
        (l448).fvalue = (function(){
            var func = (function (values,nargs,v1287){
                checkArgs(nargs, 1);
                return (function(){
                    (l442.fvalue(pv, 1, v1287) !== l5.value ? l5.value : l78.fvalue(pv, 3, l412, v1287, l445));
                    return l151.fvalue(values, 2, 4, v1287);
                })();
            });
            func.fname = 'D-LAMBDA-LIST-RESTVAR';
            return func;
        })();
        return l448;
    })();
    (function(){
        (function(){
            var v1289 = ({car: l448, cdr: (function (values,nargs,v1290){
                checkArgs(nargs, 1);
                return (function(v1291,v1292){
                    return values(l92.fvalue(pv, 1, v1291), l92.fvalue(pv, 1, v1290), l92.fvalue(pv, 1, v1292), l92.fvalue(pv, 3, l196, l92.fvalue(pv, 3, l197, l92.fvalue(pv, 3, l150, 4, v1291), v1292), v1292), l92.fvalue(pv, 2, l448, v1291));
                })(l15.fvalue(pv, 0),l15.fvalue(pv, 0));
            })});
            var v1293 = ({car: v1289, cdr: (function(){
                var symbol = l90;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })()});
            return ((l90).value = v1293);
        })();
        return l448;
    })();
    (function(){
        (l449).fvalue = (function(){
            var func = (function (values,nargs,v1294){
                checkArgs(nargs, 1);
                return (function(){
                    (l442.fvalue(pv, 1, v1294) !== l5.value ? l5.value : l78.fvalue(pv, 3, l412, v1294, l445));
                    return l151.fvalue(values, 2, 5, v1294);
                })();
            });
            func.fname = 'D-LAMBDA-LIST-ALLOW-OTHER-KEYS';
            return func;
        })();
        return l449;
    })();
    (function(){
        (function(){
            var v1296 = ({car: l449, cdr: (function (values,nargs,v1297){
                checkArgs(nargs, 1);
                return (function(v1298,v1299){
                    return values(l92.fvalue(pv, 1, v1298), l92.fvalue(pv, 1, v1297), l92.fvalue(pv, 1, v1299), l92.fvalue(pv, 3, l196, l92.fvalue(pv, 3, l197, l92.fvalue(pv, 3, l150, 5, v1298), v1299), v1299), l92.fvalue(pv, 2, l449, v1298));
                })(l15.fvalue(pv, 0),l15.fvalue(pv, 0));
            })});
            var v1300 = ({car: v1296, cdr: (function(){
                var symbol = l90;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })()});
            return ((l90).value = v1300);
        })();
        return l449;
    })();
    (function(){
        (l450).fvalue = (function(){
            var func = (function (values,nargs,v1301){
                checkArgs(nargs, 1);
                return (function(){
                    (l442.fvalue(pv, 1, v1301) !== l5.value ? l5.value : l78.fvalue(pv, 3, l412, v1301, l445));
                    return l151.fvalue(values, 2, 6, v1301);
                })();
            });
            func.fname = 'D-LAMBDA-LIST-KEYVARS';
            return func;
        })();
        return l450;
    })();
    (function(){
        (function(){
            var v1303 = ({car: l450, cdr: (function (values,nargs,v1304){
                checkArgs(nargs, 1);
                return (function(v1305,v1306){
                    return values(l92.fvalue(pv, 1, v1305), l92.fvalue(pv, 1, v1304), l92.fvalue(pv, 1, v1306), l92.fvalue(pv, 3, l196, l92.fvalue(pv, 3, l197, l92.fvalue(pv, 3, l150, 6, v1305), v1306), v1306), l92.fvalue(pv, 2, l450, v1305));
                })(l15.fvalue(pv, 0),l15.fvalue(pv, 0));
            })});
            var v1307 = ({car: v1303, cdr: (function(){
                var symbol = l90;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })()});
            return ((l90).value = v1307);
        })();
        return l450;
    })();
    (function(){
        (l451).fvalue = (function(){
            var func = (function (values,nargs,v1308){
                checkArgs(nargs, 1);
                return (function(){
                    (l442.fvalue(pv, 1, v1308) !== l5.value ? l5.value : l78.fvalue(pv, 3, l412, v1308, l445));
                    return l151.fvalue(values, 2, 7, v1308);
                })();
            });
            func.fname = 'D-LAMBDA-LIST-AUXVARS';
            return func;
        })();
        return l451;
    })();
    (function(){
        (function(){
            var v1310 = ({car: l451, cdr: (function (values,nargs,v1311){
                checkArgs(nargs, 1);
                return (function(v1312,v1313){
                    return values(l92.fvalue(pv, 1, v1312), l92.fvalue(pv, 1, v1311), l92.fvalue(pv, 1, v1313), l92.fvalue(pv, 3, l196, l92.fvalue(pv, 3, l197, l92.fvalue(pv, 3, l150, 7, v1312), v1313), v1313), l92.fvalue(pv, 2, l451, v1312));
                })(l15.fvalue(pv, 0),l15.fvalue(pv, 0));
            })});
            var v1314 = ({car: v1310, cdr: (function(){
                var symbol = l90;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })()});
            return ((l90).value = v1314);
        })();
        return l451;
    })();
    return l441;
})();
var l452 = (new Symbol(make_lisp_string("VAR-OR-PATTERN")));
var l453 = (new Symbol(make_lisp_string("PARSE-DESTRUCTURING-LAMBDA-LIST")));
var l454 = make_lisp_string("~X fell through etypeacase expression.");
(function(){
    (l452).fvalue = (function(){
        var func = (function (values,nargs,v1315){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v1317){
                    return (function(v1318){
                        return (((v1318 instanceof Symbol)?l4.value: l5.value) !== l5.value ? v1315 : (((function(){
                            var tmp = v1318;
                            return (typeof tmp == 'object' && 'car' in tmp);
                        })()?l4.value: l5.value) !== l5.value ? l453.fvalue(values, 1, v1315) : (function(v1319){
                            return (v1319 !== l5.value ? v1319 : l5.value);
                        })(l4.fvalue(pv, 1, l78.fvalue(pv, 2, l454, v1317)))));
                    })(v1317);
                })(v1315);
            })();
        });
        func.fname = 'VAR-OR-PATTERN';
        return func;
    })();
    return l452;
})();
var l455 = (new Symbol(make_lisp_string("PARSE-OPTVAR")));
var l456 = make_lisp_string("Bad optional parameter specification `~S'");
var l457 = make_lisp_string("`~S' is not a valid supplied optional parameter.");
(function(){
    (l455).fvalue = (function(){
        var func = (function (values,nargs,v1320){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v1322){
                    return (function(v1323){
                        return (((v1323 instanceof Symbol)?l4.value: l5.value) !== l5.value ? l404.fvalue(values, 2, l405.value, v1320) : (((function(){
                            var tmp = v1323;
                            return (typeof tmp == 'object' && 'car' in tmp);
                        })()?l4.value: l5.value) !== l5.value ? (function(v1324,v1325,v1326){
                            (l44.fvalue(pv, 1, l160.fvalue(pv, 1, v1320)) !== l5.value ? l5.value : l78.fvalue(pv, 2, l456, v1320));
                            (((v1326 instanceof Symbol)?l4.value: l5.value) !== l5.value ? l5.value : l78.fvalue(pv, 2, l457, v1326));
                            return l404.fvalue(values, 6, l405.value, l452.fvalue(pv, 1, v1324), l406.value, v1325, l407.value, v1326);
                        })(l133.fvalue(pv, 1, v1320),l134.fvalue(pv, 1, v1320),l136.fvalue(pv, 1, v1320)) : (function(v1327){
                            return (v1327 !== l5.value ? v1327 : l5.value);
                        })(l4.fvalue(pv, 1, l78.fvalue(pv, 2, l454, v1322)))));
                    })(v1322);
                })(v1320);
            })();
        });
        func.fname = 'PARSE-OPTVAR';
        return func;
    })();
    return l455;
})();
var l458 = (new Symbol(make_lisp_string("PARSE-KEYVAR")));
var l459 = make_lisp_string("KEYWORD");
var l460 = make_lisp_string("Bad keyword parameter specification `~S'");
var l461 = make_lisp_string("`~S' is not a valid supplied optional parameter.");
var l462 = make_lisp_string("KEYWORD");
var l463 = make_lisp_string("Bad keyword argument name description `~S'");
var l464 = make_lisp_string("~S is not a valid keyword-name.");
(function(){
    (l458).fvalue = (function(){
        var func = (function (values,nargs,v1328){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v1330){
                    return (function(v1331){
                        return (((v1331 instanceof Symbol)?l4.value: l5.value) !== l5.value ? l416.fvalue(values, 4, l405.value, v1328, l417.value, l313.fvalue(pv, 2, l125.fvalue(pv, 1, v1328), l459)) : (((function(){
                            var tmp = v1331;
                            return (typeof tmp == 'object' && 'car' in tmp);
                        })()?l4.value: l5.value) !== l5.value ? (function(v1332,v1333,v1334,v1335){
                            (l44.fvalue(pv, 1, l160.fvalue(pv, 1, v1328)) !== l5.value ? l5.value : l78.fvalue(pv, 2, l460, v1328));
                            (((v1335 instanceof Symbol)?l4.value: l5.value) !== l5.value ? l5.value : l78.fvalue(pv, 2, l461, v1335));
                            (function(v1336){
                                return (function(v1337){
                                    return (function(v1338){
                                        return (((v1338 instanceof Symbol)?l4.value: l5.value) !== l5.value ? (function(){
                                            (v1333 = l313.fvalue(pv, 2, l125.fvalue(pv, 1, v1336), l462));
                                            return (v1332 = v1336);
                                        })() : (((function(){
                                            var tmp = v1338;
                                            return (typeof tmp == 'object' && 'car' in tmp);
                                        })()?l4.value: l5.value) !== l5.value ? (function(){
                                            (l44.fvalue(pv, 1, l149.fvalue(pv, 1, v1336)) !== l5.value ? l5.value : l78.fvalue(pv, 2, l463, v1336));
                                            (v1333 = l133.fvalue(pv, 1, v1336));
                                            return (v1332 = l134.fvalue(pv, 1, v1336));
                                        })() : (function(v1339){
                                            return (v1339 !== l5.value ? v1339 : l5.value);
                                        })(l4.fvalue(pv, 1, l78.fvalue(pv, 2, l454, v1337)))));
                                    })(v1337);
                                })(v1336);
                            })(l133.fvalue(pv, 1, v1328));
                            (((v1333 instanceof Symbol)?l4.value: l5.value) !== l5.value ? l5.value : l78.fvalue(pv, 2, l464, v1333));
                            return l416.fvalue(values, 8, l405.value, l452.fvalue(pv, 1, v1332), l417.value, v1333, l406.value, v1334, l407.value, v1335);
                        })(l5.value,l5.value,l134.fvalue(pv, 1, v1328),l136.fvalue(pv, 1, v1328)) : (function(v1340){
                            return (v1340 !== l5.value ? v1340 : l5.value);
                        })(l4.fvalue(pv, 1, l78.fvalue(pv, 2, l454, v1330)))));
                    })(v1330);
                })(v1328);
            })();
        });
        func.fname = 'PARSE-KEYVAR';
        return func;
    })();
    return l458;
})();
var l465 = (new Symbol(make_lisp_string("PARSE-AUXVAR")));
var l466 = make_lisp_string("Bad aux variable specification `~S'");
(function(){
    (l465).fvalue = (function(){
        var func = (function (values,nargs,v1341){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v1343){
                    return (function(v1344){
                        return (((v1344 instanceof Symbol)?l4.value: l5.value) !== l5.value ? l426.fvalue(values, 2, l405.value, v1341) : (((function(){
                            var tmp = v1344;
                            return (typeof tmp == 'object' && 'car' in tmp);
                        })()?l4.value: l5.value) !== l5.value ? (function(v1345,v1346){
                            (l44.fvalue(pv, 1, l160.fvalue(pv, 1, v1341)) !== l5.value ? l5.value : l78.fvalue(pv, 2, l466, v1341));
                            return l426.fvalue(values, 4, l405.value, l452.fvalue(pv, 1, v1345), l406.value, v1346);
                        })(l133.fvalue(pv, 1, v1341),l134.fvalue(pv, 1, v1341)) : (function(v1347){
                            return (v1347 !== l5.value ? v1347 : l5.value);
                        })(l4.fvalue(pv, 1, l78.fvalue(pv, 2, l454, v1343)))));
                    })(v1343);
                })(v1341);
            })();
        });
        func.fname = 'PARSE-AUXVAR';
        return func;
    })();
    return l465;
})();
var l467 = make_lisp_string("Bad placed ~a in the lambda-list ~S.");
var l468 = (new Symbol(make_lisp_string("&WHOLE")));
var l469 = QIList(l402,l398,l5);
(function(){
    (l453).fvalue = (function(){
        var func = (function (values,nargs,v1348){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v1350,v1351){
                    return (function(v1360,v1361){
                        (v1360(pv, 1, l468) !== l5.value ? (function(v1364){
                            return (function(){
                                var v1365 = v1350;
                                return (function(){
                                    var func = (function (values,nargs,v1367){
                                        switch(nargs){
                                        case 0:
                                            v1367=l5.value;
                                        default: break;
                                        }
                                        var v1366= l5.value;
                                        for (var i = nargs-1; i>=1; i--)
                                            v1366 = {car: arguments[i+2], cdr: v1366};
                                        return (function(){
                                            (function(){
                                                var x = l150.fvalue(pv, 2, 1, v1365);
                                                if (typeof x != 'object')
                                                    throw 'The value ' + x + ' is not a type object.';
                                                return (x.car = v1367, x);
                                            })();
                                            return v1367;
                                        })();
                                    });
                                    var args = [pv, 0];
                                    return (function(){
                                        var values = mv;
                                        var vs;
                                        vs = l452.fvalue(values, 1, v1364);
                                        if (typeof vs === 'object' && 'multiple-value' in vs)
                                            args = args.concat(vs);
                                        else
                                            args.push(vs);
                                        args[1] = args.length-2;
                                        return func.apply(window, args);
                                    })();
                                })();
                            })();
                        })((function(){
                            var v1362 = v1348;
                            var v1363 = (function(){
                                var tmp = v1362;
                                return tmp === l5.value? l5.value: tmp.cdr;
                            })();
                            (v1348 = v1363);
                            return (function(){
                                var tmp = v1362;
                                return tmp === l5.value? l5.value: tmp.car;
                            })();
                        })()) : l5.value);
                        (function(){
                            return (function(){
                                while(v1361(pv, 0) !== l5.value){
                                    (function(v1371){
                                        return (function(){
                                            var v1372 = l452.fvalue(pv, 1, v1371);
                                            var v1373 = v1350;
                                            var v1374 = ({car: v1372, cdr: l446.fvalue(pv, 1, v1373)});
                                            return (function(){
                                                (function(){
                                                    var x = l150.fvalue(pv, 2, 2, v1373);
                                                    if (typeof x != 'object')
                                                        throw 'The value ' + x + ' is not a type object.';
                                                    return (x.car = v1374, x);
                                                })();
                                                return v1374;
                                            })();
                                        })();
                                    })((function(){
                                        var v1369 = v1348;
                                        var v1370 = (function(){
                                            var tmp = v1369;
                                            return tmp === l5.value? l5.value: tmp.cdr;
                                        })();
                                        (v1348 = v1370);
                                        return (function(){
                                            var tmp = v1369;
                                            return tmp === l5.value? l5.value: tmp.car;
                                        })();
                                    })());
                                }return l5.value;
                            })();
                        })();
                        (function(){
                            var v1375 = v1350;
                            return (function(){
                                var func = (function (values,nargs,v1377){
                                    switch(nargs){
                                    case 0:
                                        v1377=l5.value;
                                    default: break;
                                    }
                                    var v1376= l5.value;
                                    for (var i = nargs-1; i>=1; i--)
                                        v1376 = {car: arguments[i+2], cdr: v1376};
                                    return (function(){
                                        (function(){
                                            var x = l150.fvalue(pv, 2, 2, v1375);
                                            if (typeof x != 'object')
                                                throw 'The value ' + x + ' is not a type object.';
                                            return (x.car = v1377, x);
                                        })();
                                        return v1377;
                                    })();
                                });
                                var args = [pv, 0];
                                return (function(){
                                    var values = mv;
                                    var vs;
                                    vs = l49.fvalue(values, 1, l446.fvalue(pv, 1, v1350));
                                    if (typeof vs === 'object' && 'multiple-value' in vs)
                                        args = args.concat(vs);
                                    else
                                        args.push(vs);
                                    args[1] = args.length-2;
                                    return func.apply(window, args);
                                })();
                            })();
                        })();
                        (v1360(pv, 1, l397) !== l5.value ? (function(){
                            (function(){
                                return (function(){
                                    while(v1361(pv, 0) !== l5.value){
                                        (function(){
                                            var v1379 = l455.fvalue(pv, 1, (function(){
                                                var v1380 = v1348;
                                                var v1381 = (function(){
                                                    var tmp = v1380;
                                                    return tmp === l5.value? l5.value: tmp.cdr;
                                                })();
                                                (v1348 = v1381);
                                                return (function(){
                                                    var tmp = v1380;
                                                    return tmp === l5.value? l5.value: tmp.car;
                                                })();
                                            })());
                                            var v1382 = v1350;
                                            var v1383 = ({car: v1379, cdr: l447.fvalue(pv, 1, v1382)});
                                            return (function(){
                                                (function(){
                                                    var x = l150.fvalue(pv, 2, 3, v1382);
                                                    if (typeof x != 'object')
                                                        throw 'The value ' + x + ' is not a type object.';
                                                    return (x.car = v1383, x);
                                                })();
                                                return v1383;
                                            })();
                                        })();
                                    }return l5.value;
                                })();
                            })();
                            return (function(){
                                var v1384 = v1350;
                                return (function(){
                                    var func = (function (values,nargs,v1386){
                                        switch(nargs){
                                        case 0:
                                            v1386=l5.value;
                                        default: break;
                                        }
                                        var v1385= l5.value;
                                        for (var i = nargs-1; i>=1; i--)
                                            v1385 = {car: arguments[i+2], cdr: v1385};
                                        return (function(){
                                            (function(){
                                                var x = l150.fvalue(pv, 2, 3, v1384);
                                                if (typeof x != 'object')
                                                    throw 'The value ' + x + ' is not a type object.';
                                                return (x.car = v1386, x);
                                            })();
                                            return v1386;
                                        })();
                                    });
                                    var args = [pv, 0];
                                    return (function(){
                                        var values = mv;
                                        var vs;
                                        vs = l49.fvalue(values, 1, l447.fvalue(pv, 1, v1350));
                                        if (typeof vs === 'object' && 'multiple-value' in vs)
                                            args = args.concat(vs);
                                        else
                                            args.push(vs);
                                        args[1] = args.length-2;
                                        return func.apply(window, args);
                                    })();
                                })();
                            })();
                        })() : l5.value);
                        ((v1348 !== l5.value ? l69.fvalue(pv, 1, v1348) : l5.value) !== l5.value ? (function(){
                            (function(){
                                var v1387 = v1348;
                                var v1388 = v1350;
                                var v1389 = ({car: v1387, cdr: l448.fvalue(pv, 1, v1388)});
                                return (function(){
                                    (function(){
                                        var x = l150.fvalue(pv, 2, 4, v1388);
                                        if (typeof x != 'object')
                                            throw 'The value ' + x + ' is not a type object.';
                                        return (x.car = v1389, x);
                                    })();
                                    return v1389;
                                })();
                            })();
                            return (v1348 = l5.value);
                        })() : l5.value);
                        (l210.fvalue(pv, 2, (function(){
                            var tmp = v1348;
                            return tmp === l5.value? l5.value: tmp.car;
                        })(), l469) !== l5.value ? (function(){
                            (function(){
                                var v1390 = v1348;
                                var v1391 = (function(){
                                    var tmp = v1390;
                                    return tmp === l5.value? l5.value: tmp.cdr;
                                })();
                                (v1348 = v1391);
                                return (function(){
                                    var tmp = v1390;
                                    return tmp === l5.value? l5.value: tmp.car;
                                })();
                            })();
                            return (function(){
                                var v1392 = v1350;
                                return (function(){
                                    var func = (function (values,nargs,v1394){
                                        switch(nargs){
                                        case 0:
                                            v1394=l5.value;
                                        default: break;
                                        }
                                        var v1393= l5.value;
                                        for (var i = nargs-1; i>=1; i--)
                                            v1393 = {car: arguments[i+2], cdr: v1393};
                                        return (function(){
                                            (function(){
                                                var x = l150.fvalue(pv, 2, 4, v1392);
                                                if (typeof x != 'object')
                                                    throw 'The value ' + x + ' is not a type object.';
                                                return (x.car = v1394, x);
                                            })();
                                            return v1394;
                                        })();
                                    });
                                    var args = [pv, 0];
                                    return (function(){
                                        var values = mv;
                                        var vs;
                                        vs = l452.fvalue(values, 1, (function(){
                                            var v1395 = v1348;
                                            var v1396 = (function(){
                                                var tmp = v1395;
                                                return tmp === l5.value? l5.value: tmp.cdr;
                                            })();
                                            (v1348 = v1396);
                                            return (function(){
                                                var tmp = v1395;
                                                return tmp === l5.value? l5.value: tmp.car;
                                            })();
                                        })());
                                        if (typeof vs === 'object' && 'multiple-value' in vs)
                                            args = args.concat(vs);
                                        else
                                            args.push(vs);
                                        args[1] = args.length-2;
                                        return func.apply(window, args);
                                    })();
                                })();
                            })();
                        })() : l5.value);
                        (v1360(pv, 1, l399) !== l5.value ? (function(){
                            (function(){
                                return (function(){
                                    while(v1361(pv, 0) !== l5.value){
                                        (function(){
                                            var v1398 = l458.fvalue(pv, 1, (function(){
                                                var v1399 = v1348;
                                                var v1400 = (function(){
                                                    var tmp = v1399;
                                                    return tmp === l5.value? l5.value: tmp.cdr;
                                                })();
                                                (v1348 = v1400);
                                                return (function(){
                                                    var tmp = v1399;
                                                    return tmp === l5.value? l5.value: tmp.car;
                                                })();
                                            })());
                                            var v1401 = v1350;
                                            var v1402 = ({car: v1398, cdr: l450.fvalue(pv, 1, v1401)});
                                            return (function(){
                                                (function(){
                                                    var x = l150.fvalue(pv, 2, 6, v1401);
                                                    if (typeof x != 'object')
                                                        throw 'The value ' + x + ' is not a type object.';
                                                    return (x.car = v1402, x);
                                                })();
                                                return v1402;
                                            })();
                                        })();
                                    }return l5.value;
                                })();
                            })();
                            return (function(){
                                var v1403 = v1350;
                                return (function(){
                                    var func = (function (values,nargs,v1405){
                                        switch(nargs){
                                        case 0:
                                            v1405=l5.value;
                                        default: break;
                                        }
                                        var v1404= l5.value;
                                        for (var i = nargs-1; i>=1; i--)
                                            v1404 = {car: arguments[i+2], cdr: v1404};
                                        return (function(){
                                            (function(){
                                                var x = l150.fvalue(pv, 2, 6, v1403);
                                                if (typeof x != 'object')
                                                    throw 'The value ' + x + ' is not a type object.';
                                                return (x.car = v1405, x);
                                            })();
                                            return v1405;
                                        })();
                                    });
                                    var args = [pv, 0];
                                    return (function(){
                                        var values = mv;
                                        var vs;
                                        vs = l49.fvalue(values, 1, l450.fvalue(pv, 1, v1350));
                                        if (typeof vs === 'object' && 'multiple-value' in vs)
                                            args = args.concat(vs);
                                        else
                                            args.push(vs);
                                        args[1] = args.length-2;
                                        return func.apply(window, args);
                                    })();
                                })();
                            })();
                        })() : l5.value);
                        (v1360(pv, 1, l401) !== l5.value ? (function(){
                            var v1406 = v1350;
                            return (function(){
                                var func = (function (values,nargs,v1408){
                                    switch(nargs){
                                    case 0:
                                        v1408=l5.value;
                                    default: break;
                                    }
                                    var v1407= l5.value;
                                    for (var i = nargs-1; i>=1; i--)
                                        v1407 = {car: arguments[i+2], cdr: v1407};
                                    return (function(){
                                        (function(){
                                            var x = l150.fvalue(pv, 2, 5, v1406);
                                            if (typeof x != 'object')
                                                throw 'The value ' + x + ' is not a type object.';
                                            return (x.car = v1408, x);
                                        })();
                                        return v1408;
                                    })();
                                });
                                var args = [pv, 0];
                                return (function(){
                                    var values = mv;
                                    var vs;
                                    vs = l4.value;
                                    if (typeof vs === 'object' && 'multiple-value' in vs)
                                        args = args.concat(vs);
                                    else
                                        args.push(vs);
                                    args[1] = args.length-2;
                                    return func.apply(window, args);
                                })();
                            })();
                        })() : l5.value);
                        (v1360(pv, 1, l400) !== l5.value ? (function(){
                            (function(){
                                return (function(){
                                    while(v1361(pv, 0) !== l5.value){
                                        (function(){
                                            var v1410 = l465.fvalue(pv, 1, (function(){
                                                var v1411 = v1348;
                                                var v1412 = (function(){
                                                    var tmp = v1411;
                                                    return tmp === l5.value? l5.value: tmp.cdr;
                                                })();
                                                (v1348 = v1412);
                                                return (function(){
                                                    var tmp = v1411;
                                                    return tmp === l5.value? l5.value: tmp.car;
                                                })();
                                            })());
                                            var v1413 = v1350;
                                            var v1414 = ({car: v1410, cdr: l451.fvalue(pv, 1, v1413)});
                                            return (function(){
                                                (function(){
                                                    var x = l150.fvalue(pv, 2, 7, v1413);
                                                    if (typeof x != 'object')
                                                        throw 'The value ' + x + ' is not a type object.';
                                                    return (x.car = v1414, x);
                                                })();
                                                return v1414;
                                            })();
                                        })();
                                    }return l5.value;
                                })();
                            })();
                            return (function(){
                                var v1415 = v1350;
                                return (function(){
                                    var func = (function (values,nargs,v1417){
                                        switch(nargs){
                                        case 0:
                                            v1417=l5.value;
                                        default: break;
                                        }
                                        var v1416= l5.value;
                                        for (var i = nargs-1; i>=1; i--)
                                            v1416 = {car: arguments[i+2], cdr: v1416};
                                        return (function(){
                                            (function(){
                                                var x = l150.fvalue(pv, 2, 7, v1415);
                                                if (typeof x != 'object')
                                                    throw 'The value ' + x + ' is not a type object.';
                                                return (x.car = v1417, x);
                                            })();
                                            return v1417;
                                        })();
                                    });
                                    var args = [pv, 0];
                                    return (function(){
                                        var values = mv;
                                        var vs;
                                        vs = l49.fvalue(values, 1, l451.fvalue(pv, 1, v1350));
                                        if (typeof vs === 'object' && 'multiple-value' in vs)
                                            args = args.concat(vs);
                                        else
                                            args.push(vs);
                                        args[1] = args.length-2;
                                        return func.apply(window, args);
                                    })();
                                })();
                            })();
                        })() : l5.value);
                        return v1350;
                    })((function (values,nargs,v1352){
                        checkArgs(nargs, 1);
                        return (function(){
                            return (function(v1354){
                                (l210.fvalue(pv, 2, v1354, v1351) !== l5.value ? l78.fvalue(pv, 3, l467, v1354, v1348) : l5.value);
                                return (((v1352 === v1354)?l4.value: l5.value) !== l5.value ? (function(){
                                    (function(){
                                        var v1355 = v1352;
                                        var v1356 = ({car: v1355, cdr: v1351});
                                        return (v1351 = v1356);
                                    })();
                                    (function(){
                                        var v1357 = v1348;
                                        var v1358 = (function(){
                                            var tmp = v1357;
                                            return tmp === l5.value? l5.value: tmp.cdr;
                                        })();
                                        (v1348 = v1358);
                                        return (function(){
                                            var tmp = v1357;
                                            return tmp === l5.value? l5.value: tmp.car;
                                        })();
                                    })();
                                    return l4.value;
                                })() : l5.value);
                            })(l133.fvalue(pv, 1, v1348));
                        })();
                    }),(function (values,nargs){
                        checkArgsAtMost(nargs, 0);
                        return (function(){
                            return (((function(){
                                var tmp = v1348;
                                return (typeof tmp == 'object' && 'car' in tmp);
                            })()?l4.value: l5.value) !== l5.value ? l28.fvalue(values, 1, l210.fvalue(pv, 2, l133.fvalue(pv, 1, v1348), (function(){
                                var symbol = l396;
                                var value = symbol.value;
                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                return value;
                            })())) : l5.value);
                        })();
                    }));
                })(l433.fvalue(pv, 0),l5.value);
            })();
        });
        func.fname = 'PARSE-DESTRUCTURING-LAMBDA-LIST';
        return func;
    })();
    return l453;
})();
var l470 = (new Symbol(make_lisp_string("DO-KEYWORDS")));
l470;
var l471 = (new Symbol(make_lisp_string("KEYWORD-SUPPLIED-P")));
var l472 = (new Symbol(make_lisp_string("IGNORE")));
var l473 = (new Symbol(make_lisp_string("DECLARE")));
(function(){
    (l471).fvalue = (function(){
        var func = (function (values,nargs,v1418,v1419){
            checkArgs(nargs, 2);
            return (function(){
                return (function(v1421){
                    return (function(){
                        try {
                        var v1422 = [];
                            return (function(){
                                while(v1421 !== l5.value){
                                    (function(v1423,v1424){
                                        l473.fvalue(pv, 1, l472.fvalue(pv, 1, v1424));
                                        (((v1423 === v1418)?l4.value: l5.value) !== l5.value ? (function(){
                                            var values = mv;
                                            throw ({type: 'block', id: v1422, values: l4.value, message: 'Return from unknown block NIL.'})
                                        })() : l5.value);
                                        return (v1419 = l149.fvalue(pv, 1, v1419));
                                    })((function(){
                                        var tmp = v1421;
                                        return tmp === l5.value? l5.value: tmp.car;
                                    })(),l135.fvalue(pv, 1, v1421));
                                    (v1421 = l149.fvalue(pv, 1, v1421));
                                }return l5.value;
                            })();
                        }
                        catch (cf){
                            if (cf.type == 'block' && cf.id == v1422)
                                return values.apply(this, forcemv(cf.values));
                            else
                                throw cf;
                        }
                    })();
                })(v1419);
            })();
        });
        func.fname = 'KEYWORD-SUPPLIED-P';
        return func;
    })();
    return l471;
})();
var l474 = (new Symbol(make_lisp_string("KEYWORD-LOOKUP")));
(function(){
    (l474).fvalue = (function(){
        var func = (function (values,nargs,v1425,v1426){
            checkArgs(nargs, 2);
            return (function(){
                return (function(v1428){
                    return (function(){
                        try {
                        var v1429 = [];
                            return (function(){
                                while(v1428 !== l5.value){
                                    (function(v1430,v1431){
                                        (((v1430 === v1425)?l4.value: l5.value) !== l5.value ? (function(){
                                            var values = mv;
                                            throw ({type: 'block', id: v1429, values: v1431, message: 'Return from unknown block NIL.'})
                                        })() : l5.value);
                                        return (v1426 = l149.fvalue(pv, 1, v1426));
                                    })((function(){
                                        var tmp = v1428;
                                        return tmp === l5.value? l5.value: tmp.car;
                                    })(),l135.fvalue(pv, 1, v1428));
                                    (v1428 = l149.fvalue(pv, 1, v1428));
                                }return l5.value;
                            })();
                        }
                        catch (cf){
                            if (cf.type == 'block' && cf.id == v1429)
                                return values.apply(this, forcemv(cf.values));
                            else
                                throw cf;
                        }
                    })();
                })(v1426);
            })();
        });
        func.fname = 'KEYWORD-LOOKUP';
        return func;
    })();
    return l474;
})();
var l475 = (new Symbol(make_lisp_string("VALIDATE-REQVARS")));
var l476 = make_lisp_string("`~S' is not a list.");
var l477 = make_lisp_string("Invalid number of elements in `~S'");
(function(){
    (l475).fvalue = (function(){
        var func = (function (values,nargs,v1432,v1433){
            checkArgs(nargs, 2);
            return (function(){
                (l56.fvalue(pv, 1, v1432) !== l5.value ? l5.value : l78.fvalue(pv, 2, l476, v1432));
                ((function(){
                    var x1 = v1433;
                    if (typeof x1 !== 'number') throw 'Not a number!';
                    var x2 = l54.fvalue(pv, 1, v1432);
                    if (typeof x2 !== 'number') throw 'Not a number!';
                    return (x1<=x2?l4.value: l5.value);
                })() !== l5.value ? l5.value : l78.fvalue(pv, 2, l477, v1432));
                return v1432;
            })();
        });
        func.fname = 'VALIDATE-REQVARS';
        return func;
    })();
    return l475;
})();
var l478 = (new Symbol(make_lisp_string("VALIDATE-MAX-ARGS")));
var l479 = make_lisp_string("Too many elements `~S' in the lambda-list");
(function(){
    (l478).fvalue = (function(){
        var func = (function (values,nargs,v1435){
            checkArgs(nargs, 1);
            return (function(){
                (l44.fvalue(pv, 1, v1435) !== l5.value ? l5.value : l78.fvalue(pv, 2, l479, v1435));
                return v1435;
            })();
        });
        func.fname = 'VALIDATE-MAX-ARGS';
        return func;
    })();
    return l478;
})();
var l480 = (new Symbol(make_lisp_string("VALIDATE-KEYVARS")));
var l481 = make_lisp_string("Unknown keyword argument `~S'.");
var l482 = make_lisp_string("Keyword argument `~S' is not a symbol.");
var l483 = make_lisp_string("Odd number of keyword arguments.");
(function(){
    (l480).fvalue = (function(){
        var func = (function (values,nargs,v1437,v1438,v1439){
            checkArgsAtLeast(nargs, 2);
            checkArgsAtMost(nargs, 3);
            switch(nargs){
            case 2:
                v1439=l5.value;
            default: break;
            }
            return (function(){
                return (function(v1442){
                    (v1442 !== l5.value ? l5.value : (function(v1443){
                        return (function(){
                            return (function(){
                                while(v1443 !== l5.value){
                                    (function(v1445,v1446){
                                        l473.fvalue(pv, 1, l472.fvalue(pv, 1, v1446));
                                        return (l210.fvalue(pv, 2, v1445, v1438) !== l5.value ? l5.value : l78.fvalue(pv, 2, l481, v1445));
                                    })((function(){
                                        var tmp = v1443;
                                        return tmp === l5.value? l5.value: tmp.car;
                                    })(),l135.fvalue(pv, 1, v1443));
                                    (v1443 = l149.fvalue(pv, 1, v1443));
                                }return l5.value;
                            })();
                        })();
                    })(v1437));
                    return (function(){
                        return (function(){
                            var v1448 = v1437;
                            var v1449 = (function(){
                                var tmp = v1448;
                                return tmp === l5.value? l5.value: tmp.car;
                            })();
                            return (function(){
                                try {
                                var v1450 = [];
                                    return (function(){
                                        while(l4.value !== l5.value){
                                            (l44.fvalue(pv, 1, v1448) !== l5.value ? (function(){
                                                var values = mv;
                                                throw ({type: 'block', id: v1450, values: v1437, message: 'Return from unknown block NIL.'})
                                            })() : l5.value);
                                            (function(){
                                                (((v1449 instanceof Symbol)?l4.value: l5.value) !== l5.value ? l5.value : l78.fvalue(pv, 2, l482, v1449));
                                                (((function(){
                                                    var tmp = (function(){
                                                        var tmp = v1448;
                                                        return tmp === l5.value? l5.value: tmp.cdr;
                                                    })();
                                                    return (typeof tmp == 'object' && 'car' in tmp);
                                                })()?l4.value: l5.value) !== l5.value ? l5.value : l78.fvalue(pv, 1, l483));
                                                return l5.value;
                                            })();
                                            (v1448 = l149.fvalue(pv, 1, v1448), v1449 = (function(){
                                                var tmp = v1448;
                                                return tmp === l5.value? l5.value: tmp.car;
                                            })());
                                        }return l5.value;
                                    })();
                                }
                                catch (cf){
                                    if (cf.type == 'block' && cf.id == v1450)
                                        return values.apply(this, forcemv(cf.values));
                                    else
                                        throw cf;
                                }
                            })();
                        })();
                    })();
                })((function(v1441){
                    return (v1441 !== l5.value ? v1441 : l474.fvalue(pv, 2, l438.value, v1437));
                })(v1439));
            })();
        });
        func.fname = 'VALIDATE-KEYVARS';
        return func;
    })();
    return l480;
})();
var l484 = (new Symbol(make_lisp_string("!EXPAND-DESTRUCTURING-BIND")));
var l485 = (new Symbol(make_lisp_string("IF")));
var l486 = (new Symbol(make_lisp_string("LET*")));
(function(){
    (l484).fvalue = (function(){
        var func = (function (values,nargs,v1452,v1453){
            checkArgsAtLeast(nargs, 2);
            var v1451= l5.value;
            for (var i = nargs-1; i>=2; i--)
                v1451 = {car: arguments[i+2], cdr: v1451};
            return (function(){
                return (function(){
                    var func = (function (values,nargs,v1456){
                        switch(nargs){
                        case 0:
                            v1456=l5.value;
                        default: break;
                        }
                        var v1455= l5.value;
                        for (var i = nargs-1; i>=1; i--)
                            v1455 = {car: arguments[i+2], cdr: v1455};
                        return (function(v1457){
                            return (function(){
                                var v1458 = (function (values,nargs,v1461,v1462,v1463){
                                    checkArgsAtLeast(nargs, 2);
                                    checkArgsAtMost(nargs, 3);
                                    switch(nargs){
                                    case 2:
                                        v1463=l5.value;
                                    default: break;
                                    }
                                    return (function(){
                                        return (v1463 !== l5.value ? (l25.fvalue(pv, 1, v1462) !== l5.value ? v1461 : l92.fvalue(pv, 2, l132, v1458(pv, 3, v1461, l24.fvalue(pv, 1, v1462), l4.value))) : l92.fvalue(pv, 2, l131, v1458(pv, 3, v1461, v1462, l4.value)));
                                    })();
                                });
                                var v1459 = (function (values,nargs,v1465,v1466){
                                    checkArgs(nargs, 2);
                                    return (function(){
                                        return (function(v1468){
                                            return (v1468 !== l5.value ? v1468 : (((v1465 instanceof Symbol)?l4.value: l5.value) !== l5.value ? (function(){
                                                (function(){
                                                    var v1469 = l92.fvalue(pv, 2, v1465, v1466);
                                                    var v1470 = ({car: v1469, cdr: v1457});
                                                    return (v1457 = v1470);
                                                })();
                                                return v1465;
                                            })() : (l442.fvalue(pv, 1, v1465) !== l5.value ? v1460(values, 2, v1465, v1466) : l5.value)));
                                        })(l44.fvalue(pv, 1, v1465));
                                    })();
                                });
                                var v1460 = (function (values,nargs,v1471,v1472){
                                    checkArgs(nargs, 2);
                                    return (function(){
                                        return (function(v1475,v1476,v1477){
                                            v1459(pv, 2, v1477, l92.fvalue(pv, 3, l475, v1472, v1475));
                                            (function(v1478){
                                                (function(){
                                                    return (function(v1480,v1481){
                                                        (function(){
                                                            while(v1480 !== l5.value){
                                                                (v1481 = (function(){
                                                                    var tmp = v1480;
                                                                    return tmp === l5.value? l5.value: tmp.car;
                                                                })());
                                                                (function(){
                                                                    v1459(pv, 2, v1481, v1458(pv, 2, v1477, v1478));
                                                                    (function(){
                                                                        var v1482 = 1;
                                                                        var v1483 = (function(){
                                                                            var x1 = v1478;
                                                                            if (typeof x1 !== 'number') throw 'Not a number!';
                                                                            var x2 = v1482;
                                                                            if (typeof x2 !== 'number') throw 'Not a number!';
                                                                            return x1+x2;
                                                                        })();
                                                                        return (v1478 = v1483);
                                                                    })();
                                                                    return l5.value;
                                                                })();
                                                                (v1480 = (function(){
                                                                    var tmp = v1480;
                                                                    return tmp === l5.value? l5.value: tmp.cdr;
                                                                })());
                                                            }return l5.value;
                                                        })();
                                                        return l5.value;
                                                    })(l446.fvalue(pv, 1, v1471),l5.value);
                                                })();
                                                (function(){
                                                    return (function(v1485,v1486){
                                                        (function(){
                                                            while(v1485 !== l5.value){
                                                                (v1486 = (function(){
                                                                    var tmp = v1485;
                                                                    return tmp === l5.value? l5.value: tmp.car;
                                                                })());
                                                                (function(){
                                                                    (l415.fvalue(pv, 1, v1486) !== l5.value ? v1459(pv, 2, l415.fvalue(pv, 1, v1486), l92.fvalue(pv, 2, l28, l92.fvalue(pv, 2, l44, v1458(pv, 3, v1477, v1478, l4.value)))) : l5.value);
                                                                    v1459(pv, 2, l411.fvalue(pv, 1, v1486), l92.fvalue(pv, 4, l485, l92.fvalue(pv, 2, l44, v1458(pv, 3, v1477, v1478, l4.value)), l414.fvalue(pv, 1, v1486), v1458(pv, 2, v1477, v1478)));
                                                                    (function(){
                                                                        var v1487 = 1;
                                                                        var v1488 = (function(){
                                                                            var x1 = v1478;
                                                                            if (typeof x1 !== 'number') throw 'Not a number!';
                                                                            var x2 = v1487;
                                                                            if (typeof x2 !== 'number') throw 'Not a number!';
                                                                            return x1+x2;
                                                                        })();
                                                                        return (v1478 = v1488);
                                                                    })();
                                                                    return l5.value;
                                                                })();
                                                                (v1485 = (function(){
                                                                    var tmp = v1485;
                                                                    return tmp === l5.value? l5.value: tmp.cdr;
                                                                })());
                                                            }return l5.value;
                                                        })();
                                                        return l5.value;
                                                    })(l447.fvalue(pv, 1, v1471),l5.value);
                                                })();
                                                (function(){
                                                    var v1489 = v1458(pv, 3, v1477, (function(){
                                                        var x1 = v1475;
                                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                                        var x2 = v1476;
                                                        if (typeof x2 !== 'number') throw 'Not a number!';
                                                        return x1+x2;
                                                    })(), l4.value);
                                                    var v1490 = l448.fvalue(pv, 1, v1471);
                                                    var v1491 = (function(v1492){
                                                        return (v1492 !== l5.value ? v1492 : l15.fvalue(pv, 0));
                                                    })(v1490);
                                                    var v1493 = l120.fvalue(pv, 2, (function(){
                                                        var symbol = l423;
                                                        var func = symbol.fvalue;
                                                        if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                                                        return func;
                                                    })(), l450.fvalue(pv, 1, v1471));
                                                    var v1494 = (v1493 !== l5.value ? v1459(pv, 2, v1491, l92.fvalue(pv, 4, l480, v1489, l92.fvalue(pv, 2, l389, v1493), l449.fvalue(pv, 1, v1471))) : (v1490 !== l5.value ? v1459(pv, 2, v1491, v1489) : v1459(pv, 2, v1491, l92.fvalue(pv, 2, l478, v1489))));
                                                    return (l450.fvalue(pv, 1, v1471) !== l5.value ? (function(){
                                                        return (function(v1496,v1497){
                                                            (function(){
                                                                while(v1496 !== l5.value){
                                                                    (v1497 = (function(){
                                                                        var tmp = v1496;
                                                                        return tmp === l5.value? l5.value: tmp.car;
                                                                    })());
                                                                    (function(){
                                                                        (function(v1499,v1500,v1501){
                                                                            (v1501 !== l5.value ? v1459(pv, 2, v1501, l92.fvalue(pv, 3, l471, v1500, v1494)) : l5.value);
                                                                            return v1459(pv, 2, v1499, l92.fvalue(pv, 4, l485, v1501, l92.fvalue(pv, 3, l474, v1500, v1494), l424.fvalue(pv, 1, v1497)));
                                                                        })(l421.fvalue(pv, 1, v1497),l423.fvalue(pv, 1, v1497),(function(v1498){
                                                                            return (v1498 !== l5.value ? v1498 : l15.fvalue(pv, 0));
                                                                        })(l425.fvalue(pv, 1, v1497)));
                                                                        return l5.value;
                                                                    })();
                                                                    (v1496 = (function(){
                                                                        var tmp = v1496;
                                                                        return tmp === l5.value? l5.value: tmp.cdr;
                                                                    })());
                                                                }return l5.value;
                                                            })();
                                                            return l5.value;
                                                        })(l450.fvalue(pv, 1, v1471),l5.value);
                                                    })() : l5.value);
                                                })();
                                                return (function(){
                                                    return (function(v1503,v1504){
                                                        (function(){
                                                            while(v1503 !== l5.value){
                                                                (v1504 = (function(){
                                                                    var tmp = v1503;
                                                                    return tmp === l5.value? l5.value: tmp.car;
                                                                })());
                                                                (function(){
                                                                    v1459(pv, 2, l430.fvalue(pv, 1, v1504), l432.fvalue(pv, 1, v1504));
                                                                    return l5.value;
                                                                })();
                                                                (v1503 = (function(){
                                                                    var tmp = v1503;
                                                                    return tmp === l5.value? l5.value: tmp.cdr;
                                                                })());
                                                            }return l5.value;
                                                        })();
                                                        return l5.value;
                                                    })(l451.fvalue(pv, 1, v1471),l5.value);
                                                })();
                                            })(0);
                                            return v1477;
                                        })(l54.fvalue(pv, 1, l446.fvalue(pv, 1, v1471)),l54.fvalue(pv, 1, l447.fvalue(pv, 1, v1471)),(function(v1474){
                                            return (v1474 !== l5.value ? v1474 : l15.fvalue(pv, 0));
                                        })(l444.fvalue(pv, 1, v1471)));
                                    })();
                                });
                                v1460(pv, 2, v1456, v1453);
                                return l148.fvalue(pv, 3, l486, l49.fvalue(pv, 1, v1457), v1451);
                            })();
                        })(l5);
                    });
                    var args = [values, 0];
                    return (function(){
                        var values = mv;
                        var vs;
                        vs = l453.fvalue(values, 1, v1452);
                        if (typeof vs === 'object' && 'multiple-value' in vs)
                            args = args.concat(vs);
                        else
                            args.push(vs);
                        args[1] = args.length-2;
                        return func.apply(window, args);
                    })();
                })();
            })();
        });
        func.fname = '!EXPAND-DESTRUCTURING-BIND';
        return func;
    })();
    return l484;
})();
var l487 = (new Symbol(make_lisp_string("!DESTRUCTURING-BIND")));
l487;
var l488 = (new Symbol(make_lisp_string("DESTRUCTURING-BIND")));
l488;
var l489 = (new Symbol(make_lisp_string("CODE")));
var l490 = make_lisp_string("Unknown argument `~S'.");
(function(){
    (l489).fvalue = (function(){
        var func = (function (values,nargs){
            var v1505= l5.value;
            for (var i = nargs-1; i>=0; i--)
                v1505 = {car: arguments[i+2], cdr: v1505};
            return (function(){
                return l119.fvalue(values, 2, (function (values,nargs,v1507){
                    checkArgs(nargs, 1);
                    return (l44.fvalue(pv, 1, v1507) !== l5.value ? l108 : (l65.fvalue(pv, 1, v1507) !== l5.value ? l17.fvalue(values, 1, v1507) : (l66.fvalue(pv, 1, v1507) !== l5.value ? (function(){
                        var x = v1507;
                        if (typeof x != 'number')
                            throw 'The value ' + x + ' is not a type number.';
                        return make_lisp_string(x.toString());
                    })() : (((function(){
                        var x = v1507;
                        return typeof(x) == 'object' && 'length' in x && x.type == 'character';
                    })()?l4.value: l5.value) !== l5.value ? v1507 : l78.fvalue(values, 2, l490, v1507)))));
                }), v1505);
            })();
        });
        func.fname = 'CODE';
        return func;
    })();
    return l489;
})();
var l491 = (new Symbol(make_lisp_string("JS!BOOL")));
var l492 = make_lisp_string("(");
var l493 = make_lisp_string("?");
var l494 = (new Symbol(make_lisp_string("LS-COMPILE")));
var l495 = make_lisp_string(": ");
var l496 = make_lisp_string(")");
(function(){
    (l491).fvalue = (function(){
        var func = (function (values,nargs,v1508){
            checkArgs(nargs, 1);
            return (function(){
                return l489.fvalue(values, 7, l492, v1508, l493, l494.fvalue(pv, 1, l4.value), l495, l494.fvalue(pv, 1, l5.value), l496);
            })();
        });
        func.fname = 'JS!BOOL';
        return func;
    })();
    return l491;
})();
var l497 = (new Symbol(make_lisp_string("JS!SELFCALL")));
l497;
var l498 = (new Symbol(make_lisp_string("INDENT")));
var l499 = make_lisp_string("    ");
var l500 = make_lisp_string("    ");
(function(){
    (l498).fvalue = (function(){
        var func = (function (values,nargs){
            var v1510= l5.value;
            for (var i = nargs-1; i>=0; i--)
                v1510 = {car: arguments[i+2], cdr: v1510};
            return (function(){
                return (function(v1512){
                    return (function(v1513,v1514,v1515){
                        (l67.fvalue(pv, 1, l54.fvalue(pv, 1, v1512)) !== l5.value ? (v1513 = l107.fvalue(pv, 2, v1513, l499)) : l5.value);
                        (function(){
                            return (function(){
                                while((function(){
                                    var x1 = v1514;
                                    if (typeof x1 !== 'number') throw 'Not a number!';
                                    var x2 = v1515;
                                    if (typeof x2 !== 'number') throw 'Not a number!';
                                    return (x1<x2?l4.value: l5.value);
                                })() !== l5.value){
                                    (function(v1517){
                                        return (v1513 = l107.fvalue(pv, 2, v1513, v1517));
                                    })(((l64.fvalue(pv, 2, v1512[v1514], "\n") !== l5.value ? ((function(){
                                        var x1 = v1514;
                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                        var x2 = l24.fvalue(pv, 1, v1515);
                                        if (typeof x2 !== 'number') throw 'Not a number!';
                                        return (x1<x2?l4.value: l5.value);
                                    })() !== l5.value ? l28.fvalue(pv, 1, l64.fvalue(pv, 2, v1512[l23.fvalue(pv, 1, v1514)], "\n")) : l5.value) : l5.value) !== l5.value ? l107.fvalue(pv, 2, l125.fvalue(pv, 1, "\n"), l500) : l125.fvalue(pv, 1, v1512[v1514])));
                                    (function(){
                                        var v1518 = 1;
                                        var v1519 = (function(){
                                            var x1 = v1514;
                                            if (typeof x1 !== 'number') throw 'Not a number!';
                                            var x2 = v1518;
                                            if (typeof x2 !== 'number') throw 'Not a number!';
                                            return x1+x2;
                                        })();
                                        return (v1514 = v1519);
                                    })();
                                }return l5.value;
                            })();
                        })();
                        return v1513;
                    })(l108,0,l54.fvalue(pv, 1, v1512));
                })((function(){
                    var f = (function(){
                        var symbol = l489;
                        var func = symbol.fvalue;
                        if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                        return func;
                    })();
                    var args = [pv, 0];
                    var tail = (v1510);
                    while (tail != l5.value){
                        args.push(tail.car);
                        args[1] += 1;
                        tail = tail.cdr;
                    }
                    return (typeof f === 'function'? f : f.fvalue).apply(this, args);
                })());
            })();
        });
        func.fname = 'INDENT';
        return func;
    })();
    return l498;
})();
var l501 = (new Symbol(make_lisp_string("*MULTIPLE-VALUE-P*")));
(function(){
    (((l501.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l501).value = l5.value));
    return l501;
})();
var l502 = (new Symbol(make_lisp_string("MAKE-BINDING")));
var l503 = (new Symbol(make_lisp_string("NAME"), make_lisp_string("KEYWORD")));
l503.value = l503;
var l504 = (new Symbol(make_lisp_string("TYPE"), make_lisp_string("KEYWORD")));
l504.value = l504;
var l505 = (new Symbol(make_lisp_string("VALUE"), make_lisp_string("KEYWORD")));
l505.value = l505;
var l506 = (new Symbol(make_lisp_string("DECLARATIONS"), make_lisp_string("KEYWORD")));
l506.value = l506;
var l507 = (new Symbol(make_lisp_string("BINDING")));
var l508 = (new Symbol(make_lisp_string("BINDING-P")));
var l509 = (new Symbol(make_lisp_string("COPY-BINDING")));
var l510 = (new Symbol(make_lisp_string("BINDING-NAME")));
var l511 = make_lisp_string("BINDING");
var l512 = (new Symbol(make_lisp_string("BINDING-TYPE")));
var l513 = (new Symbol(make_lisp_string("BINDING-VALUE")));
var l514 = (new Symbol(make_lisp_string("BINDING-DECLARATIONS")));
(function(){
    (function(){
        (l502).fvalue = (function(){
            var func = (function (values,nargs){
                var v1520; 
                var v1521; 
                var v1522; 
                var v1523; 
                var i;
                for (i=0; i<nargs; i+=2){
                    if (arguments[i+2] === l503.value){
                        v1520 = arguments[i+3];
                        break;
                    }
                }
                if (i == nargs){
                    v1520 = l5.value;
                }
                for (i=0; i<nargs; i+=2){
                    if (arguments[i+2] === l504.value){
                        v1521 = arguments[i+3];
                        break;
                    }
                }
                if (i == nargs){
                    v1521 = l5.value;
                }
                for (i=0; i<nargs; i+=2){
                    if (arguments[i+2] === l505.value){
                        v1522 = arguments[i+3];
                        break;
                    }
                }
                if (i == nargs){
                    v1522 = l5.value;
                }
                for (i=0; i<nargs; i+=2){
                    if (arguments[i+2] === l506.value){
                        v1523 = arguments[i+3];
                        break;
                    }
                }
                if (i == nargs){
                    v1523 = l5.value;
                }
                for (i=0; i<nargs; i+=2){
                    if (arguments[i+2] !== l503.value && arguments[i+2] !== l504.value && arguments[i+2] !== l505.value && arguments[i+2] !== l506.value)
                        throw 'Unknown keyword argument ' + xstring(arguments[i].name);
                }
                return (function(){
                    return l92.fvalue(values, 5, l507, v1520, v1521, v1522, v1523);
                })();
            });
            func.fname = 'MAKE-BINDING';
            return func;
        })();
        return l502;
    })();
    (function(){
        (l508).fvalue = (function(){
            var func = (function (values,nargs,v1525){
                checkArgs(nargs, 1);
                return (function(){
                    return (((function(){
                        var tmp = v1525;
                        return (typeof tmp == 'object' && 'car' in tmp);
                    })()?l4.value: l5.value) !== l5.value ? (((function(){
                        var tmp = v1525;
                        return tmp === l5.value? l5.value: tmp.car;
                    })() === l507)?l4.value: l5.value) : l5.value);
                })();
            });
            func.fname = 'BINDING-P';
            return func;
        })();
        return l508;
    })();
    (function(){
        (l509).fvalue = (function(){
            var func = (function (values,nargs,v1527){
                checkArgs(nargs, 1);
                return (function(){
                    return l180.fvalue(values, 1, v1527);
                })();
            });
            func.fname = 'COPY-BINDING';
            return func;
        })();
        return l509;
    })();
    (function(){
        (l510).fvalue = (function(){
            var func = (function (values,nargs,v1529){
                checkArgs(nargs, 1);
                return (function(){
                    (l508.fvalue(pv, 1, v1529) !== l5.value ? l5.value : l78.fvalue(pv, 3, l412, v1529, l511));
                    return l151.fvalue(values, 2, 1, v1529);
                })();
            });
            func.fname = 'BINDING-NAME';
            return func;
        })();
        return l510;
    })();
    (function(){
        (function(){
            var v1531 = ({car: l510, cdr: (function (values,nargs,v1532){
                checkArgs(nargs, 1);
                return (function(v1533,v1534){
                    return values(l92.fvalue(pv, 1, v1533), l92.fvalue(pv, 1, v1532), l92.fvalue(pv, 1, v1534), l92.fvalue(pv, 3, l196, l92.fvalue(pv, 3, l197, l92.fvalue(pv, 3, l150, 1, v1533), v1534), v1534), l92.fvalue(pv, 2, l510, v1533));
                })(l15.fvalue(pv, 0),l15.fvalue(pv, 0));
            })});
            var v1535 = ({car: v1531, cdr: (function(){
                var symbol = l90;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })()});
            return ((l90).value = v1535);
        })();
        return l510;
    })();
    (function(){
        (l512).fvalue = (function(){
            var func = (function (values,nargs,v1536){
                checkArgs(nargs, 1);
                return (function(){
                    (l508.fvalue(pv, 1, v1536) !== l5.value ? l5.value : l78.fvalue(pv, 3, l412, v1536, l511));
                    return l151.fvalue(values, 2, 2, v1536);
                })();
            });
            func.fname = 'BINDING-TYPE';
            return func;
        })();
        return l512;
    })();
    (function(){
        (function(){
            var v1538 = ({car: l512, cdr: (function (values,nargs,v1539){
                checkArgs(nargs, 1);
                return (function(v1540,v1541){
                    return values(l92.fvalue(pv, 1, v1540), l92.fvalue(pv, 1, v1539), l92.fvalue(pv, 1, v1541), l92.fvalue(pv, 3, l196, l92.fvalue(pv, 3, l197, l92.fvalue(pv, 3, l150, 2, v1540), v1541), v1541), l92.fvalue(pv, 2, l512, v1540));
                })(l15.fvalue(pv, 0),l15.fvalue(pv, 0));
            })});
            var v1542 = ({car: v1538, cdr: (function(){
                var symbol = l90;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })()});
            return ((l90).value = v1542);
        })();
        return l512;
    })();
    (function(){
        (l513).fvalue = (function(){
            var func = (function (values,nargs,v1543){
                checkArgs(nargs, 1);
                return (function(){
                    (l508.fvalue(pv, 1, v1543) !== l5.value ? l5.value : l78.fvalue(pv, 3, l412, v1543, l511));
                    return l151.fvalue(values, 2, 3, v1543);
                })();
            });
            func.fname = 'BINDING-VALUE';
            return func;
        })();
        return l513;
    })();
    (function(){
        (function(){
            var v1545 = ({car: l513, cdr: (function (values,nargs,v1546){
                checkArgs(nargs, 1);
                return (function(v1547,v1548){
                    return values(l92.fvalue(pv, 1, v1547), l92.fvalue(pv, 1, v1546), l92.fvalue(pv, 1, v1548), l92.fvalue(pv, 3, l196, l92.fvalue(pv, 3, l197, l92.fvalue(pv, 3, l150, 3, v1547), v1548), v1548), l92.fvalue(pv, 2, l513, v1547));
                })(l15.fvalue(pv, 0),l15.fvalue(pv, 0));
            })});
            var v1549 = ({car: v1545, cdr: (function(){
                var symbol = l90;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })()});
            return ((l90).value = v1549);
        })();
        return l513;
    })();
    (function(){
        (l514).fvalue = (function(){
            var func = (function (values,nargs,v1550){
                checkArgs(nargs, 1);
                return (function(){
                    (l508.fvalue(pv, 1, v1550) !== l5.value ? l5.value : l78.fvalue(pv, 3, l412, v1550, l511));
                    return l151.fvalue(values, 2, 4, v1550);
                })();
            });
            func.fname = 'BINDING-DECLARATIONS';
            return func;
        })();
        return l514;
    })();
    (function(){
        (function(){
            var v1552 = ({car: l514, cdr: (function (values,nargs,v1553){
                checkArgs(nargs, 1);
                return (function(v1554,v1555){
                    return values(l92.fvalue(pv, 1, v1554), l92.fvalue(pv, 1, v1553), l92.fvalue(pv, 1, v1555), l92.fvalue(pv, 3, l196, l92.fvalue(pv, 3, l197, l92.fvalue(pv, 3, l150, 4, v1554), v1555), v1555), l92.fvalue(pv, 2, l514, v1554));
                })(l15.fvalue(pv, 0),l15.fvalue(pv, 0));
            })});
            var v1556 = ({car: v1552, cdr: (function(){
                var symbol = l90;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })()});
            return ((l90).value = v1556);
        })();
        return l514;
    })();
    return l507;
})();
var l515 = (new Symbol(make_lisp_string("MAKE-LEXENV")));
var l516 = (new Symbol(make_lisp_string("FUNCTION"), make_lisp_string("KEYWORD")));
l516.value = l516;
var l517 = (new Symbol(make_lisp_string("BLOCK"), make_lisp_string("KEYWORD")));
l517.value = l517;
var l518 = (new Symbol(make_lisp_string("GOTAG"), make_lisp_string("KEYWORD")));
l518.value = l518;
var l519 = (new Symbol(make_lisp_string("LEXENV")));
var l520 = (new Symbol(make_lisp_string("LEXENV-P")));
var l521 = (new Symbol(make_lisp_string("COPY-LEXENV")));
var l522 = (new Symbol(make_lisp_string("LEXENV-VARIABLE")));
var l523 = make_lisp_string("LEXENV");
var l524 = (new Symbol(make_lisp_string("LEXENV-FUNCTION")));
var l525 = (new Symbol(make_lisp_string("LEXENV-BLOCK")));
var l526 = (new Symbol(make_lisp_string("LEXENV-GOTAG")));
(function(){
    (function(){
        (l515).fvalue = (function(){
            var func = (function (values,nargs){
                var v1557; 
                var v1558; 
                var v1559; 
                var v1560; 
                var i;
                for (i=0; i<nargs; i+=2){
                    if (arguments[i+2] === l405.value){
                        v1557 = arguments[i+3];
                        break;
                    }
                }
                if (i == nargs){
                    v1557 = l5.value;
                }
                for (i=0; i<nargs; i+=2){
                    if (arguments[i+2] === l516.value){
                        v1558 = arguments[i+3];
                        break;
                    }
                }
                if (i == nargs){
                    v1558 = l5.value;
                }
                for (i=0; i<nargs; i+=2){
                    if (arguments[i+2] === l517.value){
                        v1559 = arguments[i+3];
                        break;
                    }
                }
                if (i == nargs){
                    v1559 = l5.value;
                }
                for (i=0; i<nargs; i+=2){
                    if (arguments[i+2] === l518.value){
                        v1560 = arguments[i+3];
                        break;
                    }
                }
                if (i == nargs){
                    v1560 = l5.value;
                }
                for (i=0; i<nargs; i+=2){
                    if (arguments[i+2] !== l405.value && arguments[i+2] !== l516.value && arguments[i+2] !== l517.value && arguments[i+2] !== l518.value)
                        throw 'Unknown keyword argument ' + xstring(arguments[i].name);
                }
                return (function(){
                    return l92.fvalue(values, 5, l519, v1557, v1558, v1559, v1560);
                })();
            });
            func.fname = 'MAKE-LEXENV';
            return func;
        })();
        return l515;
    })();
    (function(){
        (l520).fvalue = (function(){
            var func = (function (values,nargs,v1562){
                checkArgs(nargs, 1);
                return (function(){
                    return (((function(){
                        var tmp = v1562;
                        return (typeof tmp == 'object' && 'car' in tmp);
                    })()?l4.value: l5.value) !== l5.value ? (((function(){
                        var tmp = v1562;
                        return tmp === l5.value? l5.value: tmp.car;
                    })() === l519)?l4.value: l5.value) : l5.value);
                })();
            });
            func.fname = 'LEXENV-P';
            return func;
        })();
        return l520;
    })();
    (function(){
        (l521).fvalue = (function(){
            var func = (function (values,nargs,v1564){
                checkArgs(nargs, 1);
                return (function(){
                    return l180.fvalue(values, 1, v1564);
                })();
            });
            func.fname = 'COPY-LEXENV';
            return func;
        })();
        return l521;
    })();
    (function(){
        (l522).fvalue = (function(){
            var func = (function (values,nargs,v1566){
                checkArgs(nargs, 1);
                return (function(){
                    (l520.fvalue(pv, 1, v1566) !== l5.value ? l5.value : l78.fvalue(pv, 3, l412, v1566, l523));
                    return l151.fvalue(values, 2, 1, v1566);
                })();
            });
            func.fname = 'LEXENV-VARIABLE';
            return func;
        })();
        return l522;
    })();
    (function(){
        (function(){
            var v1568 = ({car: l522, cdr: (function (values,nargs,v1569){
                checkArgs(nargs, 1);
                return (function(v1570,v1571){
                    return values(l92.fvalue(pv, 1, v1570), l92.fvalue(pv, 1, v1569), l92.fvalue(pv, 1, v1571), l92.fvalue(pv, 3, l196, l92.fvalue(pv, 3, l197, l92.fvalue(pv, 3, l150, 1, v1570), v1571), v1571), l92.fvalue(pv, 2, l522, v1570));
                })(l15.fvalue(pv, 0),l15.fvalue(pv, 0));
            })});
            var v1572 = ({car: v1568, cdr: (function(){
                var symbol = l90;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })()});
            return ((l90).value = v1572);
        })();
        return l522;
    })();
    (function(){
        (l524).fvalue = (function(){
            var func = (function (values,nargs,v1573){
                checkArgs(nargs, 1);
                return (function(){
                    (l520.fvalue(pv, 1, v1573) !== l5.value ? l5.value : l78.fvalue(pv, 3, l412, v1573, l523));
                    return l151.fvalue(values, 2, 2, v1573);
                })();
            });
            func.fname = 'LEXENV-FUNCTION';
            return func;
        })();
        return l524;
    })();
    (function(){
        (function(){
            var v1575 = ({car: l524, cdr: (function (values,nargs,v1576){
                checkArgs(nargs, 1);
                return (function(v1577,v1578){
                    return values(l92.fvalue(pv, 1, v1577), l92.fvalue(pv, 1, v1576), l92.fvalue(pv, 1, v1578), l92.fvalue(pv, 3, l196, l92.fvalue(pv, 3, l197, l92.fvalue(pv, 3, l150, 2, v1577), v1578), v1578), l92.fvalue(pv, 2, l524, v1577));
                })(l15.fvalue(pv, 0),l15.fvalue(pv, 0));
            })});
            var v1579 = ({car: v1575, cdr: (function(){
                var symbol = l90;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })()});
            return ((l90).value = v1579);
        })();
        return l524;
    })();
    (function(){
        (l525).fvalue = (function(){
            var func = (function (values,nargs,v1580){
                checkArgs(nargs, 1);
                return (function(){
                    (l520.fvalue(pv, 1, v1580) !== l5.value ? l5.value : l78.fvalue(pv, 3, l412, v1580, l523));
                    return l151.fvalue(values, 2, 3, v1580);
                })();
            });
            func.fname = 'LEXENV-BLOCK';
            return func;
        })();
        return l525;
    })();
    (function(){
        (function(){
            var v1582 = ({car: l525, cdr: (function (values,nargs,v1583){
                checkArgs(nargs, 1);
                return (function(v1584,v1585){
                    return values(l92.fvalue(pv, 1, v1584), l92.fvalue(pv, 1, v1583), l92.fvalue(pv, 1, v1585), l92.fvalue(pv, 3, l196, l92.fvalue(pv, 3, l197, l92.fvalue(pv, 3, l150, 3, v1584), v1585), v1585), l92.fvalue(pv, 2, l525, v1584));
                })(l15.fvalue(pv, 0),l15.fvalue(pv, 0));
            })});
            var v1586 = ({car: v1582, cdr: (function(){
                var symbol = l90;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })()});
            return ((l90).value = v1586);
        })();
        return l525;
    })();
    (function(){
        (l526).fvalue = (function(){
            var func = (function (values,nargs,v1587){
                checkArgs(nargs, 1);
                return (function(){
                    (l520.fvalue(pv, 1, v1587) !== l5.value ? l5.value : l78.fvalue(pv, 3, l412, v1587, l523));
                    return l151.fvalue(values, 2, 4, v1587);
                })();
            });
            func.fname = 'LEXENV-GOTAG';
            return func;
        })();
        return l526;
    })();
    (function(){
        (function(){
            var v1589 = ({car: l526, cdr: (function (values,nargs,v1590){
                checkArgs(nargs, 1);
                return (function(v1591,v1592){
                    return values(l92.fvalue(pv, 1, v1591), l92.fvalue(pv, 1, v1590), l92.fvalue(pv, 1, v1592), l92.fvalue(pv, 3, l196, l92.fvalue(pv, 3, l197, l92.fvalue(pv, 3, l150, 4, v1591), v1592), v1592), l92.fvalue(pv, 2, l526, v1591));
                })(l15.fvalue(pv, 0),l15.fvalue(pv, 0));
            })});
            var v1593 = ({car: v1589, cdr: (function(){
                var symbol = l90;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })()});
            return ((l90).value = v1593);
        })();
        return l526;
    })();
    return l519;
})();
var l527 = (new Symbol(make_lisp_string("LOOKUP-IN-LEXENV")));
var l528 = (new Symbol(make_lisp_string("BLOCK")));
var l529 = (new Symbol(make_lisp_string("GOTAG")));
(function(){
    (l527).fvalue = (function(){
        var func = (function (values,nargs,v1594,v1595,v1596){
            checkArgs(nargs, 3);
            return (function(){
                return l210.fvalue(values, 4, v1594, (function(v1598){
                    return (function(v1599){
                        return (l27.fvalue(pv, 2, v1599, l84) !== l5.value ? (function(){
                            l5.value;
                            return l522.fvalue(pv, 1, v1595);
                        })() : (l27.fvalue(pv, 2, v1599, l82) !== l5.value ? (function(){
                            l5.value;
                            return l524.fvalue(pv, 1, v1595);
                        })() : (l27.fvalue(pv, 2, v1599, l528) !== l5.value ? (function(){
                            l5.value;
                            return l525.fvalue(pv, 1, v1595);
                        })() : (l27.fvalue(pv, 2, v1599, l529) !== l5.value ? (function(){
                            l5.value;
                            return l526.fvalue(pv, 1, v1595);
                        })() : (function(){
                            l5.value;
                            return l78.fvalue(pv, 2, l87, v1598);
                        })()))));
                    })(v1598);
                })(v1596), l176.value, (function(){
                    var symbol = l510;
                    var func = symbol.fvalue;
                    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                    return func;
                })());
            })();
        });
        func.fname = 'LOOKUP-IN-LEXENV';
        return func;
    })();
    return l527;
})();
var l530 = (new Symbol(make_lisp_string("PUSH-TO-LEXENV")));
(function(){
    (l530).fvalue = (function(){
        var func = (function (values,nargs,v1600,v1601,v1602){
            checkArgs(nargs, 3);
            return (function(){
                return (function(v1604){
                    return (function(v1605){
                        return (l27.fvalue(pv, 2, v1605, l84) !== l5.value ? (function(){
                            l5.value;
                            return (function(){
                                var v1606 = v1600;
                                var v1607 = v1601;
                                var v1608 = ({car: v1606, cdr: l522.fvalue(pv, 1, v1607)});
                                return (function(){
                                    (function(){
                                        var x = l150.fvalue(pv, 2, 1, v1607);
                                        if (typeof x != 'object')
                                            throw 'The value ' + x + ' is not a type object.';
                                        return (x.car = v1608, x);
                                    })();
                                    return v1608;
                                })();
                            })();
                        })() : (l27.fvalue(pv, 2, v1605, l82) !== l5.value ? (function(){
                            l5.value;
                            return (function(){
                                var v1609 = v1600;
                                var v1610 = v1601;
                                var v1611 = ({car: v1609, cdr: l524.fvalue(pv, 1, v1610)});
                                return (function(){
                                    (function(){
                                        var x = l150.fvalue(pv, 2, 2, v1610);
                                        if (typeof x != 'object')
                                            throw 'The value ' + x + ' is not a type object.';
                                        return (x.car = v1611, x);
                                    })();
                                    return v1611;
                                })();
                            })();
                        })() : (l27.fvalue(pv, 2, v1605, l528) !== l5.value ? (function(){
                            l5.value;
                            return (function(){
                                var v1612 = v1600;
                                var v1613 = v1601;
                                var v1614 = ({car: v1612, cdr: l525.fvalue(pv, 1, v1613)});
                                return (function(){
                                    (function(){
                                        var x = l150.fvalue(pv, 2, 3, v1613);
                                        if (typeof x != 'object')
                                            throw 'The value ' + x + ' is not a type object.';
                                        return (x.car = v1614, x);
                                    })();
                                    return v1614;
                                })();
                            })();
                        })() : (l27.fvalue(pv, 2, v1605, l529) !== l5.value ? (function(){
                            l5.value;
                            return (function(){
                                var v1615 = v1600;
                                var v1616 = v1601;
                                var v1617 = ({car: v1615, cdr: l526.fvalue(pv, 1, v1616)});
                                return (function(){
                                    (function(){
                                        var x = l150.fvalue(pv, 2, 4, v1616);
                                        if (typeof x != 'object')
                                            throw 'The value ' + x + ' is not a type object.';
                                        return (x.car = v1617, x);
                                    })();
                                    return v1617;
                                })();
                            })();
                        })() : (function(){
                            l5.value;
                            return l78.fvalue(values, 2, l87, v1604);
                        })()))));
                    })(v1604);
                })(v1602);
            })();
        });
        func.fname = 'PUSH-TO-LEXENV';
        return func;
    })();
    return l530;
})();
var l531 = (new Symbol(make_lisp_string("EXTEND-LEXENV")));
(function(){
    (l531).fvalue = (function(){
        var func = (function (values,nargs,v1618,v1619,v1620){
            checkArgs(nargs, 3);
            return (function(){
                return (function(v1622){
                    return (function(){
                        return (function(v1624,v1625){
                            (function(){
                                while(v1624 !== l5.value){
                                    (v1625 = (function(){
                                        var tmp = v1624;
                                        return tmp === l5.value? l5.value: tmp.car;
                                    })());
                                    (function(){
                                        l530.fvalue(pv, 3, v1625, v1622, v1620);
                                        return l5.value;
                                    })();
                                    (v1624 = (function(){
                                        var tmp = v1624;
                                        return tmp === l5.value? l5.value: tmp.cdr;
                                    })());
                                }return l5.value;
                            })();
                            return v1622;
                        })(l49.fvalue(pv, 1, v1618),l5.value);
                    })();
                })(l521.fvalue(pv, 1, v1619));
            })();
        });
        func.fname = 'EXTEND-LEXENV';
        return func;
    })();
    return l531;
})();
var l532 = (new Symbol(make_lisp_string("*ENVIRONMENT*")));
(function(){
    (((l532.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l532).value = l515.fvalue(pv, 0)));
    return l532;
})();
var l533 = (new Symbol(make_lisp_string("*VARIABLE-COUNTER*")));
(function(){
    (((l533.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l533).value = 0));
    return l533;
})();
var l534 = (new Symbol(make_lisp_string("GVARNAME")));
var l535 = make_lisp_string("v");
(function(){
    (l534).fvalue = (function(){
        var func = (function (values,nargs,v1626){
            checkArgs(nargs, 1);
            return (function(){
                return l489.fvalue(values, 2, l535, (function(){
                    var v1628 = 1;
                    var v1629 = (function(){
                        var x1 = (function(){
                            var symbol = l533;
                            var value = symbol.value;
                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                            return value;
                        })();
                        if (typeof x1 !== 'number') throw 'Not a number!';
                        var x2 = v1628;
                        if (typeof x2 !== 'number') throw 'Not a number!';
                        return x1+x2;
                    })();
                    return ((l533).value = v1629);
                })());
            })();
        });
        func.fname = 'GVARNAME';
        return func;
    })();
    return l534;
})();
var l536 = (new Symbol(make_lisp_string("TRANSLATE-VARIABLE")));
(function(){
    (l536).fvalue = (function(){
        var func = (function (values,nargs,v1630){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v1632){
                    return (v1632 !== l5.value ? l513.fvalue(values, 1, v1632) : l5.value);
                })(l527.fvalue(pv, 3, v1630, (function(){
                    var symbol = l532;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l84));
            })();
        });
        func.fname = 'TRANSLATE-VARIABLE';
        return func;
    })();
    return l536;
})();
var l537 = (new Symbol(make_lisp_string("EXTEND-LOCAL-ENV")));
(function(){
    (l537).fvalue = (function(){
        var func = (function (values,nargs,v1633){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v1635){
                    return (function(){
                        return (function(v1637,v1638){
                            (function(){
                                while(v1637 !== l5.value){
                                    (v1638 = (function(){
                                        var tmp = v1637;
                                        return tmp === l5.value? l5.value: tmp.car;
                                    })());
                                    (function(){
                                        (function(v1639){
                                            return l530.fvalue(pv, 3, v1639, v1635, l84);
                                        })(l502.fvalue(pv, 6, l503.value, v1638, l504.value, l84, l505.value, l534.fvalue(pv, 1, v1638)));
                                        return l5.value;
                                    })();
                                    (v1637 = (function(){
                                        var tmp = v1637;
                                        return tmp === l5.value? l5.value: tmp.cdr;
                                    })());
                                }return l5.value;
                            })();
                            return v1635;
                        })(v1633,l5.value);
                    })();
                })(l521.fvalue(pv, 1, (function(){
                    var symbol = l532;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })()));
            })();
        });
        func.fname = 'EXTEND-LOCAL-ENV';
        return func;
    })();
    return l537;
})();
var l538 = (new Symbol(make_lisp_string("*TOPLEVEL-COMPILATIONS*")));
(function(){
    (((l538.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l538).value = l5.value));
    return l538;
})();
var l539 = (new Symbol(make_lisp_string("TOPLEVEL-COMPILATION")));
(function(){
    (l539).fvalue = (function(){
        var func = (function (values,nargs,v1640){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var v1642 = v1640;
                    var v1643 = ({car: v1642, cdr: (function(){
                        var symbol = l538;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })()});
                    return ((l538).value = v1643);
                })();
            })();
        });
        func.fname = 'TOPLEVEL-COMPILATION';
        return func;
    })();
    return l539;
})();
var l540 = (new Symbol(make_lisp_string("NULL-OR-EMPTY-P")));
(function(){
    (l540).fvalue = (function(){
        var func = (function (values,nargs,v1644){
            checkArgs(nargs, 1);
            return (function(){
                return l25.fvalue(values, 1, l54.fvalue(pv, 1, v1644));
            })();
        });
        func.fname = 'NULL-OR-EMPTY-P';
        return func;
    })();
    return l540;
})();
var l541 = (new Symbol(make_lisp_string("GET-TOPLEVEL-COMPILATIONS")));
(function(){
    (l541).fvalue = (function(){
        var func = (function (values,nargs){
            checkArgsAtMost(nargs, 0);
            return (function(){
                return l49.fvalue(values, 1, l216.fvalue(pv, 2, (function(){
                    var symbol = l540;
                    var func = symbol.fvalue;
                    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                    return func;
                })(), (function(){
                    var symbol = l538;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })()));
            })();
        });
        func.fname = 'GET-TOPLEVEL-COMPILATIONS';
        return func;
    })();
    return l541;
})();
var l542 = (new Symbol(make_lisp_string("%COMPILE-DEFMACRO")));
var l543 = (new Symbol(make_lisp_string("MACRO")));
(function(){
    (l542).fvalue = (function(){
        var func = (function (values,nargs,v1647,v1648){
            checkArgs(nargs, 2);
            return (function(){
                l539.fvalue(pv, 1, l494.fvalue(pv, 1, l92.fvalue(pv, 2, l389, v1647)));
                (function(v1650){
                    return l530.fvalue(pv, 3, v1650, (function(){
                        var symbol = l532;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })(), l82);
                })(l502.fvalue(pv, 6, l503.value, v1647, l504.value, l543, l505.value, v1648));
                return v1647;
            })();
        });
        func.fname = '%COMPILE-DEFMACRO';
        return func;
    })();
    return l542;
})();
var l544 = (new Symbol(make_lisp_string("GLOBAL-BINDING")));
(function(){
    (l544).fvalue = (function(){
        var func = (function (values,nargs,v1651,v1652,v1653){
            checkArgs(nargs, 3);
            return (function(){
                return (function(v1655){
                    return (v1655 !== l5.value ? v1655 : (function(v1656){
                        l530.fvalue(pv, 3, v1656, (function(){
                            var symbol = l532;
                            var value = symbol.value;
                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                            return value;
                        })(), v1653);
                        return v1656;
                    })(l502.fvalue(pv, 6, l503.value, v1651, l504.value, v1652, l505.value, l5.value)));
                })(l527.fvalue(pv, 3, v1651, (function(){
                    var symbol = l532;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), v1653));
            })();
        });
        func.fname = 'GLOBAL-BINDING';
        return func;
    })();
    return l544;
})();
var l545 = (new Symbol(make_lisp_string("CLAIMP")));
(function(){
    (l545).fvalue = (function(){
        var func = (function (values,nargs,v1657,v1658,v1659){
            checkArgs(nargs, 3);
            return (function(){
                return (function(v1661){
                    return (v1661 !== l5.value ? l191.fvalue(values, 2, v1659, l514.fvalue(pv, 1, v1661)) : l5.value);
                })(l527.fvalue(pv, 3, v1657, (function(){
                    var symbol = l532;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), v1658));
            })();
        });
        func.fname = 'CLAIMP';
        return func;
    })();
    return l545;
})();
var l546 = (new Symbol(make_lisp_string("!PROCLAIM")));
var l547 = (new Symbol(make_lisp_string("SPECIAL")));
var l548 = (new Symbol(make_lisp_string("NOTINLINE")));
var l549 = (new Symbol(make_lisp_string("CONSTANT")));
(function(){
    (l546).fvalue = (function(){
        var func = (function (values,nargs,v1662){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v1664){
                    return (l27.fvalue(pv, 2, v1664, l547) !== l5.value ? (function(){
                        l5.value;
                        return (function(){
                            return (function(v1666,v1667){
                                (function(){
                                    while(v1666 !== l5.value){
                                        (v1667 = (function(){
                                            var tmp = v1666;
                                            return tmp === l5.value? l5.value: tmp.car;
                                        })());
                                        (function(){
                                            (function(v1668){
                                                return (function(){
                                                    var v1669 = l547;
                                                    var v1670 = v1668;
                                                    var v1671 = ({car: v1669, cdr: l514.fvalue(pv, 1, v1670)});
                                                    return (function(){
                                                        (function(){
                                                            var x = l150.fvalue(pv, 2, 4, v1670);
                                                            if (typeof x != 'object')
                                                                throw 'The value ' + x + ' is not a type object.';
                                                            return (x.car = v1671, x);
                                                        })();
                                                        return v1671;
                                                    })();
                                                })();
                                            })(l544.fvalue(pv, 3, v1667, l84, l84));
                                            return l5.value;
                                        })();
                                        (v1666 = (function(){
                                            var tmp = v1666;
                                            return tmp === l5.value? l5.value: tmp.cdr;
                                        })());
                                    }return l5.value;
                                })();
                                return l5.value;
                            })((function(){
                                var tmp = v1662;
                                return tmp === l5.value? l5.value: tmp.cdr;
                            })(),l5.value);
                        })();
                    })() : (l27.fvalue(pv, 2, v1664, l548) !== l5.value ? (function(){
                        l5.value;
                        return (function(){
                            return (function(v1673,v1674){
                                (function(){
                                    while(v1673 !== l5.value){
                                        (v1674 = (function(){
                                            var tmp = v1673;
                                            return tmp === l5.value? l5.value: tmp.car;
                                        })());
                                        (function(){
                                            (function(v1675){
                                                return (function(){
                                                    var v1676 = l548;
                                                    var v1677 = v1675;
                                                    var v1678 = ({car: v1676, cdr: l514.fvalue(pv, 1, v1677)});
                                                    return (function(){
                                                        (function(){
                                                            var x = l150.fvalue(pv, 2, 4, v1677);
                                                            if (typeof x != 'object')
                                                                throw 'The value ' + x + ' is not a type object.';
                                                            return (x.car = v1678, x);
                                                        })();
                                                        return v1678;
                                                    })();
                                                })();
                                            })(l544.fvalue(pv, 3, v1674, l82, l82));
                                            return l5.value;
                                        })();
                                        (v1673 = (function(){
                                            var tmp = v1673;
                                            return tmp === l5.value? l5.value: tmp.cdr;
                                        })());
                                    }return l5.value;
                                })();
                                return l5.value;
                            })((function(){
                                var tmp = v1662;
                                return tmp === l5.value? l5.value: tmp.cdr;
                            })(),l5.value);
                        })();
                    })() : (l27.fvalue(pv, 2, v1664, l549) !== l5.value ? (function(){
                        l5.value;
                        return (function(){
                            return (function(v1680,v1681){
                                (function(){
                                    while(v1680 !== l5.value){
                                        (v1681 = (function(){
                                            var tmp = v1680;
                                            return tmp === l5.value? l5.value: tmp.car;
                                        })());
                                        (function(){
                                            (function(v1682){
                                                return (function(){
                                                    var v1683 = l549;
                                                    var v1684 = v1682;
                                                    var v1685 = ({car: v1683, cdr: l514.fvalue(pv, 1, v1684)});
                                                    return (function(){
                                                        (function(){
                                                            var x = l150.fvalue(pv, 2, 4, v1684);
                                                            if (typeof x != 'object')
                                                                throw 'The value ' + x + ' is not a type object.';
                                                            return (x.car = v1685, x);
                                                        })();
                                                        return v1685;
                                                    })();
                                                })();
                                            })(l544.fvalue(pv, 3, v1681, l84, l84));
                                            return l5.value;
                                        })();
                                        (v1680 = (function(){
                                            var tmp = v1680;
                                            return tmp === l5.value? l5.value: tmp.cdr;
                                        })());
                                    }return l5.value;
                                })();
                                return l5.value;
                            })((function(){
                                var tmp = v1662;
                                return tmp === l5.value? l5.value: tmp.cdr;
                            })(),l5.value);
                        })();
                    })() : l5.value)));
                })((function(){
                    var tmp = v1662;
                    return tmp === l5.value? l5.value: tmp.car;
                })());
            })();
        });
        func.fname = '!PROCLAIM';
        return func;
    })();
    return l546;
})();
var l550 = (new Symbol(make_lisp_string("PROCLAIM")));
(l550).fvalue = (function(){
    var symbol = l546;
    var func = symbol.fvalue;
    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
    return func;
})();
(function(){
    (l323).fvalue = (function(){
        var func = (function (values,nargs,v1686,v1687){
            checkArgs(nargs, 2);
            return (function(){
                return (function(v1689){
                    l530.fvalue(pv, 3, v1689, (function(){
                        var symbol = l532;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })(), l84);
                    return v1686;
                })(l502.fvalue(pv, 6, l503.value, v1686, l504.value, l543, l505.value, v1687));
            })();
        });
        func.fname = '%DEFINE-SYMBOL-MACRO';
        return func;
    })();
    return l323;
})();
var l551 = (new Symbol(make_lisp_string("DEFINE-SYMBOL-MACRO")));
l551;
var l552 = (new Symbol(make_lisp_string("*COMPILATIONS*")));
(function(){
    (((l552.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l552).value = l5.value));
    return l552;
})();
var l553 = (new Symbol(make_lisp_string("DEFINE-COMPILATION")));
l553;
var l554 = make_lisp_string("(");
var l555 = make_lisp_string(" !== ");
var l556 = make_lisp_string(" ? ");
var l557 = make_lisp_string(" : ");
var l558 = make_lisp_string(")");
(function(){
    var v1690 = l92.fvalue(pv, 2, l485, (function (values,nargs,v1691,v1692,v1693){
        checkArgs(nargs, 3);
        return (function(){
            return l489.fvalue(values, 9, l554, l494.fvalue(pv, 1, v1691), l555, l494.fvalue(pv, 1, l5.value), l556, l494.fvalue(pv, 2, v1692, (function(){
                var symbol = l501;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })()), l557, l494.fvalue(pv, 2, v1693, (function(){
                var symbol = l501;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })()), l558);
        })();
    }));
    var v1695 = ({car: v1690, cdr: (function(){
        var symbol = l552;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l552).value = v1695);
})();
var l559 = (new Symbol(make_lisp_string("*LL-KEYWORDS*")));
var l560 = QIList(l397,l398,l399,l5);
(function(){
    (((l559.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l559).value = l560));
    return l559;
})();
var l561 = (new Symbol(make_lisp_string("LIST-UNTIL-KEYWORD")));
(function(){
    (l561).fvalue = (function(){
        var func = (function (values,nargs,v1696){
            checkArgs(nargs, 1);
            return (function(){
                return ((function(v1698){
                    return (v1698 !== l5.value ? v1698 : l191.fvalue(pv, 2, (function(){
                        var tmp = v1696;
                        return tmp === l5.value? l5.value: tmp.car;
                    })(), (function(){
                        var symbol = l559;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })()));
                })(l44.fvalue(pv, 1, v1696)) !== l5.value ? l5.value : ({car: (function(){
                    var tmp = v1696;
                    return tmp === l5.value? l5.value: tmp.car;
                })(), cdr: l561.fvalue(pv, 1, (function(){
                    var tmp = v1696;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })())}));
            })();
        });
        func.fname = 'LIST-UNTIL-KEYWORD';
        return func;
    })();
    return l561;
})();
var l562 = (new Symbol(make_lisp_string("LL-SECTION")));
(function(){
    (l562).fvalue = (function(){
        var func = (function (values,nargs,v1699,v1700){
            checkArgs(nargs, 2);
            return (function(){
                return l561.fvalue(values, 1, (function(){
                    var tmp = l191.fvalue(pv, 2, v1699, v1700);
                    return tmp === l5.value? l5.value: tmp.cdr;
                })());
            })();
        });
        func.fname = 'LL-SECTION';
        return func;
    })();
    return l562;
})();
var l563 = (new Symbol(make_lisp_string("LL-REQUIRED-ARGUMENTS")));
(function(){
    (l563).fvalue = (function(){
        var func = (function (values,nargs,v1702){
            checkArgs(nargs, 1);
            return (function(){
                return l561.fvalue(values, 1, v1702);
            })();
        });
        func.fname = 'LL-REQUIRED-ARGUMENTS';
        return func;
    })();
    return l563;
})();
var l564 = (new Symbol(make_lisp_string("LL-OPTIONAL-ARGUMENTS-CANONICAL")));
(function(){
    (l564).fvalue = (function(){
        var func = (function (values,nargs,v1704){
            checkArgs(nargs, 1);
            return (function(){
                return l120.fvalue(values, 2, (function(){
                    var symbol = l116;
                    var func = symbol.fvalue;
                    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                    return func;
                })(), l562.fvalue(pv, 2, l397, v1704));
            })();
        });
        func.fname = 'LL-OPTIONAL-ARGUMENTS-CANONICAL';
        return func;
    })();
    return l564;
})();
var l565 = (new Symbol(make_lisp_string("LL-OPTIONAL-ARGUMENTS")));
(function(){
    (l565).fvalue = (function(){
        var func = (function (values,nargs,v1706){
            checkArgs(nargs, 1);
            return (function(){
                return l120.fvalue(values, 2, (function(){
                    var symbol = l131;
                    var func = symbol.fvalue;
                    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                    return func;
                })(), l564.fvalue(pv, 1, v1706));
            })();
        });
        func.fname = 'LL-OPTIONAL-ARGUMENTS';
        return func;
    })();
    return l565;
})();
var l566 = (new Symbol(make_lisp_string("LL-REST-ARGUMENT")));
var l567 = make_lisp_string("Bad lambda-list `~S'.");
(function(){
    (l566).fvalue = (function(){
        var func = (function (values,nargs,v1708){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v1710){
                    ((function(){
                        var tmp = v1710;
                        return tmp === l5.value? l5.value: tmp.cdr;
                    })() !== l5.value ? l78.fvalue(pv, 2, l567, v1708) : l5.value);
                    return (function(){
                        var tmp = v1710;
                        return tmp === l5.value? l5.value: tmp.car;
                    })();
                })(l562.fvalue(pv, 2, l398, v1708));
            })();
        });
        func.fname = 'LL-REST-ARGUMENT';
        return func;
    })();
    return l566;
})();
var l568 = (new Symbol(make_lisp_string("LL-KEYWORD-ARGUMENTS-CANONICAL")));
var l569 = make_lisp_string("KEYWORD");
(function(){
    (l568).fvalue = (function(){
        var func = (function (values,nargs,v1711){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v1716){
                    return l120.fvalue(values, 2, v1716, l562.fvalue(pv, 2, l399, v1711));
                })((function (values,nargs,v1713){
                    checkArgs(nargs, 1);
                    return (function(){
                        return (function(v1715){
                            return ({car: (l56.fvalue(pv, 1, (function(){
                                var tmp = v1715;
                                return tmp === l5.value? l5.value: tmp.car;
                            })()) !== l5.value ? (function(){
                                var tmp = v1715;
                                return tmp === l5.value? l5.value: tmp.car;
                            })() : l92.fvalue(pv, 2, l313.fvalue(pv, 2, ((function(){
                                var tmp = v1715;
                                return tmp === l5.value? l5.value: tmp.car;
                            })()).name, l569), (function(){
                                var tmp = v1715;
                                return tmp === l5.value? l5.value: tmp.car;
                            })())), cdr: (function(){
                                var tmp = v1715;
                                return tmp === l5.value? l5.value: tmp.cdr;
                            })()});
                        })(l116.fvalue(pv, 1, v1713));
                    })();
                }));
            })();
        });
        func.fname = 'LL-KEYWORD-ARGUMENTS-CANONICAL';
        return func;
    })();
    return l568;
})();
var l570 = (new Symbol(make_lisp_string("LL-KEYWORD-ARGUMENTS")));
(function(){
    (l570).fvalue = (function(){
        var func = (function (values,nargs,v1717){
            checkArgs(nargs, 1);
            return (function(){
                return l120.fvalue(values, 2, (function (values,nargs,v1719){
                    checkArgs(nargs, 1);
                    return l134.fvalue(values, 1, l133.fvalue(pv, 1, v1719));
                }), l568.fvalue(pv, 1, v1717));
            })();
        });
        func.fname = 'LL-KEYWORD-ARGUMENTS';
        return func;
    })();
    return l570;
})();
var l571 = (new Symbol(make_lisp_string("LL-SVARS")));
(function(){
    (l571).fvalue = (function(){
        var func = (function (values,nargs,v1720){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v1722){
                    return l214.fvalue(values, 2, l5.value, l120.fvalue(pv, 2, (function(){
                        var symbol = l136;
                        var func = symbol.fvalue;
                        if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                        return func;
                    })(), v1722));
                })(l46.fvalue(pv, 2, l568.fvalue(pv, 1, v1720), l564.fvalue(pv, 1, v1720)));
            })();
        });
        func.fname = 'LL-SVARS';
        return func;
    })();
    return l571;
})();
var l572 = (new Symbol(make_lisp_string("LAMBDA-NAME/DOCSTRING-WRAPPER")));
var l573 = make_lisp_string("(function(){");
var l574 = make_lisp_string("var func = ");
var l575 = make_lisp_string(";");
var l576 = make_lisp_string("func.fname = '");
var l577 = make_lisp_string("';");
var l578 = make_lisp_string("func.docstring = '");
var l579 = make_lisp_string("';");
var l580 = make_lisp_string("return func;");
var l581 = make_lisp_string("})()");
(function(){
    (l572).fvalue = (function(){
        var func = (function (values,nargs,v1724,v1725){
            checkArgsAtLeast(nargs, 2);
            var v1723= l5.value;
            for (var i = nargs-1; i>=2; i--)
                v1723 = {car: arguments[i+2], cdr: v1723};
            return (function(){
                return ((function(v1727){
                    return (v1727 !== l5.value ? v1727 : v1725);
                })(v1724) !== l5.value ? l489.fvalue(values, 4, l573, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 8, l574, l117.fvalue(pv, 1, v1723), l575, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), (v1724 !== l5.value ? l489.fvalue(pv, 4, l576, l254.fvalue(pv, 1, v1724), l577, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })()) : l5.value), (v1725 !== l5.value ? l489.fvalue(pv, 4, l578, l254.fvalue(pv, 1, v1725), l579, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })()) : l5.value), l580, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })()), l581) : (function(){
                    var f = (function(){
                        var symbol = l489;
                        var func = symbol.fvalue;
                        if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                        return func;
                    })();
                    var args = [values, 0];
                    var tail = (v1723);
                    while (tail != l5.value){
                        args.push(tail.car);
                        args[1] += 1;
                        tail = tail.cdr;
                    }
                    return (typeof f === 'function'? f : f.fvalue).apply(this, args);
                })());
            })();
        });
        func.fname = 'LAMBDA-NAME/DOCSTRING-WRAPPER';
        return func;
    })();
    return l572;
})();
var l582 = (new Symbol(make_lisp_string("LAMBDA-CHECK-ARGUMENT-COUNT")));
var l583 = (new Symbol(make_lisp_string("N/A")));
var l584 = make_lisp_string("checkArgs(nargs, ");
var l585 = make_lisp_string(");");
var l586 = make_lisp_string("checkArgsAtLeast(nargs, ");
var l587 = make_lisp_string(");");
var l588 = make_lisp_string("checkArgsAtMost(nargs, ");
var l589 = make_lisp_string(");");
(function(){
    (l582).fvalue = (function(){
        var func = (function (values,nargs,v1728,v1729,v1730){
            checkArgs(nargs, 3);
            return (function(){
                return (function(v1732,v1733){
                    return (function(){
                        try {
                        var v1734 = [];
                            (((function(){
                                var x1 = v1732;
                                if (typeof x1 !== 'number') throw 'Not a number!';
                                return (0<x1?l4.value: l5.value);
                            })() !== l5.value ? l27.fvalue(pv, 2, v1732, v1733) : l5.value) !== l5.value ? (function(){
                                var values = mv;
                                throw ({type: 'block', id: v1734, values: l489.fvalue(values, 4, l584, v1732, l585, (function(){
                                    var symbol = l113;
                                    var value = symbol.value;
                                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                    return value;
                                })()), message: 'Return from unknown block NIL.'})
                            })() : l5.value);
                            return l489.fvalue(values, 2, ((function(){
                                var x1 = v1732;
                                if (typeof x1 !== 'number') throw 'Not a number!';
                                return (0<x1?l4.value: l5.value);
                            })() !== l5.value ? l489.fvalue(pv, 4, l586, v1732, l587, (function(){
                                var symbol = l113;
                                var value = symbol.value;
                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                return value;
                            })()) : l5.value), (((typeof (v1733) == "number")?l4.value: l5.value) !== l5.value ? l489.fvalue(pv, 4, l588, v1733, l589, (function(){
                                var symbol = l113;
                                var value = symbol.value;
                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                return value;
                            })()) : l5.value));
                        }
                        catch (cf){
                            if (cf.type == 'block' && cf.id == v1734)
                                return values.apply(this, forcemv(cf.values));
                            else
                                throw cf;
                        }
                    })();
                })(v1728,(v1730 !== l5.value ? l583 : (function(){
                    var x1 = v1728;
                    if (typeof x1 !== 'number') throw 'Not a number!';
                    var x2 = v1729;
                    if (typeof x2 !== 'number') throw 'Not a number!';
                    return x1+x2;
                })()));
            })();
        });
        func.fname = 'LAMBDA-CHECK-ARGUMENT-COUNT';
        return func;
    })();
    return l582;
})();
var l590 = (new Symbol(make_lisp_string("COMPILE-LAMBDA-OPTIONAL")));
var l591 = make_lisp_string("switch(nargs){");
var l592 = make_lisp_string("case ");
var l593 = make_lisp_string(":");
var l594 = make_lisp_string("=");
var l595 = make_lisp_string(";");
var l596 = make_lisp_string("=");
var l597 = make_lisp_string(";");
var l598 = make_lisp_string("default: break;");
var l599 = make_lisp_string("}");
(function(){
    (l590).fvalue = (function(){
        var func = (function (values,nargs,v1735){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var v1737 = l564.fvalue(pv, 1, v1735);
                    var v1738 = l54.fvalue(pv, 1, l563.fvalue(pv, 1, v1735));
                    var v1739 = l54.fvalue(pv, 1, v1737);
                    return (v1737 !== l5.value ? l489.fvalue(values, 5, l591, (function(){
                        var symbol = l113;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })(), (function(v1740,v1741){
                        return (function(){
                            (function(){
                                return (function(){
                                    while((function(){
                                        var x1 = v1741;
                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                        var x2 = v1739;
                                        if (typeof x2 !== 'number') throw 'Not a number!';
                                        return (x1<x2?l4.value: l5.value);
                                    })() !== l5.value){
                                        (function(v1743){
                                            (function(){
                                                var v1744 = l489.fvalue(pv, 6, l592, (function(){
                                                    var x1 = v1741;
                                                    if (typeof x1 !== 'number') throw 'Not a number!';
                                                    var x2 = v1738;
                                                    if (typeof x2 !== 'number') throw 'Not a number!';
                                                    return x1+x2;
                                                })(), l593, (function(){
                                                    var symbol = l113;
                                                    var value = symbol.value;
                                                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                                    return value;
                                                })(), l498.fvalue(pv, 5, l536.fvalue(pv, 1, (function(){
                                                    var tmp = v1743;
                                                    return tmp === l5.value? l5.value: tmp.car;
                                                })()), l594, l494.fvalue(pv, 1, l135.fvalue(pv, 1, v1743)), l595, (function(){
                                                    var symbol = l113;
                                                    var value = symbol.value;
                                                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                                    return value;
                                                })()), (l136.fvalue(pv, 1, v1743) !== l5.value ? l498.fvalue(pv, 5, l536.fvalue(pv, 1, l136.fvalue(pv, 1, v1743)), l596, l494.fvalue(pv, 1, l5.value), l597, (function(){
                                                    var symbol = l113;
                                                    var value = symbol.value;
                                                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                                    return value;
                                                })()) : l5.value));
                                                var v1745 = ({car: v1744, cdr: v1740});
                                                return (v1740 = v1745);
                                            })();
                                            return (function(){
                                                var v1746 = 1;
                                                var v1747 = (function(){
                                                    var x1 = v1741;
                                                    if (typeof x1 !== 'number') throw 'Not a number!';
                                                    var x2 = v1746;
                                                    if (typeof x2 !== 'number') throw 'Not a number!';
                                                    return x1+x2;
                                                })();
                                                return (v1741 = v1747);
                                            })();
                                        })(l151.fvalue(pv, 2, v1741, v1737));
                                    }return l5.value;
                                })();
                            })();
                            (function(){
                                var v1748 = l489.fvalue(pv, 2, l598, (function(){
                                    var symbol = l113;
                                    var value = symbol.value;
                                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                    return value;
                                })());
                                var v1749 = ({car: v1748, cdr: v1740});
                                return (v1740 = v1749);
                            })();
                            return l117.fvalue(pv, 1, l49.fvalue(pv, 1, v1740));
                        })();
                    })(l5.value,0), l599, (function(){
                        var symbol = l113;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })()) : l5.value);
                })();
            })();
        });
        func.fname = 'COMPILE-LAMBDA-OPTIONAL';
        return func;
    })();
    return l590;
})();
var l600 = (new Symbol(make_lisp_string("COMPILE-LAMBDA-REST")));
var l601 = make_lisp_string("var ");
var l602 = make_lisp_string("= ");
var l603 = make_lisp_string(";");
var l604 = make_lisp_string("for (var i = nargs-1; i>=");
var l605 = make_lisp_string("; i--)");
var l606 = make_lisp_string(" = {car: arguments[i+2], cdr: ");
var l607 = make_lisp_string("};");
(function(){
    (l600).fvalue = (function(){
        var func = (function (values,nargs,v1750){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v1752,v1753,v1754){
                    return (v1754 !== l5.value ? (function(v1755){
                        return l489.fvalue(values, 11, l601, v1755, l602, l494.fvalue(pv, 1, l5.value), l603, (function(){
                            var symbol = l113;
                            var value = symbol.value;
                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                            return value;
                        })(), l604, (function(){
                            var x1 = v1752;
                            if (typeof x1 !== 'number') throw 'Not a number!';
                            var x2 = v1753;
                            if (typeof x2 !== 'number') throw 'Not a number!';
                            return x1+x2;
                        })(), l605, (function(){
                            var symbol = l113;
                            var value = symbol.value;
                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                            return value;
                        })(), l498.fvalue(pv, 5, v1755, l606, v1755, l607, (function(){
                            var symbol = l113;
                            var value = symbol.value;
                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                            return value;
                        })()));
                    })(l536.fvalue(pv, 1, v1754)) : l5.value);
                })(l54.fvalue(pv, 1, l563.fvalue(pv, 1, v1750)),l54.fvalue(pv, 1, l565.fvalue(pv, 1, v1750)),l566.fvalue(pv, 1, v1750));
            })();
        });
        func.fname = 'COMPILE-LAMBDA-REST';
        return func;
    })();
    return l600;
})();
var l608 = (new Symbol(make_lisp_string("COMPILE-LAMBDA-PARSE-KEYWORDS")));
var l609 = make_lisp_string("var ");
var l610 = make_lisp_string("; ");
var l611 = make_lisp_string("var ");
var l612 = make_lisp_string(" = ");
var l613 = make_lisp_string(";");
var l614 = make_lisp_string("for (i=");
var l615 = make_lisp_string("; i<nargs; i+=2){");
var l616 = make_lisp_string("if (arguments[i+2] === ");
var l617 = make_lisp_string("){");
var l618 = make_lisp_string(" = arguments[i+3];");
var l619 = make_lisp_string(" = ");
var l620 = make_lisp_string(";");
var l621 = make_lisp_string("break;");
var l622 = make_lisp_string("}");
var l623 = make_lisp_string("}");
var l624 = make_lisp_string("if (i == nargs){");
var l625 = make_lisp_string(" = ");
var l626 = make_lisp_string(";");
var l627 = make_lisp_string("}");
var l628 = make_lisp_string("var i;");
var l629 = make_lisp_string("for (i=");
var l630 = make_lisp_string("; i<nargs; i+=2){");
var l631 = make_lisp_string("if (");
var l632 = make_lisp_string("arguments[i+2] !== ");
var l633 = make_lisp_string(" && ");
var l634 = make_lisp_string(")");
var l635 = make_lisp_string("throw 'Unknown keyword argument ' + xstring(arguments[i].name);");
var l636 = make_lisp_string("}");
(function(){
    (l608).fvalue = (function(){
        var func = (function (values,nargs,v1756){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v1758,v1759,v1760){
                    return l489.fvalue(values, 3, l119.fvalue(pv, 2, (function (values,nargs,v1761){
                        checkArgs(nargs, 1);
                        return (function(v1762){
                            return l489.fvalue(values, 5, l609, l536.fvalue(pv, 1, v1762), l610, (function(){
                                var symbol = l113;
                                var value = symbol.value;
                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                return value;
                            })(), (l136.fvalue(pv, 1, v1761) !== l5.value ? l489.fvalue(pv, 6, l611, l536.fvalue(pv, 1, l136.fvalue(pv, 1, v1761)), l612, l494.fvalue(pv, 1, l5.value), l613, (function(){
                                var symbol = l113;
                                var value = symbol.value;
                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                return value;
                            })()) : l5.value));
                        })(l134.fvalue(pv, 1, (function(){
                            var tmp = v1761;
                            return tmp === l5.value? l5.value: tmp.car;
                        })()));
                    }), v1760), (function(v1766){
                        return (v1760 !== l5.value ? l489.fvalue(pv, 3, l628, (function(){
                            var symbol = l113;
                            var value = symbol.value;
                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                            return value;
                        })(), l119.fvalue(pv, 2, v1766, v1760)) : l5.value);
                    })((function (values,nargs,v1763){
                        checkArgs(nargs, 1);
                        return (function(){
                            return l489.fvalue(values, 12, l614, (function(){
                                var x1 = v1758;
                                if (typeof x1 !== 'number') throw 'Not a number!';
                                var x2 = v1759;
                                if (typeof x2 !== 'number') throw 'Not a number!';
                                return x1+x2;
                            })(), l615, (function(){
                                var symbol = l113;
                                var value = symbol.value;
                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                return value;
                            })(), l498.fvalue(pv, 7, l616, l494.fvalue(pv, 1, l152.fvalue(pv, 1, v1763)), l617, (function(){
                                var symbol = l113;
                                var value = symbol.value;
                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                return value;
                            })(), l498.fvalue(pv, 6, l536.fvalue(pv, 1, l135.fvalue(pv, 1, (function(){
                                var tmp = v1763;
                                return tmp === l5.value? l5.value: tmp.car;
                            })())), l618, (function(){
                                var symbol = l113;
                                var value = symbol.value;
                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                return value;
                            })(), (function(v1765){
                                return (v1765 !== l5.value ? l489.fvalue(pv, 5, l536.fvalue(pv, 1, v1765), l619, l494.fvalue(pv, 1, l4.value), l620, (function(){
                                    var symbol = l113;
                                    var value = symbol.value;
                                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                    return value;
                                })()) : l5.value);
                            })(l136.fvalue(pv, 1, v1763)), l621, (function(){
                                var symbol = l113;
                                var value = symbol.value;
                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                return value;
                            })()), l622, (function(){
                                var symbol = l113;
                                var value = symbol.value;
                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                return value;
                            })()), l623, (function(){
                                var symbol = l113;
                                var value = symbol.value;
                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                return value;
                            })(), l624, (function(){
                                var symbol = l113;
                                var value = symbol.value;
                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                return value;
                            })(), l498.fvalue(pv, 5, l536.fvalue(pv, 1, l135.fvalue(pv, 1, (function(){
                                var tmp = v1763;
                                return tmp === l5.value? l5.value: tmp.car;
                            })())), l625, l494.fvalue(pv, 1, l135.fvalue(pv, 1, v1763)), l626, (function(){
                                var symbol = l113;
                                var value = symbol.value;
                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                return value;
                            })()), l627, (function(){
                                var symbol = l113;
                                var value = symbol.value;
                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                return value;
                            })());
                        })();
                    })), (v1760 !== l5.value ? l489.fvalue(pv, 7, l629, (function(){
                        var x1 = v1758;
                        if (typeof x1 !== 'number') throw 'Not a number!';
                        var x2 = v1759;
                        if (typeof x2 !== 'number') throw 'Not a number!';
                        return x1+x2;
                    })(), l630, (function(){
                        var symbol = l113;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })(), l498.fvalue(pv, 5, l631, l117.fvalue(pv, 2, l120.fvalue(pv, 2, (function (values,nargs,v1767){
                        checkArgs(nargs, 1);
                        return l107.fvalue(values, 2, l632, l494.fvalue(pv, 1, l152.fvalue(pv, 1, v1767)));
                    }), v1760), l633), l634, (function(){
                        var symbol = l113;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })(), l498.fvalue(pv, 2, l635, (function(){
                        var symbol = l113;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })())), l636, (function(){
                        var symbol = l113;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })()) : l5.value));
                })(l54.fvalue(pv, 1, l563.fvalue(pv, 1, v1756)),l54.fvalue(pv, 1, l565.fvalue(pv, 1, v1756)),l568.fvalue(pv, 1, v1756));
            })();
        });
        func.fname = 'COMPILE-LAMBDA-PARSE-KEYWORDS';
        return func;
    })();
    return l608;
})();
var l637 = (new Symbol(make_lisp_string("PARSE-LAMBDA-LIST")));
(function(){
    (l637).fvalue = (function(){
        var func = (function (values,nargs,v1768){
            checkArgs(nargs, 1);
            return (function(){
                return values(l563.fvalue(pv, 1, v1768), l565.fvalue(pv, 1, v1768), l570.fvalue(pv, 1, v1768), l566.fvalue(pv, 1, v1768));
            })();
        });
        func.fname = 'PARSE-LAMBDA-LIST';
        return func;
    })();
    return l637;
})();
var l638 = (new Symbol(make_lisp_string("PARSE-BODY")));
var l639 = (new Symbol(make_lisp_string("DOCSTRING"), make_lisp_string("KEYWORD")));
l639.value = l639;
(function(){
    (l638).fvalue = (function(){
        var func = (function (values,nargs,v1770){
            checkArgsAtLeast(nargs, 1);
            var v1771; 
            var v1772; 
            var i;
            for (i=1; i<nargs; i+=2){
                if (arguments[i+2] === l506.value){
                    v1771 = arguments[i+3];
                    break;
                }
            }
            if (i == nargs){
                v1771 = l5.value;
            }
            for (i=1; i<nargs; i+=2){
                if (arguments[i+2] === l639.value){
                    v1772 = arguments[i+3];
                    break;
                }
            }
            if (i == nargs){
                v1772 = l5.value;
            }
            for (i=1; i<nargs; i+=2){
                if (arguments[i+2] !== l506.value && arguments[i+2] !== l639.value)
                    throw 'Unknown keyword argument ' + xstring(arguments[i].name);
            }
            return (function(){
                return (function(v1774,v1775){
                    (v1771 !== l5.value ? (function(){
                        return (function(){
                            var v1777 = v1770;
                            var v1778 = (function(){
                                var tmp = v1777;
                                return tmp === l5.value? l5.value: tmp.car;
                            })();
                            return (function(){
                                try {
                                var v1779 = [];
                                    return (function(){
                                        while(l4.value !== l5.value){
                                            ((function(v1780){
                                                return (v1780 !== l5.value ? v1780 : l28.fvalue(pv, 1, (((function(){
                                                    var tmp = v1778;
                                                    return tmp === l5.value? l5.value: tmp.car;
                                                })() === l473)?l4.value: l5.value)));
                                            })(l69.fvalue(pv, 1, v1778)) !== l5.value ? (function(){
                                                throw ({type: 'block', id: v1779, values: (function(){
                                                    return (function(){
                                                        var func = (function (values,nargs,v1782){
                                                            switch(nargs){
                                                            case 0:
                                                                v1782=l5.value;
                                                            default: break;
                                                            }
                                                            var v1781= l5.value;
                                                            for (var i = nargs-1; i>=1; i--)
                                                                v1781 = {car: arguments[i+2], cdr: v1781};
                                                            return (v1770 = v1782);
                                                        });
                                                        var args = [pv, 0];
                                                        return (function(){
                                                            var values = mv;
                                                            var vs;
                                                            vs = v1777;
                                                            if (typeof vs === 'object' && 'multiple-value' in vs)
                                                                args = args.concat(vs);
                                                            else
                                                                args.push(vs);
                                                            args[1] = args.length-2;
                                                            return func.apply(window, args);
                                                        })();
                                                    })();
                                                })(), message: 'Return from unknown block NIL.'})
                                            })() : l5.value);
                                            (function(){
                                                (function(){
                                                    var v1783 = v1778;
                                                    var v1784 = ({car: v1783, cdr: v1774});
                                                    return (v1774 = v1784);
                                                })();
                                                return l5.value;
                                            })();
                                            (v1777 = (function(){
                                                var tmp = v1777;
                                                return tmp === l5.value? l5.value: tmp.cdr;
                                            })(), v1778 = (function(){
                                                var tmp = v1777;
                                                return tmp === l5.value? l5.value: tmp.car;
                                            })());
                                        }return l5.value;
                                    })();
                                }
                                catch (cf){
                                    if (cf.type == 'block' && cf.id == v1779)
                                        return cf.values;
                                    else
                                        throw cf;
                                }
                            })();
                        })();
                    })() : l5.value);
                    ((v1772 !== l5.value ? (((function(){
                        var x = (function(){
                            var tmp = v1770;
                            return tmp === l5.value? l5.value: tmp.car;
                        })();
                        return typeof(x) == 'object' && 'length' in x && x.type == 'character';
                    })()?l4.value: l5.value) !== l5.value ? l28.fvalue(pv, 1, l44.fvalue(pv, 1, (function(){
                        var tmp = v1770;
                        return tmp === l5.value? l5.value: tmp.cdr;
                    })())) : l5.value) : l5.value) !== l5.value ? (function(){
                        (v1775 = (function(){
                            var tmp = v1770;
                            return tmp === l5.value? l5.value: tmp.car;
                        })());
                        return (v1770 = (function(){
                            var tmp = v1770;
                            return tmp === l5.value? l5.value: tmp.cdr;
                        })());
                    })() : l5.value);
                    return values(v1770, v1774, v1775);
                })(l5.value,l5.value);
            })();
        });
        func.fname = 'PARSE-BODY';
        return func;
    })();
    return l638;
})();
var l640 = (new Symbol(make_lisp_string("COMPILE-LAMBDA")));
var l641 = make_lisp_string("(function (");
var l642 = make_lisp_string("values");
var l643 = make_lisp_string("nargs");
var l644 = make_lisp_string(",");
var l645 = make_lisp_string("){");
var l646 = (new Symbol(make_lisp_string("LS-COMPILE-BLOCK")));
var l647 = make_lisp_string("})");
(function(){
    (l640).fvalue = (function(){
        var func = (function (values,nargs,v1785,v1786){
            checkArgsAtLeast(nargs, 2);
            var v1787; 
            var v1788; 
            var i;
            for (i=2; i<nargs; i+=2){
                if (arguments[i+2] === l503.value){
                    v1787 = arguments[i+3];
                    break;
                }
            }
            if (i == nargs){
                v1787 = l5.value;
            }
            for (i=2; i<nargs; i+=2){
                if (arguments[i+2] === l517.value){
                    v1788 = arguments[i+3];
                    break;
                }
            }
            if (i == nargs){
                v1788 = l5.value;
            }
            for (i=2; i<nargs; i+=2){
                if (arguments[i+2] !== l503.value && arguments[i+2] !== l517.value)
                    throw 'Unknown keyword argument ' + xstring(arguments[i].name);
            }
            return (function(){
                return (function(){
                    var func = (function (values,nargs,v1791,v1792,v1793,v1794){
                        switch(nargs){
                        case 0:
                            v1791=l5.value;
                        case 1:
                            v1792=l5.value;
                        case 2:
                            v1793=l5.value;
                        case 3:
                            v1794=l5.value;
                        default: break;
                        }
                        var v1790= l5.value;
                        for (var i = nargs-1; i>=4; i--)
                            v1790 = {car: arguments[i+2], cdr: v1790};
                        return (function(){
                            var func = (function (values,nargs,v1796,v1797,v1798){
                                switch(nargs){
                                case 0:
                                    v1796=l5.value;
                                case 1:
                                    v1797=l5.value;
                                case 2:
                                    v1798=l5.value;
                                default: break;
                                }
                                var v1795= l5.value;
                                for (var i = nargs-1; i>=3; i--)
                                    v1795 = {car: arguments[i+2], cdr: v1795};
                                return (function(v1799,v1800,v1801){
                                    try {
                                        var tmp;
                                        tmp = l532.value;
                                        l532.value = v1801;
                                        v1801 = tmp;
                                        return l572.fvalue(values, 8, v1787, v1798, l641, l117.fvalue(pv, 2, l148.fvalue(pv, 3, l642, l643, l120.fvalue(pv, 2, (function(){
                                            var symbol = l536;
                                            var func = symbol.fvalue;
                                            if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                                            return func;
                                        })(), l46.fvalue(pv, 2, v1791, v1792))), l644), l645, (function(){
                                            var symbol = l113;
                                            var value = symbol.value;
                                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                            return value;
                                        })(), l498.fvalue(pv, 5, l582.fvalue(pv, 3, v1799, v1800, (function(v1802){
                                            return (v1802 !== l5.value ? v1802 : v1793);
                                        })(v1794)), l590.fvalue(pv, 1, v1785), l600.fvalue(pv, 1, v1785), l608.fvalue(pv, 1, v1785), (function(v1803){
                                            try {
                                                var tmp;
                                                tmp = l501.value;
                                                l501.value = v1803;
                                                v1803 = tmp;
                                                return (v1788 !== l5.value ? l646.fvalue(pv, 2, l92.fvalue(pv, 1, l148.fvalue(pv, 3, l528, v1788, v1796)), l4.value) : l646.fvalue(pv, 2, v1796, l4.value));
                                            }
                                            finally {
                                                l501.value = v1803;
                                            }
                                        })(l4.value)), l647);
                                    }
                                    finally {
                                        l532.value = v1801;
                                    }
                                })(l54.fvalue(pv, 1, v1791),l54.fvalue(pv, 1, v1792),l537.fvalue(pv, 1, l46.fvalue(pv, 5, l116.fvalue(pv, 1, v1794), v1791, v1792, v1793, l571.fvalue(pv, 1, v1785))));
                            });
                            var args = [values, 0];
                            return (function(){
                                var values = mv;
                                var vs;
                                vs = l638.fvalue(values, 5, v1786, l506.value, l4.value, l639.value, l4.value);
                                if (typeof vs === 'object' && 'multiple-value' in vs)
                                    args = args.concat(vs);
                                else
                                    args.push(vs);
                                args[1] = args.length-2;
                                return func.apply(window, args);
                            })();
                        })();
                    });
                    var args = [values, 0];
                    return (function(){
                        var values = mv;
                        var vs;
                        vs = l637.fvalue(values, 1, v1785);
                        if (typeof vs === 'object' && 'multiple-value' in vs)
                            args = args.concat(vs);
                        else
                            args.push(vs);
                        args[1] = args.length-2;
                        return func.apply(window, args);
                    })();
                })();
            })();
        });
        func.fname = 'COMPILE-LAMBDA';
        return func;
    })();
    return l640;
})();
var l648 = (new Symbol(make_lisp_string("SETQ-PAIR")));
var l649 = make_lisp_string(" = ");
var l650 = (new Symbol(make_lisp_string("SET")));
(function(){
    (l648).fvalue = (function(){
        var func = (function (values,nargs,v1804,v1805){
            checkArgs(nargs, 2);
            return (function(){
                return (function(v1807){
                    return ((v1807 !== l5.value ? (((l512.fvalue(pv, 1, v1807) === l84)?l4.value: l5.value) !== l5.value ? (l28.fvalue(pv, 1, l191.fvalue(pv, 2, l547, l514.fvalue(pv, 1, v1807))) !== l5.value ? l28.fvalue(pv, 1, l191.fvalue(pv, 2, l549, l514.fvalue(pv, 1, v1807))) : l5.value) : l5.value) : l5.value) !== l5.value ? l489.fvalue(values, 3, l513.fvalue(pv, 1, v1807), l649, l494.fvalue(pv, 1, v1805)) : ((v1807 !== l5.value ? ((l512.fvalue(pv, 1, v1807) === l543)?l4.value: l5.value) : l5.value) !== l5.value ? l494.fvalue(values, 1, l92.fvalue(pv, 3, l98, v1804, v1805)) : l494.fvalue(values, 1, l92.fvalue(pv, 3, l650, l92.fvalue(pv, 2, l389, v1804), v1805))));
                })(l527.fvalue(pv, 3, v1804, (function(){
                    var symbol = l532;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l84));
            })();
        });
        func.fname = 'SETQ-PAIR';
        return func;
    })();
    return l648;
})();
var l651 = make_lisp_string("Odd pairs in SETQ");
var l652 = make_lisp_string(", ");
var l653 = make_lisp_string("(");
var l654 = make_lisp_string(")");
(function(){
    var v1808 = l92.fvalue(pv, 2, l93, (function (values,nargs){
        var v1809= l5.value;
        for (var i = nargs-1; i>=0; i--)
            v1809 = {car: arguments[i+2], cdr: v1809};
        return (function(){
            return (function(v1811){
                (function(){
                    try {
                    var v1812 = [];
                        return (function(){
                            while(l4.value !== l5.value){
                                (l44.fvalue(pv, 1, v1809) !== l5.value ? (function(){
                                    throw ({type: 'block', id: v1812, values: l5.value, message: 'Return from unknown block NIL.'})
                                })() : (l44.fvalue(pv, 1, (function(){
                                    var tmp = v1809;
                                    return tmp === l5.value? l5.value: tmp.cdr;
                                })()) !== l5.value ? l78.fvalue(pv, 1, l651) : (function(){
                                    (v1811 = l107.fvalue(pv, 2, v1811, l107.fvalue(pv, 2, l648.fvalue(pv, 2, (function(){
                                        var tmp = v1809;
                                        return tmp === l5.value? l5.value: tmp.car;
                                    })(), l135.fvalue(pv, 1, v1809)), (l44.fvalue(pv, 1, l149.fvalue(pv, 1, v1809)) !== l5.value ? l108 : l652))));
                                    return (v1809 = l149.fvalue(pv, 1, v1809));
                                })()));
                            }return l5.value;
                        })();
                    }
                    catch (cf){
                        if (cf.type == 'block' && cf.id == v1812)
                            return cf.values;
                        else
                            throw cf;
                    }
                })();
                return l489.fvalue(values, 3, l653, v1811, l654);
            })(l108);
        })();
    }));
    var v1813 = ({car: v1808, cdr: (function(){
        var symbol = l552;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l552).value = v1813);
})();
var l655 = make_lisp_string("\\");
var l656 = make_lisp_string("\\");
(function(){
    (l254).fvalue = (function(){
        var func = (function (values,nargs,v1814){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v1816,v1817,v1818){
                    (function(){
                        return (function(){
                            while((function(){
                                var x1 = v1817;
                                if (typeof x1 !== 'number') throw 'Not a number!';
                                var x2 = v1818;
                                if (typeof x2 !== 'number') throw 'Not a number!';
                                return (x1<x2?l4.value: l5.value);
                            })() !== l5.value){
                                (function(v1820){
                                    ((function(v1821){
                                        return (v1821 !== l5.value ? v1821 : l64.fvalue(pv, 2, v1820, "\\"));
                                    })(l64.fvalue(pv, 2, v1820, "\"")) !== l5.value ? (v1816 = l107.fvalue(pv, 2, v1816, l655)) : l5.value);
                                    (l64.fvalue(pv, 2, v1820, "\n") !== l5.value ? (function(){
                                        (v1816 = l107.fvalue(pv, 2, v1816, l656));
                                        return (v1820 = "n");
                                    })() : l5.value);
                                    return (v1816 = l107.fvalue(pv, 2, v1816, l125.fvalue(pv, 1, v1820)));
                                })(v1814[v1817]);
                                (function(){
                                    var v1822 = 1;
                                    var v1823 = (function(){
                                        var x1 = v1817;
                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                        var x2 = v1822;
                                        if (typeof x2 !== 'number') throw 'Not a number!';
                                        return x1+x2;
                                    })();
                                    return (v1817 = v1823);
                                })();
                            }return l5.value;
                        })();
                    })();
                    return v1816;
                })(l108,0,l54.fvalue(pv, 1, v1814));
            })();
        });
        func.fname = 'ESCAPE-STRING';
        return func;
    })();
    return l254;
})();
var l657 = (new Symbol(make_lisp_string("*MAGIC-UNQUOTE-MARKER*")));
var l658 = make_lisp_string("MAGIC-UNQUOTE");
(function(){
    (((l657.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l657).value = l15.fvalue(pv, 1, l658)));
    return l657;
})();
var l659 = (new Symbol(make_lisp_string("*LITERAL-TABLE*")));
(function(){
    (((l659.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l659).value = l5.value));
    return l659;
})();
var l660 = (new Symbol(make_lisp_string("*LITERAL-COUNTER*")));
(function(){
    (((l660.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l660).value = 0));
    return l660;
})();
var l661 = (new Symbol(make_lisp_string("GENLIT")));
var l662 = make_lisp_string("l");
(function(){
    (l661).fvalue = (function(){
        var func = (function (values,nargs){
            checkArgsAtMost(nargs, 0);
            return (function(){
                return l489.fvalue(values, 2, l662, (function(){
                    var v1825 = 1;
                    var v1826 = (function(){
                        var x1 = (function(){
                            var symbol = l660;
                            var value = symbol.value;
                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                            return value;
                        })();
                        if (typeof x1 !== 'number') throw 'Not a number!';
                        var x2 = v1825;
                        if (typeof x2 !== 'number') throw 'Not a number!';
                        return x1+x2;
                    })();
                    return ((l660).value = v1826);
                })());
            })();
        });
        func.fname = 'GENLIT';
        return func;
    })();
    return l661;
})();
var l663 = (new Symbol(make_lisp_string("DUMP-SYMBOL")));
var l664 = make_lisp_string("(new Symbol(");
var l665 = (new Symbol(make_lisp_string("DUMP-STRING")));
var l666 = make_lisp_string("))");
(function(){
    (l663).fvalue = (function(){
        var func = (function (values,nargs,v1827){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v1829){
                    return (l44.fvalue(pv, 1, v1829) !== l5.value ? l489.fvalue(values, 3, l664, l665.fvalue(pv, 1, (v1827).name), l666) : l494.fvalue(values, 1, l92.fvalue(pv, 3, l313, (v1827).name, l246.fvalue(pv, 1, v1829))));
                })(l237.fvalue(pv, 1, v1827));
            })();
        });
        func.fname = 'DUMP-SYMBOL';
        return func;
    })();
    return l663;
})();
var l667 = (new Symbol(make_lisp_string("DUMP-CONS")));
var l668 = make_lisp_string("QIList(");
var l669 = (new Symbol(make_lisp_string("LITERAL")));
var l670 = make_lisp_string(",");
var l671 = make_lisp_string(",");
var l672 = make_lisp_string(")");
(function(){
    (l667).fvalue = (function(){
        var func = (function (values,nargs,v1830){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v1832,v1833){
                    return l489.fvalue(values, 6, l668, l118.fvalue(pv, 2, l120.fvalue(pv, 2, (function (values,nargs,v1834){
                        checkArgs(nargs, 1);
                        return l669.fvalue(values, 2, v1834, l4.value);
                    }), v1832), l670), l669.fvalue(pv, 2, (function(){
                        var tmp = v1833;
                        return tmp === l5.value? l5.value: tmp.car;
                    })(), l4.value), l671, l669.fvalue(pv, 2, (function(){
                        var tmp = v1833;
                        return tmp === l5.value? l5.value: tmp.cdr;
                    })(), l4.value), l672);
                })(l190.fvalue(pv, 1, v1830),l189.fvalue(pv, 1, v1830));
            })();
        });
        func.fname = 'DUMP-CONS';
        return func;
    })();
    return l667;
})();
var l673 = (new Symbol(make_lisp_string("DUMP-ARRAY")));
var l674 = make_lisp_string("[");
var l675 = make_lisp_string(", ");
var l676 = make_lisp_string("]");
(function(){
    (l673).fvalue = (function(){
        var func = (function (values,nargs,v1835){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v1837){
                    return l107.fvalue(values, 3, l674, l117.fvalue(pv, 2, l120.fvalue(pv, 2, (function(){
                        var symbol = l669;
                        var func = symbol.fvalue;
                        if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                        return func;
                    })(), v1837), l675), l676);
                })(l121.fvalue(pv, 1, v1835));
            })();
        });
        func.fname = 'DUMP-ARRAY';
        return func;
    })();
    return l673;
})();
var l677 = make_lisp_string("make_lisp_string(\"");
var l678 = make_lisp_string("\")");
(function(){
    (l665).fvalue = (function(){
        var func = (function (values,nargs,v1838){
            checkArgs(nargs, 1);
            return (function(){
                return l489.fvalue(values, 3, l677, l254.fvalue(pv, 1, v1838), l678);
            })();
        });
        func.fname = 'DUMP-STRING';
        return func;
    })();
    return l665;
})();
var l679 = make_lisp_string("\"");
var l680 = make_lisp_string("\"");
var l681 = make_lisp_string("var ");
var l682 = make_lisp_string(" = ");
var l683 = make_lisp_string(".value = ");
(function(){
    (l669).fvalue = (function(){
        var func = (function (values,nargs,v1840,v1841){
            checkArgsAtLeast(nargs, 1);
            checkArgsAtMost(nargs, 2);
            switch(nargs){
            case 1:
                v1841=l5.value;
            default: break;
            }
            return (function(){
                return (l65.fvalue(pv, 1, v1840) !== l5.value ? l17.fvalue(values, 1, v1840) : (l66.fvalue(pv, 1, v1840) !== l5.value ? (function(){
                    var x = v1840;
                    if (typeof x != 'number')
                        throw 'The value ' + x + ' is not a type number.';
                    return make_lisp_string(x.toString());
                })() : (((function(){
                    var x = v1840;
                    return (typeof(v1840) == "string") && x.length == 1;
                })()?l4.value: l5.value) !== l5.value ? l489.fvalue(values, 3, l679, l254.fvalue(pv, 1, l125.fvalue(pv, 1, v1840)), l680) : (function(v1843){
                    return (v1843 !== l5.value ? v1843 : (function(v1845){
                        return ((v1841 !== l5.value ? l28.fvalue(pv, 1, ((v1840 instanceof Symbol)?l4.value: l5.value)) : l5.value) !== l5.value ? v1845 : (function(v1846){
                            (function(){
                                var v1847 = ({car: v1840, cdr: v1846});
                                var v1848 = ({car: v1847, cdr: (function(){
                                    var symbol = l659;
                                    var value = symbol.value;
                                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                    return value;
                                })()});
                                return ((l659).value = v1848);
                            })();
                            l539.fvalue(pv, 1, l489.fvalue(pv, 4, l681, v1846, l682, v1845));
                            (l302.fvalue(pv, 1, v1840) !== l5.value ? l539.fvalue(pv, 1, l489.fvalue(pv, 3, v1846, l683, v1846)) : l5.value);
                            return v1846;
                        })(l661.fvalue(pv, 0)));
                    })((function(v1844){
                        return (((v1844 instanceof Symbol)?l4.value: l5.value) !== l5.value ? l663.fvalue(pv, 1, v1840) : (((function(){
                            var x = v1844;
                            return typeof(x) == 'object' && 'length' in x && x.type == 'character';
                        })()?l4.value: l5.value) !== l5.value ? l665.fvalue(pv, 1, v1840) : (((function(){
                            var tmp = v1844;
                            return (typeof tmp == 'object' && 'car' in tmp);
                        })()?l4.value: l5.value) !== l5.value ? ((((function(){
                            var tmp = v1840;
                            return tmp === l5.value? l5.value: tmp.car;
                        })() === (function(){
                            var symbol = l657;
                            var value = symbol.value;
                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                            return value;
                        })())?l4.value: l5.value) !== l5.value ? l494.fvalue(pv, 1, l134.fvalue(pv, 1, v1840)) : l667.fvalue(pv, 1, v1840)) : (((function(){
                            var x = v1844;
                            return typeof x === 'object' && 'length' in x;
                        })()?l4.value: l5.value) !== l5.value ? l673.fvalue(pv, 1, v1840) : l5.value))));
                    })(v1840)));
                })((function(){
                    var tmp = l95.fvalue(pv, 4, v1840, (function(){
                        var symbol = l659;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })(), l177.value, (function(){
                        var symbol = l27;
                        var func = symbol.fvalue;
                        if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                        return func;
                    })());
                    return tmp === l5.value? l5.value: tmp.cdr;
                })()))));
            })();
        });
        func.fname = 'LITERAL';
        return func;
    })();
    return l669;
})();
(function(){
    var v1849 = l92.fvalue(pv, 2, l389, (function (values,nargs,v1850){
        checkArgs(nargs, 1);
        return (function(){
            return l669.fvalue(values, 1, v1850);
        })();
    }));
    var v1852 = ({car: v1849, cdr: (function(){
        var symbol = l552;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l552).value = v1852);
})();
var l684 = (new Symbol(make_lisp_string("%WHILE")));
var l685 = make_lisp_string("while(");
var l686 = make_lisp_string(" !== ");
var l687 = make_lisp_string("){");
var l688 = make_lisp_string("}");
var l689 = make_lisp_string("return ");
var l690 = make_lisp_string(";");
(function(){
    var v1853 = l92.fvalue(pv, 2, l684, (function (values,nargs,v1855){
        checkArgsAtLeast(nargs, 1);
        var v1854= l5.value;
        for (var i = nargs-1; i>=1; i--)
            v1854 = {car: arguments[i+2], cdr: v1854};
        return (function(){
            return l489.fvalue(values, 4, l573, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })(), l498.fvalue(pv, 12, l685, l494.fvalue(pv, 1, v1855), l686, l494.fvalue(pv, 1, l5.value), l687, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })(), l498.fvalue(pv, 1, l646.fvalue(pv, 1, v1854)), l688, l689, l494.fvalue(pv, 1, l5.value), l690, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })()), l581);
        })();
    }));
    var v1857 = ({car: v1853, cdr: (function(){
        var symbol = l552;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l552).value = v1857);
})();
var l691 = (new Symbol(make_lisp_string("NAMED-LAMBDA")));
var l692 = (new Symbol(make_lisp_string("SYMBOL-FUNCTION")));
(function(){
    var v1858 = l92.fvalue(pv, 2, l82, (function (values,nargs,v1859){
        checkArgs(nargs, 1);
        return (function(){
            return ((l56.fvalue(pv, 1, v1859) !== l5.value ? (((function(){
                var tmp = v1859;
                return tmp === l5.value? l5.value: tmp.car;
            })() === l6)?l4.value: l5.value) : l5.value) !== l5.value ? l640.fvalue(values, 2, l135.fvalue(pv, 1, v1859), l149.fvalue(pv, 1, v1859)) : ((l56.fvalue(pv, 1, v1859) !== l5.value ? (((function(){
                var tmp = v1859;
                return tmp === l5.value? l5.value: tmp.car;
            })() === l691)?l4.value: l5.value) : l5.value) !== l5.value ? (function(v1861,v1862,v1863){
                return l640.fvalue(values, 6, v1862, v1863, l503.value, (v1861).name, l517.value, v1861);
            })(l135.fvalue(pv, 1, v1859),l137.fvalue(pv, 1, v1859),l160.fvalue(pv, 1, v1859)) : (((v1859 instanceof Symbol)?l4.value: l5.value) !== l5.value ? (function(v1864){
                return (v1864 !== l5.value ? l513.fvalue(values, 1, v1864) : l494.fvalue(values, 1, l92.fvalue(pv, 2, l692, l92.fvalue(pv, 2, l389, v1859))));
            })(l527.fvalue(pv, 3, v1859, (function(){
                var symbol = l532;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })(), l82)) : l5.value)));
        })();
    }));
    var v1865 = ({car: v1858, cdr: (function(){
        var symbol = l552;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l552).value = v1865);
})();
var l693 = (new Symbol(make_lisp_string("MAKE-FUNCTION-BINDING")));
(function(){
    (l693).fvalue = (function(){
        var func = (function (values,nargs,v1866){
            checkArgs(nargs, 1);
            return (function(){
                return l502.fvalue(values, 6, l503.value, v1866, l504.value, l82, l505.value, l534.fvalue(pv, 1, v1866));
            })();
        });
        func.fname = 'MAKE-FUNCTION-BINDING';
        return func;
    })();
    return l693;
})();
var l694 = (new Symbol(make_lisp_string("COMPILE-FUNCTION-DEFINITION")));
(function(){
    (l694).fvalue = (function(){
        var func = (function (values,nargs,v1868){
            checkArgs(nargs, 1);
            return (function(){
                return l640.fvalue(values, 2, (function(){
                    var tmp = v1868;
                    return tmp === l5.value? l5.value: tmp.car;
                })(), (function(){
                    var tmp = v1868;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })());
            })();
        });
        func.fname = 'COMPILE-FUNCTION-DEFINITION';
        return func;
    })();
    return l694;
})();
var l695 = (new Symbol(make_lisp_string("TRANSLATE-FUNCTION")));
(function(){
    (l695).fvalue = (function(){
        var func = (function (values,nargs,v1870){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v1872){
                    return (v1872 !== l5.value ? l513.fvalue(values, 1, v1872) : l5.value);
                })(l527.fvalue(pv, 3, v1870, (function(){
                    var symbol = l532;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l82));
            })();
        });
        func.fname = 'TRANSLATE-FUNCTION';
        return func;
    })();
    return l695;
})();
var l696 = (new Symbol(make_lisp_string("FLET")));
var l697 = make_lisp_string("(function(");
var l698 = make_lisp_string(",");
var l699 = make_lisp_string("){");
var l700 = make_lisp_string("})(");
var l701 = make_lisp_string(",");
var l702 = make_lisp_string(")");
(function(){
    var v1873 = l92.fvalue(pv, 2, l696, (function (values,nargs,v1875){
        checkArgsAtLeast(nargs, 1);
        var v1874= l5.value;
        for (var i = nargs-1; i>=1; i--)
            v1874 = {car: arguments[i+2], cdr: v1874};
        return (function(){
            return (function(){
                try {
                    var v1881 = l532.value;
                    var v1877 = l120.fvalue(pv, 2, (function(){
                        var symbol = l131;
                        var func = symbol.fvalue;
                        if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                        return func;
                    })(), v1875);
                    var v1878 = l120.fvalue(pv, 2, (function (values,nargs,v1879){
                        checkArgs(nargs, 1);
                        return l640.fvalue(values, 2, l135.fvalue(pv, 1, v1879), l92.fvalue(pv, 1, l148.fvalue(pv, 3, l528, (function(){
                            var tmp = v1879;
                            return tmp === l5.value? l5.value: tmp.car;
                        })(), l149.fvalue(pv, 1, v1879))));
                    }), v1875);
                    ((l532).value = l531.fvalue(pv, 3, l120.fvalue(pv, 2, (function(){
                        var symbol = l693;
                        var func = symbol.fvalue;
                        if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                        return func;
                    })(), v1877), (function(){
                        var symbol = l532;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })(), l82));
                    return l489.fvalue(values, 8, l697, l117.fvalue(pv, 2, l120.fvalue(pv, 2, (function(){
                        var symbol = l695;
                        var func = symbol.fvalue;
                        if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                        return func;
                    })(), v1877), l698), l699, (function(){
                        var symbol = l113;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })(), (function(v1880){
                        return l498.fvalue(pv, 1, v1880);
                    })(l646.fvalue(pv, 2, v1874, l4.value)), l700, l117.fvalue(pv, 2, v1878, l701), l702);
                }
                finally {
                    l532.value = v1881;
                }
            })();
        })();
    }));
    var v1882 = ({car: v1873, cdr: (function(){
        var symbol = l552;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l552).value = v1882);
})();
var l703 = (new Symbol(make_lisp_string("LABELS")));
var l704 = make_lisp_string("var ");
var l705 = make_lisp_string(" = ");
var l706 = make_lisp_string(";");
(function(){
    var v1883 = l92.fvalue(pv, 2, l703, (function (values,nargs,v1885){
        checkArgsAtLeast(nargs, 1);
        var v1884= l5.value;
        for (var i = nargs-1; i>=1; i--)
            v1884 = {car: arguments[i+2], cdr: v1884};
        return (function(){
            return (function(){
                try {
                    var v1889 = l532.value;
                    var v1887 = l120.fvalue(pv, 2, (function(){
                        var symbol = l131;
                        var func = symbol.fvalue;
                        if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                        return func;
                    })(), v1885);
                    ((l532).value = l531.fvalue(pv, 3, l120.fvalue(pv, 2, (function(){
                        var symbol = l693;
                        var func = symbol.fvalue;
                        if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                        return func;
                    })(), v1887), (function(){
                        var symbol = l532;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })(), l82));
                    return l489.fvalue(values, 4, l573, (function(){
                        var symbol = l113;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })(), l498.fvalue(pv, 2, l119.fvalue(pv, 2, (function (values,nargs,v1888){
                        checkArgs(nargs, 1);
                        return l489.fvalue(values, 6, l704, l695.fvalue(pv, 1, (function(){
                            var tmp = v1888;
                            return tmp === l5.value? l5.value: tmp.car;
                        })()), l705, l640.fvalue(pv, 2, l135.fvalue(pv, 1, v1888), l92.fvalue(pv, 1, l148.fvalue(pv, 3, l528, (function(){
                            var tmp = v1888;
                            return tmp === l5.value? l5.value: tmp.car;
                        })(), l149.fvalue(pv, 1, v1888)))), l706, (function(){
                            var symbol = l113;
                            var value = symbol.value;
                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                            return value;
                        })());
                    }), v1885), l646.fvalue(pv, 2, v1884, l4.value)), l581);
                }
                finally {
                    l532.value = v1889;
                }
            })();
        })();
    }));
    var v1890 = ({car: v1883, cdr: (function(){
        var symbol = l552;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l552).value = v1890);
})();
var l707 = (new Symbol(make_lisp_string("*COMPILING-FILE*")));
(function(){
    (((l707.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l707).value = l5.value));
    return l707;
})();
var l708 = (new Symbol(make_lisp_string("EVAL-WHEN-COMPILE")));
(function(){
    var v1891 = l92.fvalue(pv, 2, l708, (function (values,nargs){
        var v1892= l5.value;
        for (var i = nargs-1; i>=0; i--)
            v1892 = {car: arguments[i+2], cdr: v1892};
        return (function(){
            return ((function(){
                var symbol = l707;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })() !== l5.value ? (function(){
                l322.fvalue(pv, 1, ({car: l196, cdr: v1892}));
                return l5.value;
            })() : l494.fvalue(values, 1, ({car: l196, cdr: v1892})));
        })();
    }));
    var v1894 = ({car: v1891, cdr: (function(){
        var symbol = l552;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l552).value = v1894);
})();
var l709 = (new Symbol(make_lisp_string("DEFINE-TRANSFORMATION")));
l709;
(function(){
    var v1895 = l92.fvalue(pv, 2, l196, (function (values,nargs){
        var v1896= l5.value;
        for (var i = nargs-1; i>=0; i--)
            v1896 = {car: arguments[i+2], cdr: v1896};
        return (function(){
            return (l44.fvalue(pv, 1, (function(){
                var tmp = v1896;
                return tmp === l5.value? l5.value: tmp.cdr;
            })()) !== l5.value ? l494.fvalue(values, 2, (function(){
                var tmp = v1896;
                return tmp === l5.value? l5.value: tmp.car;
            })(), (function(){
                var symbol = l501;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })()) : l489.fvalue(values, 4, l573, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })(), l498.fvalue(pv, 1, l646.fvalue(pv, 2, v1896, l4.value)), l581));
        })();
    }));
    var v1898 = ({car: v1895, cdr: (function(){
        var symbol = l552;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l552).value = v1898);
})();
var l710 = (new Symbol(make_lisp_string("SPECIAL-VARIABLE-P")));
(function(){
    (l710).fvalue = (function(){
        var func = (function (values,nargs,v1899){
            checkArgs(nargs, 1);
            return (function(){
                return (l545.fvalue(pv, 3, v1899, l84, l547) !== l5.value ? l4.value : l5.value);
            })();
        });
        func.fname = 'SPECIAL-VARIABLE-P';
        return func;
    })();
    return l710;
})();
var l711 = (new Symbol(make_lisp_string("LET-BINDING-WRAPPER")));
var l712 = make_lisp_string("try {");
var l713 = make_lisp_string("var tmp;");
var l714 = make_lisp_string("tmp = ");
var l715 = make_lisp_string(".value;");
var l716 = make_lisp_string(".value = ");
var l717 = make_lisp_string(";");
var l718 = make_lisp_string(" = tmp;");
var l719 = make_lisp_string("}");
var l720 = make_lisp_string("finally {");
var l721 = make_lisp_string(".value");
var l722 = make_lisp_string(" = ");
var l723 = make_lisp_string(";");
var l724 = make_lisp_string("}");
(function(){
    (l711).fvalue = (function(){
        var func = (function (values,nargs,v1901,v1902){
            checkArgs(nargs, 2);
            return (function(){
                try {
                var v1903 = [];
                    (l44.fvalue(pv, 1, v1901) !== l5.value ? (function(){
                        var values = mv;
                        throw ({type: 'block', id: v1903, values: v1902, message: 'Return from unknown block LET-BINDING-WRAPPER.'})
                    })() : l5.value);
                    return l489.fvalue(values, 10, l712, (function(){
                        var symbol = l113;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })(), l498.fvalue(pv, 5, l713, (function(){
                        var symbol = l113;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })(), l119.fvalue(pv, 2, (function (values,nargs,v1904){
                        checkArgs(nargs, 1);
                        return (function(v1905){
                            return l489.fvalue(values, 12, l714, v1905, l715, (function(){
                                var symbol = l113;
                                var value = symbol.value;
                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                return value;
                            })(), v1905, l716, (function(){
                                var tmp = v1904;
                                return tmp === l5.value? l5.value: tmp.cdr;
                            })(), l717, (function(){
                                var symbol = l113;
                                var value = symbol.value;
                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                return value;
                            })(), (function(){
                                var tmp = v1904;
                                return tmp === l5.value? l5.value: tmp.cdr;
                            })(), l718, (function(){
                                var symbol = l113;
                                var value = symbol.value;
                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                return value;
                            })());
                        })(l494.fvalue(pv, 1, l92.fvalue(pv, 2, l389, (function(){
                            var tmp = v1904;
                            return tmp === l5.value? l5.value: tmp.car;
                        })())));
                    }), v1901), v1902, (function(){
                        var symbol = l113;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })()), l719, (function(){
                        var symbol = l113;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })(), l720, (function(){
                        var symbol = l113;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })(), l498.fvalue(pv, 1, l119.fvalue(pv, 2, (function (values,nargs,v1906){
                        checkArgs(nargs, 1);
                        return (function(v1907){
                            return l489.fvalue(values, 6, v1907, l721, l722, (function(){
                                var tmp = v1906;
                                return tmp === l5.value? l5.value: tmp.cdr;
                            })(), l723, (function(){
                                var symbol = l113;
                                var value = symbol.value;
                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                return value;
                            })());
                        })(l494.fvalue(pv, 1, l92.fvalue(pv, 2, l389, (function(){
                            var tmp = v1906;
                            return tmp === l5.value? l5.value: tmp.car;
                        })())));
                    }), v1901)), l724, (function(){
                        var symbol = l113;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })());
                }
                catch (cf){
                    if (cf.type == 'block' && cf.id == v1903)
                        return values.apply(this, forcemv(cf.values));
                    else
                        throw cf;
                }
            })();
        });
        func.fname = 'LET-BINDING-WRAPPER';
        return func;
    })();
    return l711;
})();
var l725 = (new Symbol(make_lisp_string("LET")));
var l726 = make_lisp_string("(function(");
var l727 = make_lisp_string(",");
var l728 = make_lisp_string("){");
var l729 = make_lisp_string("})(");
var l730 = make_lisp_string(",");
var l731 = make_lisp_string(")");
(function(){
    var v1908 = l92.fvalue(pv, 2, l725, (function (values,nargs,v1910){
        checkArgsAtLeast(nargs, 1);
        var v1909= l5.value;
        for (var i = nargs-1; i>=1; i--)
            v1909 = {car: arguments[i+2], cdr: v1909};
        return (function(){
            return (function(){
                try {
                    var v1921 = l532.value;
                    var v1912 = l120.fvalue(pv, 2, (function(){
                        var symbol = l116;
                        var func = symbol.fvalue;
                        if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                        return func;
                    })(), v1910);
                    var v1913 = l120.fvalue(pv, 2, (function(){
                        var symbol = l133;
                        var func = symbol.fvalue;
                        if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                        return func;
                    })(), v1912);
                    var v1914 = l120.fvalue(pv, 2, (function(){
                        var symbol = l494;
                        var func = symbol.fvalue;
                        if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                        return func;
                    })(), l120.fvalue(pv, 2, (function(){
                        var symbol = l134;
                        var func = symbol.fvalue;
                        if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                        return func;
                    })(), v1912));
                    ((l532).value = l537.fvalue(pv, 1, l216.fvalue(pv, 2, (function(){
                        var symbol = l710;
                        var func = symbol.fvalue;
                        if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                        return func;
                    })(), v1913)));
                    var v1915 = l5.value;
                    return l489.fvalue(values, 8, l726, l117.fvalue(pv, 2, l120.fvalue(pv, 2, (function (values,nargs,v1916){
                        checkArgs(nargs, 1);
                        return (l710.fvalue(pv, 1, v1916) !== l5.value ? (function(v1917){
                            (function(){
                                var v1918 = ({car: v1916, cdr: v1917});
                                var v1919 = ({car: v1918, cdr: v1915});
                                return (v1915 = v1919);
                            })();
                            return v1917;
                        })(l534.fvalue(pv, 1, v1916)) : l536.fvalue(values, 1, v1916));
                    }), v1913), l727), l728, (function(){
                        var symbol = l113;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })(), (function(v1920){
                        return l498.fvalue(pv, 1, l711.fvalue(pv, 2, v1915, v1920));
                    })(l646.fvalue(pv, 2, v1909, l4.value)), l729, l117.fvalue(pv, 2, v1914, l730), l731);
                }
                finally {
                    l532.value = v1921;
                }
            })();
        })();
    }));
    var v1922 = ({car: v1908, cdr: (function(){
        var symbol = l552;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l552).value = v1922);
})();
var l732 = (new Symbol(make_lisp_string("LET*-INITIALIZE-VALUE")));
var l733 = make_lisp_string(";");
var l734 = make_lisp_string("var ");
var l735 = make_lisp_string(" = ");
var l736 = make_lisp_string(";");
(function(){
    (l732).fvalue = (function(){
        var func = (function (values,nargs,v1923){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v1925,v1926){
                    return (l710.fvalue(pv, 1, v1925) !== l5.value ? l489.fvalue(values, 3, l494.fvalue(pv, 1, l92.fvalue(pv, 3, l93, v1925, v1926)), l733, (function(){
                        var symbol = l113;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })()) : (function(){
                        var v1927 = l534.fvalue(pv, 1, v1925);
                        var v1928 = l502.fvalue(pv, 6, l503.value, v1925, l504.value, l84, l505.value, v1927);
                        return (function(v1929){
                            l530.fvalue(pv, 3, v1928, (function(){
                                var symbol = l532;
                                var value = symbol.value;
                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                return value;
                            })(), l84);
                            return v1929;
                        })(l489.fvalue(pv, 6, l734, v1927, l735, l494.fvalue(pv, 1, v1926), l736, (function(){
                            var symbol = l113;
                            var value = symbol.value;
                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                            return value;
                        })()));
                    })());
                })(l133.fvalue(pv, 1, v1923),l134.fvalue(pv, 1, v1923));
            })();
        });
        func.fname = 'LET*-INITIALIZE-VALUE';
        return func;
    })();
    return l732;
})();
var l737 = (new Symbol(make_lisp_string("LET*-BINDING-WRAPPER")));
var l738 = make_lisp_string("try {");
var l739 = make_lisp_string("var ");
var l740 = make_lisp_string(" = ");
var l741 = make_lisp_string(".value;");
var l742 = make_lisp_string("}");
var l743 = make_lisp_string("finally {");
var l744 = make_lisp_string(".value");
var l745 = make_lisp_string(" = ");
var l746 = make_lisp_string(";");
var l747 = make_lisp_string("}");
(function(){
    (l737).fvalue = (function(){
        var func = (function (values,nargs,v1930,v1931){
            checkArgs(nargs, 2);
            return (function(){
                try {
                var v1932 = [];
                    (l44.fvalue(pv, 1, v1930) !== l5.value ? (function(){
                        var values = mv;
                        throw ({type: 'block', id: v1932, values: v1931, message: 'Return from unknown block LET*-BINDING-WRAPPER.'})
                    })() : l5.value);
                    return (function(v1934){
                        return l489.fvalue(values, 10, l738, (function(){
                            var symbol = l113;
                            var value = symbol.value;
                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                            return value;
                        })(), l498.fvalue(pv, 2, l119.fvalue(pv, 2, (function (values,nargs,v1935){
                            checkArgs(nargs, 1);
                            return (function(v1936){
                                return l489.fvalue(values, 6, l739, (function(){
                                    var tmp = v1935;
                                    return tmp === l5.value? l5.value: tmp.cdr;
                                })(), l740, v1936, l741, (function(){
                                    var symbol = l113;
                                    var value = symbol.value;
                                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                    return value;
                                })());
                            })(l494.fvalue(pv, 1, l92.fvalue(pv, 2, l389, (function(){
                                var tmp = v1935;
                                return tmp === l5.value? l5.value: tmp.car;
                            })())));
                        }), v1934), v1931), l742, (function(){
                            var symbol = l113;
                            var value = symbol.value;
                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                            return value;
                        })(), l743, (function(){
                            var symbol = l113;
                            var value = symbol.value;
                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                            return value;
                        })(), l498.fvalue(pv, 1, l119.fvalue(pv, 2, (function (values,nargs,v1937){
                            checkArgs(nargs, 1);
                            return (function(v1938){
                                return l489.fvalue(values, 6, v1938, l744, l745, (function(){
                                    var tmp = v1937;
                                    return tmp === l5.value? l5.value: tmp.cdr;
                                })(), l746, (function(){
                                    var symbol = l113;
                                    var value = symbol.value;
                                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                    return value;
                                })());
                            })(l494.fvalue(pv, 1, l92.fvalue(pv, 2, l389, (function(){
                                var tmp = v1937;
                                return tmp === l5.value? l5.value: tmp.car;
                            })())));
                        }), v1934)), l747, (function(){
                            var symbol = l113;
                            var value = symbol.value;
                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                            return value;
                        })());
                    })(l120.fvalue(pv, 2, (function (values,nargs,v1933){
                        checkArgs(nargs, 1);
                        return ({car: v1933, cdr: l534.fvalue(pv, 1, v1933)});
                    }), l219.fvalue(pv, 2, (function(){
                        var symbol = l710;
                        var func = symbol.fvalue;
                        if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                        return func;
                    })(), v1930)));
                }
                catch (cf){
                    if (cf.type == 'block' && cf.id == v1932)
                        return values.apply(this, forcemv(cf.values));
                    else
                        throw cf;
                }
            })();
        });
        func.fname = 'LET*-BINDING-WRAPPER';
        return func;
    })();
    return l737;
})();
(function(){
    var v1939 = l92.fvalue(pv, 2, l486, (function (values,nargs,v1941){
        checkArgsAtLeast(nargs, 1);
        var v1940= l5.value;
        for (var i = nargs-1; i>=1; i--)
            v1940 = {car: arguments[i+2], cdr: v1940};
        return (function(){
            return (function(v1943,v1944){
                try {
                    var tmp;
                    tmp = l532.value;
                    l532.value = v1944;
                    v1944 = tmp;
                    return l489.fvalue(values, 4, l573, (function(){
                        var symbol = l113;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })(), l498.fvalue(pv, 1, (function(v1945,v1946){
                        return l737.fvalue(pv, 2, v1945, v1946);
                    })(l219.fvalue(pv, 2, (function(){
                        var symbol = l710;
                        var func = symbol.fvalue;
                        if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                        return func;
                    })(), l120.fvalue(pv, 2, (function(){
                        var symbol = l133;
                        var func = symbol.fvalue;
                        if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                        return func;
                    })(), v1943)),l107.fvalue(pv, 2, l119.fvalue(pv, 2, (function(){
                        var symbol = l732;
                        var func = symbol.fvalue;
                        if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                        return func;
                    })(), v1943), l646.fvalue(pv, 2, v1940, l4.value)))), l581);
                }
                finally {
                    l532.value = v1944;
                }
            })(l120.fvalue(pv, 2, (function(){
                var symbol = l116;
                var func = symbol.fvalue;
                if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                return func;
            })(), v1941),l521.fvalue(pv, 1, (function(){
                var symbol = l532;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })()));
        })();
    }));
    var v1947 = ({car: v1939, cdr: (function(){
        var symbol = l552;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l552).value = v1947);
})();
var l748 = (new Symbol(make_lisp_string("MULTIPLE-VALUE")));
var l749 = (new Symbol(make_lisp_string("USED")));
var l750 = make_lisp_string("try {");
var l751 = make_lisp_string("var ");
var l752 = make_lisp_string(" = [];");
var l753 = make_lisp_string("}");
var l754 = make_lisp_string("catch (cf){");
var l755 = make_lisp_string("    if (cf.type == 'block' && cf.id == ");
var l756 = make_lisp_string(")");
var l757 = make_lisp_string("        return values.apply(this, forcemv(cf.values));");
var l758 = make_lisp_string("        return cf.values;");
var l759 = make_lisp_string("    else");
var l760 = make_lisp_string("        throw cf;");
var l761 = make_lisp_string("}");
(function(){
    var v1948 = l92.fvalue(pv, 2, l528, (function (values,nargs,v1950){
        checkArgsAtLeast(nargs, 1);
        var v1949= l5.value;
        for (var i = nargs-1; i>=1; i--)
            v1949 = {car: arguments[i+2], cdr: v1949};
        return (function(){
            return (function(){
                var v1952 = l534.fvalue(pv, 1, v1950);
                var v1953 = l502.fvalue(pv, 6, l503.value, v1950, l504.value, l528, l505.value, v1952);
                ((function(){
                    var symbol = l501;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })() !== l5.value ? (function(){
                    var v1954 = l748;
                    var v1955 = v1953;
                    var v1956 = ({car: v1954, cdr: l514.fvalue(pv, 1, v1955)});
                    return (function(){
                        (function(){
                            var x = l150.fvalue(pv, 2, 4, v1955);
                            if (typeof x != 'object')
                                throw 'The value ' + x + ' is not a type object.';
                            return (x.car = v1956, x);
                        })();
                        return v1956;
                    })();
                })() : l5.value);
                return (function(){
                    try {
                        var v1958 = l532.value;
                        ((l532).value = l531.fvalue(pv, 3, l92.fvalue(pv, 1, v1953), (function(){
                            var symbol = l532;
                            var value = symbol.value;
                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                            return value;
                        })(), l528));
                        var v1957 = l646.fvalue(pv, 2, v1949, l4.value);
                        return (l191.fvalue(pv, 2, l749, l514.fvalue(pv, 1, v1953)) !== l5.value ? l489.fvalue(values, 4, l573, (function(){
                            var symbol = l113;
                            var value = symbol.value;
                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                            return value;
                        })(), l498.fvalue(pv, 23, l750, (function(){
                            var symbol = l113;
                            var value = symbol.value;
                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                            return value;
                        })(), l751, v1952, l752, (function(){
                            var symbol = l113;
                            var value = symbol.value;
                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                            return value;
                        })(), l498.fvalue(pv, 1, v1957), l753, (function(){
                            var symbol = l113;
                            var value = symbol.value;
                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                            return value;
                        })(), l754, (function(){
                            var symbol = l113;
                            var value = symbol.value;
                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                            return value;
                        })(), l755, v1952, l756, (function(){
                            var symbol = l113;
                            var value = symbol.value;
                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                            return value;
                        })(), ((function(){
                            var symbol = l501;
                            var value = symbol.value;
                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                            return value;
                        })() !== l5.value ? l757 : l758), (function(){
                            var symbol = l113;
                            var value = symbol.value;
                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                            return value;
                        })(), l759, (function(){
                            var symbol = l113;
                            var value = symbol.value;
                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                            return value;
                        })(), l760, (function(){
                            var symbol = l113;
                            var value = symbol.value;
                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                            return value;
                        })(), l761, (function(){
                            var symbol = l113;
                            var value = symbol.value;
                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                            return value;
                        })()), l581) : l489.fvalue(values, 4, l573, (function(){
                            var symbol = l113;
                            var value = symbol.value;
                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                            return value;
                        })(), l498.fvalue(pv, 1, v1957), l581));
                    }
                    finally {
                        l532.value = v1958;
                    }
                })();
            })();
        })();
    }));
    var v1959 = ({car: v1948, cdr: (function(){
        var symbol = l552;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l552).value = v1959);
})();
var l762 = (new Symbol(make_lisp_string("RETURN-FROM")));
var l763 = make_lisp_string("Return from unknown block `~S'.");
var l764 = make_lisp_string("var values = mv;");
var l765 = make_lisp_string("throw ({");
var l766 = make_lisp_string("type: 'block', ");
var l767 = make_lisp_string("id: ");
var l768 = make_lisp_string(", ");
var l769 = make_lisp_string("values: ");
var l770 = make_lisp_string(", ");
var l771 = make_lisp_string("message: 'Return from unknown block ");
var l772 = make_lisp_string(".'");
var l773 = make_lisp_string("})");
(function(){
    var v1960 = l92.fvalue(pv, 2, l762, (function (values,nargs,v1961,v1962){
        checkArgsAtLeast(nargs, 1);
        checkArgsAtMost(nargs, 2);
        switch(nargs){
        case 1:
            v1962=l5.value;
        default: break;
        }
        return (function(){
            return (function(){
                var v1964 = l527.fvalue(pv, 3, v1961, (function(){
                    var symbol = l532;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l528);
                var v1965 = l191.fvalue(pv, 2, l748, l514.fvalue(pv, 1, v1964));
                (l44.fvalue(pv, 1, v1964) !== l5.value ? l78.fvalue(pv, 2, l763, (v1961).name) : l5.value);
                (function(){
                    var v1966 = l749;
                    var v1967 = v1964;
                    var v1968 = ({car: v1966, cdr: l514.fvalue(pv, 1, v1967)});
                    return (function(){
                        (function(){
                            var x = l150.fvalue(pv, 2, 4, v1967);
                            if (typeof x != 'object')
                                throw 'The value ' + x + ' is not a type object.';
                            return (x.car = v1968, x);
                        })();
                        return v1968;
                    })();
                })();
                return l489.fvalue(values, 4, l573, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 13, (v1965 !== l5.value ? l489.fvalue(pv, 2, l764, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })()) : l5.value), l765, l766, l767, l513.fvalue(pv, 1, v1964), l768, l769, l494.fvalue(pv, 2, v1962, v1965), l770, l771, (v1961).name, l772, l773), l581);
            })();
        })();
    }));
    var v1969 = ({car: v1960, cdr: (function(){
        var symbol = l552;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l552).value = v1969);
})();
var l774 = (new Symbol(make_lisp_string("CATCH")));
var l775 = make_lisp_string("var id = ");
var l776 = make_lisp_string(";");
var l777 = make_lisp_string("try {");
var l778 = make_lisp_string("}");
var l779 = make_lisp_string("catch (cf){");
var l780 = make_lisp_string("    if (cf.type == 'catch' && cf.id == id)");
var l781 = make_lisp_string("        return values.apply(this, forcemv(cf.values));");
var l782 = make_lisp_string("        return pv.apply(this, forcemv(cf.values));");
var l783 = make_lisp_string("    else");
var l784 = make_lisp_string("        throw cf;");
var l785 = make_lisp_string("}");
(function(){
    var v1970 = l92.fvalue(pv, 2, l774, (function (values,nargs,v1972){
        checkArgsAtLeast(nargs, 1);
        var v1971= l5.value;
        for (var i = nargs-1; i>=1; i--)
            v1971 = {car: arguments[i+2], cdr: v1971};
        return (function(){
            return l489.fvalue(values, 4, l573, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })(), l498.fvalue(pv, 22, l775, l494.fvalue(pv, 1, v1972), l776, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })(), l777, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })(), l498.fvalue(pv, 1, l646.fvalue(pv, 2, v1971, l4.value)), (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })(), l778, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })(), l779, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })(), l780, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })(), ((function(){
                var symbol = l501;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })() !== l5.value ? l781 : l782), (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })(), l783, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })(), l784, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })(), l785, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })()), l581);
        })();
    }));
    var v1974 = ({car: v1970, cdr: (function(){
        var symbol = l552;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l552).value = v1974);
})();
var l786 = (new Symbol(make_lisp_string("THROW")));
var l787 = make_lisp_string("var values = mv;");
var l788 = make_lisp_string("throw ({");
var l789 = make_lisp_string("type: 'catch', ");
var l790 = make_lisp_string("id: ");
var l791 = make_lisp_string(", ");
var l792 = make_lisp_string("values: ");
var l793 = make_lisp_string(", ");
var l794 = make_lisp_string("message: 'Throw uncatched.'");
var l795 = make_lisp_string("})");
(function(){
    var v1975 = l92.fvalue(pv, 2, l786, (function (values,nargs,v1976,v1977){
        checkArgs(nargs, 2);
        return (function(){
            return l489.fvalue(values, 4, l573, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })(), l498.fvalue(pv, 12, l787, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })(), l788, l789, l790, l494.fvalue(pv, 1, v1976), l791, l792, l494.fvalue(pv, 2, v1977, l4.value), l793, l794, l795), l581);
        })();
    }));
    var v1979 = ({car: v1975, cdr: (function(){
        var symbol = l552;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l552).value = v1979);
})();
var l796 = (new Symbol(make_lisp_string("GO-TAG-P")));
(function(){
    (l796).fvalue = (function(){
        var func = (function (values,nargs,v1980){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v1982){
                    return (v1982 !== l5.value ? v1982 : ((v1980 instanceof Symbol)?l4.value: l5.value));
                })(l65.fvalue(pv, 1, v1980));
            })();
        });
        func.fname = 'GO-TAG-P';
        return func;
    })();
    return l796;
})();
var l797 = (new Symbol(make_lisp_string("DECLARE-TAGBODY-TAGS")));
(function(){
    (l797).fvalue = (function(){
        var func = (function (values,nargs,v1983,v1984){
            checkArgs(nargs, 2);
            return (function(){
                return (function(){
                    var v1986 = 0;
                    var v1987 = l120.fvalue(pv, 2, (function (values,nargs,v1988){
                        checkArgs(nargs, 1);
                        return (function(v1991){
                            return l502.fvalue(values, 6, l503.value, v1988, l504.value, l529, l505.value, l92.fvalue(pv, 2, v1983, v1991));
                        })(l17.fvalue(pv, 1, (function(){
                            var v1989 = 1;
                            var v1990 = (function(){
                                var x1 = v1986;
                                if (typeof x1 !== 'number') throw 'Not a number!';
                                var x2 = v1989;
                                if (typeof x2 !== 'number') throw 'Not a number!';
                                return x1+x2;
                            })();
                            return (v1986 = v1990);
                        })()));
                    }), l219.fvalue(pv, 2, (function(){
                        var symbol = l796;
                        var func = symbol.fvalue;
                        if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                        return func;
                    })(), v1984));
                    return l531.fvalue(values, 3, v1987, (function(){
                        var symbol = l532;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })(), l529);
                })();
            })();
        });
        func.fname = 'DECLARE-TAGBODY-TAGS';
        return func;
    })();
    return l797;
})();
var l798 = (new Symbol(make_lisp_string("TAGBODY")));
var l799 = QIList(l5,l5);
var l800 = make_lisp_string("START");
var l801 = (new Symbol(make_lisp_string("BRANCH")));
var l802 = (new Symbol(make_lisp_string("TBIDX")));
var l803 = make_lisp_string("var ");
var l804 = make_lisp_string(" = ");
var l805 = make_lisp_string(";");
var l806 = make_lisp_string("var ");
var l807 = make_lisp_string(" = [];");
var l808 = make_lisp_string("tbloop:");
var l809 = make_lisp_string("while (true) {");
var l810 = make_lisp_string("try {");
var l811 = make_lisp_string("switch(");
var l812 = make_lisp_string("){");
var l813 = make_lisp_string("case ");
var l814 = make_lisp_string(":");
var l815 = make_lisp_string(";");
var l816 = make_lisp_string("case ");
var l817 = make_lisp_string(":");
var l818 = make_lisp_string("default:");
var l819 = make_lisp_string("    break tbloop;");
var l820 = make_lisp_string("}");
var l821 = make_lisp_string("}");
var l822 = make_lisp_string("catch (jump) {");
var l823 = make_lisp_string("    if (jump.type == 'tagbody' && jump.id == ");
var l824 = make_lisp_string(")");
var l825 = make_lisp_string("        ");
var l826 = make_lisp_string(" = jump.label;");
var l827 = make_lisp_string("    else");
var l828 = make_lisp_string("        throw(jump);");
var l829 = make_lisp_string("}");
var l830 = make_lisp_string("}");
var l831 = make_lisp_string("return ");
var l832 = make_lisp_string(";");
(function(){
    var v1992 = l92.fvalue(pv, 2, l798, (function (values,nargs){
        var v1993= l5.value;
        for (var i = nargs-1; i>=0; i--)
            v1993 = {car: arguments[i+2], cdr: v1993};
        return (function(){
            try {
            var v1994 = [];
                (l102.fvalue(pv, 2, (function(){
                    var symbol = l796;
                    var func = symbol.fvalue;
                    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                    return func;
                })(), v1993) !== l5.value ? l5.value : (function(){
                    var values = mv;
                    throw ({type: 'block', id: v1994, values: l494.fvalue(values, 1, ({car: l196, cdr: l46.fvalue(pv, 2, v1993, l799)})), message: 'Return from unknown block TAGBODY.'})
                })());
                (l796.fvalue(pv, 1, (function(){
                    var tmp = v1993;
                    return tmp === l5.value? l5.value: tmp.car;
                })()) !== l5.value ? l5.value : (function(){
                    var v1995 = l15.fvalue(pv, 1, l800);
                    var v1996 = ({car: v1995, cdr: v1993});
                    return (v1993 = v1996);
                })());
                return (function(v1997,v1998){
                    return (function(v2000,v1999){
                        try {
                            var tmp;
                            tmp = l532.value;
                            l532.value = v2000;
                            v2000 = tmp;
                            (function(v2001){
                                return (v1999 = l134.fvalue(pv, 1, l513.fvalue(pv, 1, v2001)));
                            })(l527.fvalue(pv, 3, l133.fvalue(pv, 1, v1993), (function(){
                                var symbol = l532;
                                var value = symbol.value;
                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                return value;
                            })(), l529));
                            return l489.fvalue(values, 4, l573, (function(){
                                var symbol = l113;
                                var value = symbol.value;
                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                return value;
                            })(), l498.fvalue(pv, 21, l803, v1997, l804, v1999, l805, (function(){
                                var symbol = l113;
                                var value = symbol.value;
                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                return value;
                            })(), l806, v1998, l807, (function(){
                                var symbol = l113;
                                var value = symbol.value;
                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                return value;
                            })(), l808, (function(){
                                var symbol = l113;
                                var value = symbol.value;
                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                return value;
                            })(), l809, (function(){
                                var symbol = l113;
                                var value = symbol.value;
                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                return value;
                            })(), l498.fvalue(pv, 21, l810, (function(){
                                var symbol = l113;
                                var value = symbol.value;
                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                return value;
                            })(), l498.fvalue(pv, 1, (function(v2002){
                                return l489.fvalue(pv, 15, l811, v1997, l812, (function(){
                                    var symbol = l113;
                                    var value = symbol.value;
                                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                    return value;
                                })(), l813, v1999, l814, (function(){
                                    var symbol = l113;
                                    var value = symbol.value;
                                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                    return value;
                                })(), (function(){
                                    return (function(v2004,v2005){
                                        (function(){
                                            while(v2004 !== l5.value){
                                                (v2005 = (function(){
                                                    var tmp = v2004;
                                                    return tmp === l5.value? l5.value: tmp.car;
                                                })());
                                                (function(){
                                                    (v2002 = l107.fvalue(pv, 2, v2002, (l28.fvalue(pv, 1, l796.fvalue(pv, 1, v2005)) !== l5.value ? l498.fvalue(pv, 3, l494.fvalue(pv, 1, v2005), l815, (function(){
                                                        var symbol = l113;
                                                        var value = symbol.value;
                                                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                                        return value;
                                                    })()) : (function(v2006){
                                                        return l489.fvalue(pv, 4, l816, l134.fvalue(pv, 1, l513.fvalue(pv, 1, v2006)), l817, (function(){
                                                            var symbol = l113;
                                                            var value = symbol.value;
                                                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                                            return value;
                                                        })());
                                                    })(l527.fvalue(pv, 3, v2005, (function(){
                                                        var symbol = l532;
                                                        var value = symbol.value;
                                                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                                        return value;
                                                    })(), l529)))));
                                                    return l5.value;
                                                })();
                                                (v2004 = (function(){
                                                    var tmp = v2004;
                                                    return tmp === l5.value? l5.value: tmp.cdr;
                                                })());
                                            }return l5.value;
                                        })();
                                        return v2002;
                                    })((function(){
                                        var tmp = v1993;
                                        return tmp === l5.value? l5.value: tmp.cdr;
                                    })(),l5.value);
                                })(), l818, (function(){
                                    var symbol = l113;
                                    var value = symbol.value;
                                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                    return value;
                                })(), l819, (function(){
                                    var symbol = l113;
                                    var value = symbol.value;
                                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                    return value;
                                })(), l820, (function(){
                                    var symbol = l113;
                                    var value = symbol.value;
                                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                    return value;
                                })());
                            })(l108)), l821, (function(){
                                var symbol = l113;
                                var value = symbol.value;
                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                return value;
                            })(), l822, (function(){
                                var symbol = l113;
                                var value = symbol.value;
                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                return value;
                            })(), l823, v1998, l824, (function(){
                                var symbol = l113;
                                var value = symbol.value;
                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                return value;
                            })(), l825, v1997, l826, (function(){
                                var symbol = l113;
                                var value = symbol.value;
                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                return value;
                            })(), l827, (function(){
                                var symbol = l113;
                                var value = symbol.value;
                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                return value;
                            })(), l828, (function(){
                                var symbol = l113;
                                var value = symbol.value;
                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                return value;
                            })(), l829, (function(){
                                var symbol = l113;
                                var value = symbol.value;
                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                return value;
                            })()), l830, (function(){
                                var symbol = l113;
                                var value = symbol.value;
                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                return value;
                            })(), l831, l494.fvalue(pv, 1, l5.value), l832, (function(){
                                var symbol = l113;
                                var value = symbol.value;
                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                return value;
                            })()), l581);
                        }
                        finally {
                            l532.value = v2000;
                        }
                    })(l797.fvalue(pv, 2, v1998, v1993),l5.value);
                })(l534.fvalue(pv, 1, l801),l534.fvalue(pv, 1, l802));
            }
            catch (cf){
                if (cf.type == 'block' && cf.id == v1994)
                    return values.apply(this, forcemv(cf.values));
                else
                    throw cf;
            }
        })();
    }));
    var v2007 = ({car: v1992, cdr: (function(){
        var symbol = l552;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l552).value = v2007);
})();
var l833 = (new Symbol(make_lisp_string("GO")));
var l834 = make_lisp_string("Unknown tag `~S'");
var l835 = make_lisp_string("throw ({");
var l836 = make_lisp_string("type: 'tagbody', ");
var l837 = make_lisp_string("id: ");
var l838 = make_lisp_string(", ");
var l839 = make_lisp_string("label: ");
var l840 = make_lisp_string(", ");
var l841 = make_lisp_string("message: 'Attempt to GO to non-existing tag ");
var l842 = make_lisp_string("'");
var l843 = make_lisp_string("})");
(function(){
    var v2008 = l92.fvalue(pv, 2, l833, (function (values,nargs,v2009){
        checkArgs(nargs, 1);
        return (function(){
            return (function(v2011,v2012){
                (l44.fvalue(pv, 1, v2011) !== l5.value ? l78.fvalue(pv, 2, l834, v2009) : l5.value);
                return l489.fvalue(values, 4, l573, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 13, l835, l836, l837, l133.fvalue(pv, 1, l513.fvalue(pv, 1, v2011)), l838, l839, l134.fvalue(pv, 1, l513.fvalue(pv, 1, v2011)), l840, l841, v2012, l842, l843, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })()), l581);
            })(l527.fvalue(pv, 3, v2009, (function(){
                var symbol = l532;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })(), l529),(((v2009 instanceof Symbol)?l4.value: l5.value) !== l5.value ? (v2009).name : (l65.fvalue(pv, 1, v2009) !== l5.value ? l17.fvalue(pv, 1, v2009) : l5.value)));
        })();
    }));
    var v2013 = ({car: v2008, cdr: (function(){
        var symbol = l552;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l552).value = v2013);
})();
var l844 = (new Symbol(make_lisp_string("UNWIND-PROTECT")));
var l845 = make_lisp_string("var ret = ");
var l846 = make_lisp_string(";");
var l847 = make_lisp_string("try {");
var l848 = make_lisp_string("ret = ");
var l849 = make_lisp_string(";");
var l850 = make_lisp_string("} finally {");
var l851 = make_lisp_string("}");
var l852 = make_lisp_string("return ret;");
(function(){
    var v2014 = l92.fvalue(pv, 2, l844, (function (values,nargs,v2016){
        checkArgsAtLeast(nargs, 1);
        var v2015= l5.value;
        for (var i = nargs-1; i>=1; i--)
            v2015 = {car: arguments[i+2], cdr: v2015};
        return (function(){
            return l489.fvalue(values, 4, l573, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })(), l498.fvalue(pv, 14, l845, l494.fvalue(pv, 1, l5.value), l846, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })(), l847, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })(), l498.fvalue(pv, 4, l848, l494.fvalue(pv, 1, v2016), l849, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })()), l850, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })(), l498.fvalue(pv, 1, l646.fvalue(pv, 1, v2015)), l851, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })(), l852, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })()), l581);
        })();
    }));
    var v2018 = ({car: v2014, cdr: (function(){
        var symbol = l552;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l552).value = v2018);
})();
var l853 = (new Symbol(make_lisp_string("MULTIPLE-VALUE-CALL")));
var l854 = make_lisp_string("var func = ");
var l855 = make_lisp_string(";");
var l856 = make_lisp_string("var args = [");
var l857 = make_lisp_string("values");
var l858 = make_lisp_string("pv");
var l859 = make_lisp_string(", 0];");
var l860 = make_lisp_string("return ");
var l861 = make_lisp_string("var values = mv;");
var l862 = make_lisp_string("var vs;");
var l863 = make_lisp_string("vs = ");
var l864 = make_lisp_string(";");
var l865 = make_lisp_string("if (typeof vs === 'object' && 'multiple-value' in vs)");
var l866 = make_lisp_string("args = args.concat(vs);");
var l867 = make_lisp_string("else");
var l868 = make_lisp_string("args.push(vs);");
var l869 = make_lisp_string("args[1] = args.length-2;");
var l870 = make_lisp_string("return func.apply(window, args);");
var l871 = make_lisp_string(";");
(function(){
    var v2019 = l92.fvalue(pv, 2, l853, (function (values,nargs,v2021){
        checkArgsAtLeast(nargs, 1);
        var v2020= l5.value;
        for (var i = nargs-1; i>=1; i--)
            v2020 = {car: arguments[i+2], cdr: v2020};
        return (function(){
            return l489.fvalue(values, 4, l573, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })(), l498.fvalue(pv, 12, l854, l494.fvalue(pv, 1, v2021), l855, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })(), l856, ((function(){
                var symbol = l501;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })() !== l5.value ? l857 : l858), l859, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })(), l860, l489.fvalue(pv, 4, l573, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })(), l498.fvalue(pv, 9, l861, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })(), l862, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })(), l119.fvalue(pv, 2, (function (values,nargs,v2023){
                checkArgs(nargs, 1);
                return l489.fvalue(values, 10, l863, l494.fvalue(pv, 2, v2023, l4.value), l864, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l865, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 2, l866, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })()), l867, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 2, l868, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })()));
            }), v2020), l869, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })(), l870, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })()), l581), l871, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })()), l581);
        })();
    }));
    var v2024 = ({car: v2019, cdr: (function(){
        var symbol = l552;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l552).value = v2024);
})();
var l872 = (new Symbol(make_lisp_string("MULTIPLE-VALUE-PROG1")));
var l873 = make_lisp_string("var args = ");
var l874 = make_lisp_string(";");
var l875 = make_lisp_string("return args;");
(function(){
    var v2025 = l92.fvalue(pv, 2, l872, (function (values,nargs,v2027){
        checkArgsAtLeast(nargs, 1);
        var v2026= l5.value;
        for (var i = nargs-1; i>=1; i--)
            v2026 = {car: arguments[i+2], cdr: v2026};
        return (function(){
            return l489.fvalue(values, 4, l573, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })(), l498.fvalue(pv, 7, l873, l494.fvalue(pv, 2, v2027, (function(){
                var symbol = l501;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })()), l874, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })(), l646.fvalue(pv, 1, v2026), l875, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })()), l581);
        })();
    }));
    var v2029 = ({car: v2025, cdr: (function(){
        var symbol = l552;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l552).value = v2029);
})();
var l876 = (new Symbol(make_lisp_string("*COMMA*")));
(function(){
    (((l876.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l876).value = l392));
    return l876;
})();
var l877 = (new Symbol(make_lisp_string("*COMMA-ATSIGN*")));
(function(){
    (((l877.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l877).value = l391));
    return l877;
})();
var l878 = (new Symbol(make_lisp_string("*BQ-LIST*")));
var l879 = make_lisp_string("BQ-LIST");
(function(){
    (((l878.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l878).value = (new Symbol(l879))));
    return l878;
})();
var l880 = (new Symbol(make_lisp_string("*BQ-APPEND*")));
var l881 = make_lisp_string("BQ-APPEND");
(function(){
    (((l880.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l880).value = (new Symbol(l881))));
    return l880;
})();
var l882 = (new Symbol(make_lisp_string("*BQ-LIST**")));
var l883 = make_lisp_string("BQ-LIST*");
(function(){
    (((l882.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l882).value = (new Symbol(l883))));
    return l882;
})();
var l884 = (new Symbol(make_lisp_string("*BQ-NCONC*")));
var l885 = make_lisp_string("BQ-NCONC");
(function(){
    (((l884.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l884).value = (new Symbol(l885))));
    return l884;
})();
var l886 = (new Symbol(make_lisp_string("*BQ-CLOBBERABLE*")));
var l887 = make_lisp_string("BQ-CLOBBERABLE");
(function(){
    (((l886.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l886).value = (new Symbol(l887))));
    return l886;
})();
var l888 = (new Symbol(make_lisp_string("*BQ-QUOTE*")));
var l889 = make_lisp_string("BQ-QUOTE");
(function(){
    (((l888.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l888).value = (new Symbol(l889))));
    return l888;
})();
var l890 = (new Symbol(make_lisp_string("*BQ-QUOTE-NIL*")));
(function(){
    (((l890.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l890).value = l92.fvalue(pv, 2, (function(){
        var symbol = l888;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })(), l5.value)));
    return l890;
})();
var l891 = (new Symbol(make_lisp_string("*BQ-SIMPLIFY*")));
(function(){
    ((l891).value = l4.value);
    return l891;
})();
l390;
var l892 = (new Symbol(make_lisp_string("BQ-COMPLETELY-PROCESS")));
var l893 = (new Symbol(make_lisp_string("BQ-PROCESS")));
var l894 = (new Symbol(make_lisp_string("BQ-SIMPLIFY")));
var l895 = (new Symbol(make_lisp_string("BQ-REMOVE-TOKENS")));
(function(){
    (l892).fvalue = (function(){
        var func = (function (values,nargs,v2030){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v2032){
                    return l895.fvalue(values, 1, ((function(){
                        var symbol = l891;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })() !== l5.value ? l894.fvalue(pv, 1, v2032) : v2032));
                })(l893.fvalue(pv, 1, v2030));
            })();
        });
        func.fname = 'BQ-COMPLETELY-PROCESS';
        return func;
    })();
    return l892;
})();
var l896 = make_lisp_string(",@~S after `");
var l897 = make_lisp_string("Malformed ,~S");
var l898 = make_lisp_string("Dotted ,@~S");
var l899 = (new Symbol(make_lisp_string("BRACKET")));
(function(){
    (l893).fvalue = (function(){
        var func = (function (values,nargs,v2033){
            checkArgs(nargs, 1);
            return (function(){
                return (l69.fvalue(pv, 1, v2033) !== l5.value ? l92.fvalue(values, 2, (function(){
                    var symbol = l888;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), v2033) : ((((function(){
                    var tmp = v2033;
                    return tmp === l5.value? l5.value: tmp.car;
                })() === l390)?l4.value: l5.value) !== l5.value ? l893.fvalue(values, 1, l892.fvalue(pv, 1, l135.fvalue(pv, 1, v2033))) : ((((function(){
                    var tmp = v2033;
                    return tmp === l5.value? l5.value: tmp.car;
                })() === (function(){
                    var symbol = l876;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })())?l4.value: l5.value) !== l5.value ? l135.fvalue(values, 1, v2033) : ((((function(){
                    var tmp = v2033;
                    return tmp === l5.value? l5.value: tmp.car;
                })() === (function(){
                    var symbol = l877;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })())?l4.value: l5.value) !== l5.value ? l78.fvalue(values, 2, l896, l135.fvalue(pv, 1, v2033)) : (function(){
                    return (function(v2036,v2037){
                        return (function(){
                            try {
                            var v2038 = [];
                                return (function(){
                                    while(l4.value !== l5.value){
                                        (l69.fvalue(pv, 1, v2036) !== l5.value ? (function(){
                                            var values = mv;
                                            throw ({type: 'block', id: v2038, values: ({car: (function(){
                                                var symbol = l880;
                                                var value = symbol.value;
                                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                                return value;
                                            })(), cdr: l201.fvalue(pv, 2, v2037, l92.fvalue(pv, 1, l92.fvalue(pv, 2, (function(){
                                                var symbol = l888;
                                                var value = symbol.value;
                                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                                return value;
                                            })(), v2036)))}), message: 'Return from unknown block NIL.'})
                                        })() : l5.value);
                                        (function(){
                                            ((((function(){
                                                var tmp = v2036;
                                                return tmp === l5.value? l5.value: tmp.car;
                                            })() === (function(){
                                                var symbol = l876;
                                                var value = symbol.value;
                                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                                return value;
                                            })())?l4.value: l5.value) !== l5.value ? (function(){
                                                (l44.fvalue(pv, 1, l149.fvalue(pv, 1, v2036)) !== l5.value ? l5.value : l78.fvalue(pv, 2, l897, v2036));
                                                return (function(){
                                                    var values = mv;
                                                    throw ({type: 'block', id: v2038, values: ({car: (function(){
                                                        var symbol = l880;
                                                        var value = symbol.value;
                                                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                                        return value;
                                                    })(), cdr: l201.fvalue(pv, 2, v2037, l92.fvalue(pv, 1, l135.fvalue(pv, 1, v2036)))}), message: 'Return from unknown block NIL.'})
                                                })();
                                            })() : l5.value);
                                            ((((function(){
                                                var tmp = v2036;
                                                return tmp === l5.value? l5.value: tmp.car;
                                            })() === (function(){
                                                var symbol = l877;
                                                var value = symbol.value;
                                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                                return value;
                                            })())?l4.value: l5.value) !== l5.value ? l78.fvalue(pv, 2, l898, v2036) : l5.value);
                                            return l5.value;
                                        })();
                                        (function(v2039,v2040){
                                            return (v2036 = v2039, v2037 = v2040);
                                        })((function(){
                                            var tmp = v2036;
                                            return tmp === l5.value? l5.value: tmp.cdr;
                                        })(),({car: l899.fvalue(pv, 1, (function(){
                                            var tmp = v2036;
                                            return tmp === l5.value? l5.value: tmp.car;
                                        })()), cdr: v2037}));
                                    }return l5.value;
                                })();
                            }
                            catch (cf){
                                if (cf.type == 'block' && cf.id == v2038)
                                    return values.apply(this, forcemv(cf.values));
                                else
                                    throw cf;
                            }
                        })();
                    })(v2033,l5);
                })()))));
            })();
        });
        func.fname = 'BQ-PROCESS';
        return func;
    })();
    return l893;
})();
(function(){
    (l899).fvalue = (function(){
        var func = (function (values,nargs,v2041){
            checkArgs(nargs, 1);
            return (function(){
                return (l69.fvalue(pv, 1, v2041) !== l5.value ? l92.fvalue(values, 2, (function(){
                    var symbol = l878;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l893.fvalue(pv, 1, v2041)) : ((((function(){
                    var tmp = v2041;
                    return tmp === l5.value? l5.value: tmp.car;
                })() === (function(){
                    var symbol = l876;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })())?l4.value: l5.value) !== l5.value ? l92.fvalue(values, 2, (function(){
                    var symbol = l878;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l135.fvalue(pv, 1, v2041)) : ((((function(){
                    var tmp = v2041;
                    return tmp === l5.value? l5.value: tmp.car;
                })() === (function(){
                    var symbol = l877;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })())?l4.value: l5.value) !== l5.value ? l135.fvalue(values, 1, v2041) : l92.fvalue(values, 2, (function(){
                    var symbol = l878;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l893.fvalue(pv, 1, v2041)))));
            })();
        });
        func.fname = 'BRACKET';
        return func;
    })();
    return l899;
})();
var l900 = (new Symbol(make_lisp_string("MAPTREE")));
(function(){
    (l900).fvalue = (function(){
        var func = (function (values,nargs,v2043,v2044){
            checkArgs(nargs, 2);
            return (function(){
                return (l69.fvalue(pv, 1, v2044) !== l5.value ? (function(){
                    var f = v2043;
                    return (typeof f === 'function'? f: f.fvalue)(values, 1, v2044)
                })() : (function(v2046,v2047){
                    return ((l27.fvalue(pv, 2, v2046, (function(){
                        var tmp = v2044;
                        return tmp === l5.value? l5.value: tmp.car;
                    })()) !== l5.value ? l27.fvalue(pv, 2, v2047, (function(){
                        var tmp = v2044;
                        return tmp === l5.value? l5.value: tmp.cdr;
                    })()) : l5.value) !== l5.value ? v2044 : ({car: v2046, cdr: v2047}));
                })((function(){
                    var f = v2043;
                    return (typeof f === 'function'? f: f.fvalue)(pv, 1, (function(){
                        var tmp = v2044;
                        return tmp === l5.value? l5.value: tmp.car;
                    })())
                })(),l900.fvalue(pv, 2, v2043, (function(){
                    var tmp = v2044;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })())));
            })();
        });
        func.fname = 'MAPTREE';
        return func;
    })();
    return l900;
})();
var l901 = (new Symbol(make_lisp_string("BQ-SPLICING-FROB")));
(function(){
    (l901).fvalue = (function(){
        var func = (function (values,nargs,v2048){
            checkArgs(nargs, 1);
            return (function(){
                return (((function(){
                    var tmp = v2048;
                    return (typeof tmp == 'object' && 'car' in tmp);
                })()?l4.value: l5.value) !== l5.value ? (((function(){
                    var tmp = v2048;
                    return tmp === l5.value? l5.value: tmp.car;
                })() === (function(){
                    var symbol = l877;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })())?l4.value: l5.value) : l5.value);
            })();
        });
        func.fname = 'BQ-SPLICING-FROB';
        return func;
    })();
    return l901;
})();
var l902 = (new Symbol(make_lisp_string("BQ-FROB")));
(function(){
    (l902).fvalue = (function(){
        var func = (function (values,nargs,v2050){
            checkArgs(nargs, 1);
            return (function(){
                return (((function(){
                    var tmp = v2050;
                    return (typeof tmp == 'object' && 'car' in tmp);
                })()?l4.value: l5.value) !== l5.value ? (function(v2052){
                    return (v2052 !== l5.value ? v2052 : (((function(){
                        var tmp = v2050;
                        return tmp === l5.value? l5.value: tmp.car;
                    })() === (function(){
                        var symbol = l877;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })())?l4.value: l5.value));
                })((((function(){
                    var tmp = v2050;
                    return tmp === l5.value? l5.value: tmp.car;
                })() === (function(){
                    var symbol = l876;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })())?l4.value: l5.value)) : l5.value);
            })();
        });
        func.fname = 'BQ-FROB';
        return func;
    })();
    return l902;
})();
var l903 = (new Symbol(make_lisp_string("BQ-SIMPLIFY-ARGS")));
(function(){
    (l894).fvalue = (function(){
        var func = (function (values,nargs,v2053){
            checkArgs(nargs, 1);
            return (function(){
                return (l69.fvalue(pv, 1, v2053) !== l5.value ? v2053 : (function(v2055){
                    return (l28.fvalue(pv, 1, (((function(){
                        var tmp = v2055;
                        return tmp === l5.value? l5.value: tmp.car;
                    })() === (function(){
                        var symbol = l880;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })())?l4.value: l5.value)) !== l5.value ? v2055 : l903.fvalue(values, 1, v2055));
                })(((((function(){
                    var tmp = v2053;
                    return tmp === l5.value? l5.value: tmp.car;
                })() === (function(){
                    var symbol = l888;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })())?l4.value: l5.value) !== l5.value ? v2053 : l900.fvalue(pv, 2, (function(){
                    var symbol = l894;
                    var func = symbol.fvalue;
                    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                    return func;
                })(), v2053))));
            })();
        });
        func.fname = 'BQ-SIMPLIFY';
        return func;
    })();
    return l894;
})();
var l904 = (new Symbol(make_lisp_string("BQ-ATTACH-APPEND")));
var l905 = (new Symbol(make_lisp_string("BQ-ATTACH-CONSES")));
(function(){
    (l903).fvalue = (function(){
        var func = (function (values,nargs,v2056){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    return (function(v2059,v2060){
                        return (function(){
                            try {
                            var v2061 = [];
                                return (function(){
                                    while(l4.value !== l5.value){
                                        (l44.fvalue(pv, 1, v2059) !== l5.value ? (function(){
                                            var values = mv;
                                            throw ({type: 'block', id: v2061, values: v2060, message: 'Return from unknown block NIL.'})
                                        })() : l5.value);
                                        l5.value;
                                        (function(v2062,v2063){
                                            return (v2059 = v2062, v2060 = v2063);
                                        })((function(){
                                            var tmp = v2059;
                                            return tmp === l5.value? l5.value: tmp.cdr;
                                        })(),(l69.fvalue(pv, 1, (function(){
                                            var tmp = v2059;
                                            return tmp === l5.value? l5.value: tmp.car;
                                        })()) !== l5.value ? l904.fvalue(pv, 3, (function(){
                                            var symbol = l880;
                                            var value = symbol.value;
                                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                            return value;
                                        })(), (function(){
                                            var tmp = v2059;
                                            return tmp === l5.value? l5.value: tmp.car;
                                        })(), v2060) : ((((l152.fvalue(pv, 1, v2059) === (function(){
                                            var symbol = l878;
                                            var value = symbol.value;
                                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                            return value;
                                        })())?l4.value: l5.value) !== l5.value ? l101.fvalue(pv, 2, (function(){
                                            var symbol = l901;
                                            var func = symbol.fvalue;
                                            if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                                            return func;
                                        })(), l153.fvalue(pv, 1, v2059)) : l5.value) !== l5.value ? l905.fvalue(pv, 2, l153.fvalue(pv, 1, v2059), v2060) : ((((l152.fvalue(pv, 1, v2059) === (function(){
                                            var symbol = l882;
                                            var value = symbol.value;
                                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                            return value;
                                        })())?l4.value: l5.value) !== l5.value ? l101.fvalue(pv, 2, (function(){
                                            var symbol = l901;
                                            var func = symbol.fvalue;
                                            if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                                            return func;
                                        })(), l153.fvalue(pv, 1, v2059)) : l5.value) !== l5.value ? l905.fvalue(pv, 2, l49.fvalue(pv, 1, (function(){
                                            var tmp = l49.fvalue(pv, 1, l153.fvalue(pv, 1, v2059));
                                            return tmp === l5.value? l5.value: tmp.cdr;
                                        })()), l904.fvalue(pv, 3, (function(){
                                            var symbol = l880;
                                            var value = symbol.value;
                                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                            return value;
                                        })(), (function(){
                                            var tmp = l189.fvalue(pv, 1, (function(){
                                                var tmp = v2059;
                                                return tmp === l5.value? l5.value: tmp.car;
                                            })());
                                            return tmp === l5.value? l5.value: tmp.car;
                                        })(), v2060)) : ((((l152.fvalue(pv, 1, v2059) === (function(){
                                            var symbol = l888;
                                            var value = symbol.value;
                                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                            return value;
                                        })())?l4.value: l5.value) !== l5.value ? (((function(){
                                            var tmp = l156.fvalue(pv, 1, v2059);
                                            return (typeof tmp == 'object' && 'car' in tmp);
                                        })()?l4.value: l5.value) !== l5.value ? (l28.fvalue(pv, 1, l902.fvalue(pv, 1, l156.fvalue(pv, 1, v2059))) !== l5.value ? l44.fvalue(pv, 1, l159.fvalue(pv, 1, v2059)) : l5.value) : l5.value) : l5.value) !== l5.value ? l905.fvalue(pv, 2, l92.fvalue(pv, 1, l92.fvalue(pv, 2, (function(){
                                            var symbol = l888;
                                            var value = symbol.value;
                                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                            return value;
                                        })(), l163.fvalue(pv, 1, v2059))), v2060) : (((l152.fvalue(pv, 1, v2059) === (function(){
                                            var symbol = l886;
                                            var value = symbol.value;
                                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                            return value;
                                        })())?l4.value: l5.value) !== l5.value ? l904.fvalue(pv, 3, (function(){
                                            var symbol = l884;
                                            var value = symbol.value;
                                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                            return value;
                                        })(), l156.fvalue(pv, 1, v2059), v2060) : l904.fvalue(pv, 3, (function(){
                                            var symbol = l880;
                                            var value = symbol.value;
                                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                            return value;
                                        })(), (function(){
                                            var tmp = v2059;
                                            return tmp === l5.value? l5.value: tmp.car;
                                        })(), v2060)))))));
                                    }return l5.value;
                                })();
                            }
                            catch (cf){
                                if (cf.type == 'block' && cf.id == v2061)
                                    return values.apply(this, forcemv(cf.values));
                                else
                                    throw cf;
                            }
                        })();
                    })(l49.fvalue(pv, 1, (function(){
                        var tmp = v2056;
                        return tmp === l5.value? l5.value: tmp.cdr;
                    })()),l5.value);
                })();
            })();
        });
        func.fname = 'BQ-SIMPLIFY-ARGS';
        return func;
    })();
    return l903;
})();
var l906 = (new Symbol(make_lisp_string("NULL-OR-QUOTED")));
(function(){
    (l906).fvalue = (function(){
        var func = (function (values,nargs,v2064){
            checkArgs(nargs, 1);
            return (function(){
                return (function(v2066){
                    return (v2066 !== l5.value ? v2066 : (((function(){
                        var tmp = v2064;
                        return (typeof tmp == 'object' && 'car' in tmp);
                    })()?l4.value: l5.value) !== l5.value ? (((function(){
                        var tmp = v2064;
                        return tmp === l5.value? l5.value: tmp.car;
                    })() === (function(){
                        var symbol = l888;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })())?l4.value: l5.value) : l5.value));
                })(l44.fvalue(pv, 1, v2064));
            })();
        });
        func.fname = 'NULL-OR-QUOTED';
        return func;
    })();
    return l906;
})();
(function(){
    (l904).fvalue = (function(){
        var func = (function (values,nargs,v2067,v2068,v2069){
            checkArgs(nargs, 3);
            return (function(){
                return ((l906.fvalue(pv, 1, v2068) !== l5.value ? l906.fvalue(pv, 1, v2069) : l5.value) !== l5.value ? l92.fvalue(values, 2, (function(){
                    var symbol = l888;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l46.fvalue(pv, 2, l135.fvalue(pv, 1, v2068), l135.fvalue(pv, 1, v2069))) : ((function(v2071){
                    return (v2071 !== l5.value ? v2071 : l74.fvalue(pv, 2, v2069, (function(){
                        var symbol = l890;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })()));
                })(l44.fvalue(pv, 1, v2069)) !== l5.value ? (l901.fvalue(pv, 1, v2068) !== l5.value ? l92.fvalue(values, 2, v2067, v2068) : v2068) : ((((function(){
                    var tmp = v2069;
                    return (typeof tmp == 'object' && 'car' in tmp);
                })()?l4.value: l5.value) !== l5.value ? (((function(){
                    var tmp = v2069;
                    return tmp === l5.value? l5.value: tmp.car;
                })() === v2067)?l4.value: l5.value) : l5.value) !== l5.value ? l148.fvalue(values, 3, (function(){
                    var tmp = v2069;
                    return tmp === l5.value? l5.value: tmp.car;
                })(), v2068, (function(){
                    var tmp = v2069;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })()) : l92.fvalue(values, 3, v2067, v2068, v2069))));
            })();
        });
        func.fname = 'BQ-ATTACH-APPEND';
        return func;
    })();
    return l904;
})();
(function(){
    (l905).fvalue = (function(){
        var func = (function (values,nargs,v2072,v2073){
            checkArgs(nargs, 2);
            return (function(){
                return ((l215.fvalue(pv, 2, (function(){
                    var symbol = l906;
                    var func = symbol.fvalue;
                    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                    return func;
                })(), v2072) !== l5.value ? l906.fvalue(pv, 1, v2073) : l5.value) !== l5.value ? l92.fvalue(values, 2, (function(){
                    var symbol = l888;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l46.fvalue(pv, 2, l120.fvalue(pv, 2, (function(){
                    var symbol = l135;
                    var func = symbol.fvalue;
                    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                    return func;
                })(), v2072), l135.fvalue(pv, 1, v2073))) : ((function(v2075){
                    return (v2075 !== l5.value ? v2075 : l74.fvalue(pv, 2, v2073, (function(){
                        var symbol = l890;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })()));
                })(l44.fvalue(pv, 1, v2073)) !== l5.value ? ({car: (function(){
                    var symbol = l878;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), cdr: v2072}) : ((((function(){
                    var tmp = v2073;
                    return (typeof tmp == 'object' && 'car' in tmp);
                })()?l4.value: l5.value) !== l5.value ? (function(v2076){
                    return (v2076 !== l5.value ? v2076 : (((function(){
                        var tmp = v2073;
                        return tmp === l5.value? l5.value: tmp.car;
                    })() === (function(){
                        var symbol = l882;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })())?l4.value: l5.value));
                })((((function(){
                    var tmp = v2073;
                    return tmp === l5.value? l5.value: tmp.car;
                })() === (function(){
                    var symbol = l878;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })())?l4.value: l5.value)) : l5.value) !== l5.value ? ({car: (function(){
                    var tmp = v2073;
                    return tmp === l5.value? l5.value: tmp.car;
                })(), cdr: l46.fvalue(pv, 2, v2072, (function(){
                    var tmp = v2073;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })())}) : ({car: (function(){
                    var symbol = l882;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), cdr: l46.fvalue(pv, 2, v2072, l92.fvalue(pv, 1, v2073))}))));
            })();
        });
        func.fname = 'BQ-ATTACH-CONSES';
        return func;
    })();
    return l905;
})();
(function(){
    (l895).fvalue = (function(){
        var func = (function (values,nargs,v2077){
            checkArgs(nargs, 1);
            return (function(){
                return (((v2077 === (function(){
                    var symbol = l878;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })())?l4.value: l5.value) !== l5.value ? l92 : (((v2077 === (function(){
                    var symbol = l880;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })())?l4.value: l5.value) !== l5.value ? l46 : (((v2077 === (function(){
                    var symbol = l884;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })())?l4.value: l5.value) !== l5.value ? l199 : (((v2077 === (function(){
                    var symbol = l882;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })())?l4.value: l5.value) !== l5.value ? l148 : (((v2077 === (function(){
                    var symbol = l888;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })())?l4.value: l5.value) !== l5.value ? l389 : (l69.fvalue(pv, 1, v2077) !== l5.value ? v2077 : ((((function(){
                    var tmp = v2077;
                    return tmp === l5.value? l5.value: tmp.car;
                })() === (function(){
                    var symbol = l886;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })())?l4.value: l5.value) !== l5.value ? l895.fvalue(values, 1, l135.fvalue(pv, 1, v2077)) : (((((function(){
                    var tmp = v2077;
                    return tmp === l5.value? l5.value: tmp.car;
                })() === (function(){
                    var symbol = l882;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })())?l4.value: l5.value) !== l5.value ? (((function(){
                    var tmp = l149.fvalue(pv, 1, v2077);
                    return (typeof tmp == 'object' && 'car' in tmp);
                })()?l4.value: l5.value) !== l5.value ? l44.fvalue(pv, 1, l160.fvalue(pv, 1, v2077)) : l5.value) : l5.value) !== l5.value ? ({car: l127, cdr: l900.fvalue(pv, 2, (function(){
                    var symbol = l895;
                    var func = symbol.fvalue;
                    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                    return func;
                })(), (function(){
                    var tmp = v2077;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })())}) : l900.fvalue(values, 2, (function(){
                    var symbol = l895;
                    var func = symbol.fvalue;
                    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                    return func;
                })(), v2077)))))))));
            })();
        });
        func.fname = 'BQ-REMOVE-TOKENS';
        return func;
    })();
    return l895;
})();
(function(){
    var v2079 = l92.fvalue(pv, 2, l390, (function (values,nargs,v2080){
        checkArgs(nargs, 1);
        return (function(){
            return l494.fvalue(values, 1, l892.fvalue(pv, 1, v2080));
        })();
    }));
    var v2082 = ({car: v2079, cdr: (function(){
        var symbol = l552;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l552).value = v2082);
})();
var l907 = (new Symbol(make_lisp_string("*BUILTINS*")));
(function(){
    (((l907.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l907).value = l5.value));
    return l907;
})();
var l908 = (new Symbol(make_lisp_string("DEFINE-RAW-BUILTIN")));
l908;
var l909 = (new Symbol(make_lisp_string("DEFINE-BUILTIN")));
l909;
var l910 = (new Symbol(make_lisp_string("TYPE-CHECK")));
l910;
var l911 = (new Symbol(make_lisp_string("VARIABLE-ARITY-CALL")));
var l912 = make_lisp_string("ARGS must be a non-empty list");
var l913 = make_lisp_string("x");
var l914 = make_lisp_string("var ");
var l915 = make_lisp_string(" = ");
var l916 = make_lisp_string(";");
var l917 = make_lisp_string("if (typeof ");
var l918 = make_lisp_string(" !== 'number') throw 'Not a number!';");
(function(){
    (l911).fvalue = (function(){
        var func = (function (values,nargs,v2083,v2084){
            checkArgs(nargs, 2);
            return (function(){
                (((function(){
                    var tmp = v2083;
                    return (typeof tmp == 'object' && 'car' in tmp);
                })()?l4.value: l5.value) !== l5.value ? l5.value : l78.fvalue(pv, 1, l912));
                return (function(v2086,v2087,v2088){
                    (function(){
                        return (function(v2090,v2091){
                            (function(){
                                while(v2090 !== l5.value){
                                    (v2091 = (function(){
                                        var tmp = v2090;
                                        return tmp === l5.value? l5.value: tmp.car;
                                    })());
                                    (function(){
                                        (l66.fvalue(pv, 1, v2091) !== l5.value ? (function(){
                                            var v2092 = (function(){
                                                var x = v2091;
                                                if (typeof x != 'number')
                                                    throw 'The value ' + x + ' is not a type number.';
                                                return make_lisp_string(x.toString());
                                            })();
                                            var v2093 = ({car: v2092, cdr: v2087});
                                            return (v2087 = v2093);
                                        })() : (((typeof (v2091) == "number")?l4.value: l5.value) !== l5.value ? (function(){
                                            var v2094 = l17.fvalue(pv, 1, v2091);
                                            var v2095 = ({car: v2094, cdr: v2087});
                                            return (v2087 = v2095);
                                        })() : (function(v2098){
                                            (function(){
                                                var v2099 = v2098;
                                                var v2100 = ({car: v2099, cdr: v2087});
                                                return (v2087 = v2100);
                                            })();
                                            return (v2088 = l107.fvalue(pv, 2, v2088, l489.fvalue(pv, 10, l914, v2098, l915, l494.fvalue(pv, 1, v2091), l916, (function(){
                                                var symbol = l113;
                                                var value = symbol.value;
                                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                                return value;
                                            })(), l917, v2098, l918, (function(){
                                                var symbol = l113;
                                                var value = symbol.value;
                                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                                return value;
                                            })())));
                                        })(l489.fvalue(pv, 2, l913, (function(){
                                            var v2096 = 1;
                                            var v2097 = (function(){
                                                var x1 = v2086;
                                                if (typeof x1 !== 'number') throw 'Not a number!';
                                                var x2 = v2096;
                                                if (typeof x2 !== 'number') throw 'Not a number!';
                                                return x1+x2;
                                            })();
                                            return (v2086 = v2097);
                                        })()))));
                                        return l5.value;
                                    })();
                                    (v2090 = (function(){
                                        var tmp = v2090;
                                        return tmp === l5.value? l5.value: tmp.cdr;
                                    })());
                                }return l5.value;
                            })();
                            return l5.value;
                        })(v2083,l5.value);
                    })();
                    return l489.fvalue(values, 4, l573, (function(){
                        var symbol = l113;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })(), l498.fvalue(pv, 2, v2088, (function(){
                        var f = v2084;
                        return (typeof f === 'function'? f: f.fvalue)(pv, 1, l49.fvalue(pv, 1, v2087))
                    })()), l581);
                })(0,l5,l108);
            })();
        });
        func.fname = 'VARIABLE-ARITY-CALL';
        return func;
    })();
    return l911;
})();
var l919 = (new Symbol(make_lisp_string("VARIABLE-ARITY")));
l919;
var l920 = (new Symbol(make_lisp_string("NUM-OP-NUM")));
var l921 = make_lisp_string("var ");
var l922 = make_lisp_string("x");
var l923 = make_lisp_string(" = ");
var l924 = make_lisp_string(";");
var l925 = make_lisp_string("y");
var l926 = make_lisp_string("if (typeof ");
var l927 = make_lisp_string(" != '");
var l928 = make_lisp_string("number");
var l929 = make_lisp_string("')");
var l930 = make_lisp_string("throw 'The value ' + ");
var l931 = make_lisp_string(" + ' is not a type ");
var l932 = make_lisp_string(".';");
var l933 = make_lisp_string("number");
var l934 = make_lisp_string("return ");
var l935 = make_lisp_string("x");
var l936 = make_lisp_string("y");
var l937 = make_lisp_string(";");
(function(){
    (l920).fvalue = (function(){
        var func = (function (values,nargs,v2101,v2102,v2103){
            checkArgs(nargs, 3);
            return (function(){
                return l489.fvalue(values, 4, l573, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 5, l489.fvalue(pv, 6, l921, l922, l923, v2101, l924, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })()), l489.fvalue(pv, 6, l921, l925, l923, v2103, l924, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })()), l489.fvalue(pv, 7, l926, l922, l927, l928, l929, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 6, l930, l922, l931, l928, l932, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })())), l489.fvalue(pv, 7, l926, l925, l927, l933, l929, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 6, l930, l925, l931, l933, l932, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })())), l489.fvalue(pv, 4, l934, l489.fvalue(pv, 3, l935, v2102, l936), l937, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })())), l581);
            })();
        });
        func.fname = 'NUM-OP-NUM';
        return func;
    })();
    return l920;
})();
var l938 = make_lisp_string("0");
var l939 = make_lisp_string("return ");
var l940 = make_lisp_string("+");
var l941 = make_lisp_string(";");
(function(){
    var v2105 = l92.fvalue(pv, 2, l42, (function (values,nargs){
        var v2106= l5.value;
        for (var i = nargs-1; i>=0; i--)
            v2106 = {car: arguments[i+2], cdr: v2106};
        return (function(){
            return (l44.fvalue(pv, 1, v2106) !== l5.value ? l938 : l911.fvalue(values, 2, v2106, (function (values,nargs,v2108){
                checkArgs(nargs, 1);
                return l489.fvalue(values, 4, l939, l117.fvalue(pv, 2, v2108, l940), l941, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })());
            })));
        })();
    }));
    var v2109 = ({car: v2105, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2109);
})();
var l942 = make_lisp_string("-");
var l943 = make_lisp_string("-");
(function(){
    var v2110 = l92.fvalue(pv, 2, l43, (function (values,nargs,v2112){
        checkArgsAtLeast(nargs, 1);
        var v2111= l5.value;
        for (var i = nargs-1; i>=1; i--)
            v2111 = {car: arguments[i+2], cdr: v2111};
        return (function(){
            return (function(v2114){
                return l911.fvalue(values, 2, v2114, (function (values,nargs,v2115){
                    checkArgs(nargs, 1);
                    return l489.fvalue(values, 4, l939, (l44.fvalue(pv, 1, v2111) !== l5.value ? l107.fvalue(pv, 2, l942, (function(){
                        var tmp = v2115;
                        return tmp === l5.value? l5.value: tmp.car;
                    })()) : l117.fvalue(pv, 2, v2115, l943)), l941, (function(){
                        var symbol = l113;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })());
                }));
            })(({car: v2112, cdr: v2111}));
        })();
    }));
    var v2116 = ({car: v2110, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2116);
})();
var l944 = make_lisp_string("1");
var l945 = make_lisp_string("*");
(function(){
    var v2117 = l92.fvalue(pv, 2, l21, (function (values,nargs){
        var v2118= l5.value;
        for (var i = nargs-1; i>=0; i--)
            v2118 = {car: arguments[i+2], cdr: v2118};
        return (function(){
            return (l44.fvalue(pv, 1, v2118) !== l5.value ? l944 : l911.fvalue(values, 2, v2118, (function (values,nargs,v2120){
                checkArgs(nargs, 1);
                return l489.fvalue(values, 4, l939, l117.fvalue(pv, 2, v2120, l945), l941, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })());
            })));
        })();
    }));
    var v2121 = ({car: v2117, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2121);
})();
var l946 = make_lisp_string("1 /");
var l947 = make_lisp_string("/");
(function(){
    var v2122 = l92.fvalue(pv, 2, l22, (function (values,nargs,v2124){
        checkArgsAtLeast(nargs, 1);
        var v2123= l5.value;
        for (var i = nargs-1; i>=1; i--)
            v2123 = {car: arguments[i+2], cdr: v2123};
        return (function(){
            return (function(v2126){
                return l911.fvalue(values, 2, v2126, (function (values,nargs,v2127){
                    checkArgs(nargs, 1);
                    return l489.fvalue(values, 4, l939, (l44.fvalue(pv, 1, v2123) !== l5.value ? l107.fvalue(pv, 2, l946, (function(){
                        var tmp = v2127;
                        return tmp === l5.value? l5.value: tmp.car;
                    })()) : l117.fvalue(pv, 2, v2127, l947)), l941, (function(){
                        var symbol = l113;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })());
                }));
            })(({car: v2124, cdr: v2123}));
        })();
    }));
    var v2128 = ({car: v2122, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2128);
})();
var l948 = (new Symbol(make_lisp_string("MOD")));
var l949 = make_lisp_string("%");
(function(){
    var v2129 = l92.fvalue(pv, 2, l948, (function (values,nargs,v2130,v2131){
        checkArgs(nargs, 2);
        return (function(){
            return (function(v2133,v2134){
                return l920.fvalue(values, 3, v2133, l949, v2134);
            })(l494.fvalue(pv, 1, v2130),l494.fvalue(pv, 1, v2131));
        })();
    }));
    var v2135 = ({car: v2129, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2135);
})();
var l950 = (new Symbol(make_lisp_string("COMPARISON-CONJUNTION")));
var l951 = make_lisp_string("true");
var l952 = make_lisp_string(" && ");
(function(){
    (l950).fvalue = (function(){
        var func = (function (values,nargs,v2136,v2137){
            checkArgs(nargs, 2);
            return (function(){
                return (l44.fvalue(pv, 1, (function(){
                    var tmp = v2136;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })()) !== l5.value ? l951 : (l44.fvalue(pv, 1, l149.fvalue(pv, 1, v2136)) !== l5.value ? l107.fvalue(values, 3, (function(){
                    var tmp = v2136;
                    return tmp === l5.value? l5.value: tmp.car;
                })(), v2137, l135.fvalue(pv, 1, v2136)) : l107.fvalue(values, 5, (function(){
                    var tmp = v2136;
                    return tmp === l5.value? l5.value: tmp.car;
                })(), v2137, l135.fvalue(pv, 1, v2136), l952, l950.fvalue(pv, 2, (function(){
                    var tmp = v2136;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })(), v2137))));
            })();
        });
        func.fname = 'COMPARISON-CONJUNTION';
        return func;
    })();
    return l950;
})();
var l953 = (new Symbol(make_lisp_string("DEFINE-BUILTIN-COMPARISON")));
l953;
var l954 = (new Symbol(make_lisp_string(">")));
var l955 = make_lisp_string(">");
(function(){
    var v2139 = l92.fvalue(pv, 2, l954, (function (values,nargs,v2141){
        checkArgsAtLeast(nargs, 1);
        var v2140= l5.value;
        for (var i = nargs-1; i>=1; i--)
            v2140 = {car: arguments[i+2], cdr: v2140};
        return (function(){
            return (function(v2143){
                return l911.fvalue(values, 2, v2143, (function (values,nargs,v2144){
                    checkArgs(nargs, 1);
                    return l489.fvalue(values, 4, l939, l491.fvalue(pv, 1, l950.fvalue(pv, 2, v2144, l955)), l941, (function(){
                        var symbol = l113;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })());
                }));
            })(({car: v2141, cdr: v2140}));
        })();
    }));
    var v2145 = ({car: v2139, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2145);
})();
var l956 = (new Symbol(make_lisp_string("<")));
var l957 = make_lisp_string("<");
(function(){
    var v2146 = l92.fvalue(pv, 2, l956, (function (values,nargs,v2148){
        checkArgsAtLeast(nargs, 1);
        var v2147= l5.value;
        for (var i = nargs-1; i>=1; i--)
            v2147 = {car: arguments[i+2], cdr: v2147};
        return (function(){
            return (function(v2150){
                return l911.fvalue(values, 2, v2150, (function (values,nargs,v2151){
                    checkArgs(nargs, 1);
                    return l489.fvalue(values, 4, l939, l491.fvalue(pv, 1, l950.fvalue(pv, 2, v2151, l957)), l941, (function(){
                        var symbol = l113;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })());
                }));
            })(({car: v2148, cdr: v2147}));
        })();
    }));
    var v2152 = ({car: v2146, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2152);
})();
var l958 = (new Symbol(make_lisp_string(">=")));
var l959 = make_lisp_string(">=");
(function(){
    var v2153 = l92.fvalue(pv, 2, l958, (function (values,nargs,v2155){
        checkArgsAtLeast(nargs, 1);
        var v2154= l5.value;
        for (var i = nargs-1; i>=1; i--)
            v2154 = {car: arguments[i+2], cdr: v2154};
        return (function(){
            return (function(v2157){
                return l911.fvalue(values, 2, v2157, (function (values,nargs,v2158){
                    checkArgs(nargs, 1);
                    return l489.fvalue(values, 4, l939, l491.fvalue(pv, 1, l950.fvalue(pv, 2, v2158, l959)), l941, (function(){
                        var symbol = l113;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })());
                }));
            })(({car: v2155, cdr: v2154}));
        })();
    }));
    var v2159 = ({car: v2153, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2159);
})();
var l960 = (new Symbol(make_lisp_string("<=")));
var l961 = make_lisp_string("<=");
(function(){
    var v2160 = l92.fvalue(pv, 2, l960, (function (values,nargs,v2162){
        checkArgsAtLeast(nargs, 1);
        var v2161= l5.value;
        for (var i = nargs-1; i>=1; i--)
            v2161 = {car: arguments[i+2], cdr: v2161};
        return (function(){
            return (function(v2164){
                return l911.fvalue(values, 2, v2164, (function (values,nargs,v2165){
                    checkArgs(nargs, 1);
                    return l489.fvalue(values, 4, l939, l491.fvalue(pv, 1, l950.fvalue(pv, 2, v2165, l961)), l941, (function(){
                        var symbol = l113;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })());
                }));
            })(({car: v2162, cdr: v2161}));
        })();
    }));
    var v2166 = ({car: v2160, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2166);
})();
var l962 = make_lisp_string("==");
(function(){
    var v2167 = l92.fvalue(pv, 2, l20, (function (values,nargs,v2169){
        checkArgsAtLeast(nargs, 1);
        var v2168= l5.value;
        for (var i = nargs-1; i>=1; i--)
            v2168 = {car: arguments[i+2], cdr: v2168};
        return (function(){
            return (function(v2171){
                return l911.fvalue(values, 2, v2171, (function (values,nargs,v2172){
                    checkArgs(nargs, 1);
                    return l489.fvalue(values, 4, l939, l491.fvalue(pv, 1, l950.fvalue(pv, 2, v2172, l962)), l941, (function(){
                        var symbol = l113;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })());
                }));
            })(({car: v2169, cdr: v2168}));
        })();
    }));
    var v2173 = ({car: v2167, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2173);
})();
var l963 = (new Symbol(make_lisp_string("NUMBERP")));
var l964 = make_lisp_string("(typeof (");
var l965 = make_lisp_string(") == \"number\")");
(function(){
    var v2174 = l92.fvalue(pv, 2, l963, (function (values,nargs,v2175){
        checkArgs(nargs, 1);
        return (function(){
            return (function(v2177){
                return l491.fvalue(values, 1, l489.fvalue(pv, 3, l964, v2177, l965));
            })(l494.fvalue(pv, 1, v2175));
        })();
    }));
    var v2178 = ({car: v2174, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2178);
})();
var l966 = (new Symbol(make_lisp_string("FLOOR")));
var l967 = make_lisp_string("x");
var l968 = make_lisp_string("number");
var l969 = make_lisp_string("Math.floor(x)");
(function(){
    var v2179 = l92.fvalue(pv, 2, l966, (function (values,nargs,v2180){
        checkArgs(nargs, 1);
        return (function(){
            return (function(v2182){
                return l489.fvalue(values, 4, l573, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 3, l489.fvalue(pv, 6, l921, l967, l923, v2182, l924, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })()), l489.fvalue(pv, 7, l926, l967, l927, l968, l929, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 6, l930, l967, l931, l968, l932, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })())), l489.fvalue(pv, 4, l934, l969, l937, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })())), l581);
            })(l494.fvalue(pv, 1, v2180));
        })();
    }));
    var v2183 = ({car: v2179, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2183);
})();
var l970 = (new Symbol(make_lisp_string("EXPT")));
var l971 = make_lisp_string("x");
var l972 = make_lisp_string("y");
var l973 = make_lisp_string("number");
var l974 = make_lisp_string("number");
var l975 = make_lisp_string("Math.pow(x, y)");
(function(){
    var v2184 = l92.fvalue(pv, 2, l970, (function (values,nargs,v2185,v2186){
        checkArgs(nargs, 2);
        return (function(){
            return (function(v2188,v2189){
                return l489.fvalue(values, 4, l573, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 5, l489.fvalue(pv, 6, l921, l971, l923, v2188, l924, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })()), l489.fvalue(pv, 6, l921, l972, l923, v2189, l924, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })()), l489.fvalue(pv, 7, l926, l971, l927, l973, l929, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 6, l930, l971, l931, l973, l932, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })())), l489.fvalue(pv, 7, l926, l972, l927, l974, l929, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 6, l930, l972, l931, l974, l932, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })())), l489.fvalue(pv, 4, l934, l975, l937, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })())), l581);
            })(l494.fvalue(pv, 1, v2185),l494.fvalue(pv, 1, v2186));
        })();
    }));
    var v2190 = ({car: v2184, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2190);
})();
var l976 = make_lisp_string("x");
var l977 = make_lisp_string("number");
var l978 = make_lisp_string("make_lisp_string(x.toString())");
(function(){
    var v2191 = l92.fvalue(pv, 2, l126, (function (values,nargs,v2192){
        checkArgs(nargs, 1);
        return (function(){
            return (function(v2194){
                return l489.fvalue(values, 4, l573, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 3, l489.fvalue(pv, 6, l921, l976, l923, v2194, l924, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })()), l489.fvalue(pv, 7, l926, l976, l927, l977, l929, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 6, l930, l976, l931, l977, l932, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })())), l489.fvalue(pv, 4, l934, l978, l937, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })())), l581);
            })(l494.fvalue(pv, 1, v2192));
        })();
    }));
    var v2195 = ({car: v2191, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2195);
})();
var l979 = make_lisp_string("({car: ");
var l980 = make_lisp_string(", cdr: ");
var l981 = make_lisp_string("})");
(function(){
    var v2196 = l92.fvalue(pv, 2, l127, (function (values,nargs,v2197,v2198){
        checkArgs(nargs, 2);
        return (function(){
            return (function(v2200,v2201){
                return l489.fvalue(values, 5, l979, v2200, l980, v2201, l981);
            })(l494.fvalue(pv, 1, v2197),l494.fvalue(pv, 1, v2198));
        })();
    }));
    var v2202 = ({car: v2196, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2202);
})();
var l982 = make_lisp_string("var tmp = ");
var l983 = make_lisp_string(";");
var l984 = make_lisp_string("return (typeof tmp == 'object' && 'car' in tmp);");
(function(){
    var v2203 = l92.fvalue(pv, 2, l128, (function (values,nargs,v2204){
        checkArgs(nargs, 1);
        return (function(){
            return (function(v2206){
                return l491.fvalue(values, 1, l489.fvalue(pv, 4, l573, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 6, l982, v2206, l983, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l984, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })()), l581));
            })(l494.fvalue(pv, 1, v2204));
        })();
    }));
    var v2207 = ({car: v2203, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2207);
})();
var l985 = make_lisp_string("var tmp = ");
var l986 = make_lisp_string(";");
var l987 = make_lisp_string("return tmp === ");
var l988 = make_lisp_string("? ");
var l989 = make_lisp_string(": tmp.car;");
(function(){
    var v2208 = l92.fvalue(pv, 2, l131, (function (values,nargs,v2209){
        checkArgs(nargs, 1);
        return (function(){
            return (function(v2211){
                return l489.fvalue(values, 4, l573, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 10, l985, v2211, l986, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l987, l494.fvalue(pv, 1, l5.value), l988, l494.fvalue(pv, 1, l5.value), l989, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })()), l581);
            })(l494.fvalue(pv, 1, v2209));
        })();
    }));
    var v2212 = ({car: v2208, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2212);
})();
var l990 = make_lisp_string("var tmp = ");
var l991 = make_lisp_string(";");
var l992 = make_lisp_string("return tmp === ");
var l993 = make_lisp_string("? ");
var l994 = make_lisp_string(": tmp.cdr;");
(function(){
    var v2213 = l92.fvalue(pv, 2, l132, (function (values,nargs,v2214){
        checkArgs(nargs, 1);
        return (function(){
            return (function(v2216){
                return l489.fvalue(values, 4, l573, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 10, l990, v2216, l991, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l992, l494.fvalue(pv, 1, l5.value), l993, l494.fvalue(pv, 1, l5.value), l994, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })()), l581);
            })(l494.fvalue(pv, 1, v2214));
        })();
    }));
    var v2217 = ({car: v2213, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2217);
})();
var l995 = make_lisp_string("x");
var l996 = make_lisp_string("object");
var l997 = make_lisp_string("(x.car = ");
var l998 = make_lisp_string(", x)");
(function(){
    var v2218 = l92.fvalue(pv, 2, l197, (function (values,nargs,v2219,v2220){
        checkArgs(nargs, 2);
        return (function(){
            return (function(v2222,v2223){
                return l489.fvalue(values, 4, l573, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 3, l489.fvalue(pv, 6, l921, l995, l923, v2222, l924, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })()), l489.fvalue(pv, 7, l926, l995, l927, l996, l929, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 6, l930, l995, l931, l996, l932, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })())), l489.fvalue(pv, 4, l934, l489.fvalue(pv, 3, l997, v2223, l998), l937, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })())), l581);
            })(l494.fvalue(pv, 1, v2219),l494.fvalue(pv, 1, v2220));
        })();
    }));
    var v2224 = ({car: v2218, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2224);
})();
var l999 = make_lisp_string("x");
var l1000 = make_lisp_string("object");
var l1001 = make_lisp_string("(x.cdr = ");
var l1002 = make_lisp_string(", x)");
(function(){
    var v2225 = l92.fvalue(pv, 2, l198, (function (values,nargs,v2226,v2227){
        checkArgs(nargs, 2);
        return (function(){
            return (function(v2229,v2230){
                return l489.fvalue(values, 4, l573, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 3, l489.fvalue(pv, 6, l921, l999, l923, v2229, l924, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })()), l489.fvalue(pv, 7, l926, l999, l927, l1000, l929, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 6, l930, l999, l931, l1000, l932, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })())), l489.fvalue(pv, 4, l934, l489.fvalue(pv, 3, l1001, v2230, l1002), l937, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })())), l581);
            })(l494.fvalue(pv, 1, v2226),l494.fvalue(pv, 1, v2227));
        })();
    }));
    var v2231 = ({car: v2225, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2231);
})();
var l1003 = (new Symbol(make_lisp_string("SYMBOLP")));
var l1004 = make_lisp_string("(");
var l1005 = make_lisp_string(" instanceof Symbol)");
(function(){
    var v2232 = l92.fvalue(pv, 2, l1003, (function (values,nargs,v2233){
        checkArgs(nargs, 1);
        return (function(){
            return (function(v2235){
                return l491.fvalue(values, 1, l489.fvalue(pv, 3, l1004, v2235, l1005));
            })(l494.fvalue(pv, 1, v2233));
        })();
    }));
    var v2236 = ({car: v2232, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2236);
})();
var l1006 = (new Symbol(make_lisp_string("MAKE-SYMBOL")));
var l1007 = make_lisp_string("(new Symbol(");
var l1008 = make_lisp_string("))");
(function(){
    var v2237 = l92.fvalue(pv, 2, l1006, (function (values,nargs,v2238){
        checkArgs(nargs, 1);
        return (function(){
            return (function(v2240){
                return l489.fvalue(values, 3, l1007, v2240, l1008);
            })(l494.fvalue(pv, 1, v2238));
        })();
    }));
    var v2241 = ({car: v2237, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2241);
})();
var l1009 = (new Symbol(make_lisp_string("SYMBOL-NAME")));
var l1010 = make_lisp_string("(");
var l1011 = make_lisp_string(").name");
(function(){
    var v2242 = l92.fvalue(pv, 2, l1009, (function (values,nargs,v2243){
        checkArgs(nargs, 1);
        return (function(){
            return (function(v2245){
                return l489.fvalue(values, 3, l1010, v2245, l1011);
            })(l494.fvalue(pv, 1, v2243));
        })();
    }));
    var v2246 = ({car: v2242, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2246);
})();
var l1012 = make_lisp_string("(");
var l1013 = make_lisp_string(").value = ");
(function(){
    var v2247 = l92.fvalue(pv, 2, l650, (function (values,nargs,v2248,v2249){
        checkArgs(nargs, 2);
        return (function(){
            return (function(v2251,v2252){
                return l489.fvalue(values, 4, l1012, v2251, l1013, v2252);
            })(l494.fvalue(pv, 1, v2248),l494.fvalue(pv, 1, v2249));
        })();
    }));
    var v2253 = ({car: v2247, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2253);
})();
var l1014 = (new Symbol(make_lisp_string("FSET")));
var l1015 = make_lisp_string("(");
var l1016 = make_lisp_string(").fvalue = ");
(function(){
    var v2254 = l92.fvalue(pv, 2, l1014, (function (values,nargs,v2255,v2256){
        checkArgs(nargs, 2);
        return (function(){
            return (function(v2258,v2259){
                return l489.fvalue(values, 4, l1015, v2258, l1016, v2259);
            })(l494.fvalue(pv, 1, v2255),l494.fvalue(pv, 1, v2256));
        })();
    }));
    var v2260 = ({car: v2254, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2260);
})();
var l1017 = make_lisp_string("(");
var l1018 = make_lisp_string(".value !== undefined)");
(function(){
    var v2261 = l92.fvalue(pv, 2, l18, (function (values,nargs,v2262){
        checkArgs(nargs, 1);
        return (function(){
            return (function(v2264){
                return l491.fvalue(values, 1, l489.fvalue(pv, 3, l1017, v2264, l1018));
            })(l494.fvalue(pv, 1, v2262));
        })();
    }));
    var v2265 = ({car: v2261, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2265);
})();
var l1019 = make_lisp_string("(");
var l1020 = make_lisp_string(".fvalue !== undefined)");
(function(){
    var v2266 = l92.fvalue(pv, 2, l19, (function (values,nargs,v2267){
        checkArgs(nargs, 1);
        return (function(){
            return (function(v2269){
                return l491.fvalue(values, 1, l489.fvalue(pv, 3, l1019, v2269, l1020));
            })(l494.fvalue(pv, 1, v2267));
        })();
    }));
    var v2270 = ({car: v2266, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2270);
})();
var l1021 = (new Symbol(make_lisp_string("SYMBOL-VALUE")));
var l1022 = make_lisp_string("var symbol = ");
var l1023 = make_lisp_string(";");
var l1024 = make_lisp_string("var value = symbol.value;");
var l1025 = make_lisp_string("if (value === undefined) throw \"Variable `\" + xstring(symbol.name) + \"' is unbound.\";");
var l1026 = make_lisp_string("return value;");
(function(){
    var v2271 = l92.fvalue(pv, 2, l1021, (function (values,nargs,v2272){
        checkArgs(nargs, 1);
        return (function(){
            return (function(v2274){
                return l489.fvalue(values, 4, l573, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 10, l1022, v2274, l1023, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l1024, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l1025, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l1026, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })()), l581);
            })(l494.fvalue(pv, 1, v2272));
        })();
    }));
    var v2275 = ({car: v2271, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2275);
})();
var l1027 = make_lisp_string("var symbol = ");
var l1028 = make_lisp_string(";");
var l1029 = make_lisp_string("var func = symbol.fvalue;");
var l1030 = make_lisp_string("if (func === undefined) throw \"Function `\" + xstring(symbol.name) + \"' is undefined.\";");
var l1031 = make_lisp_string("return func;");
(function(){
    var v2276 = l92.fvalue(pv, 2, l692, (function (values,nargs,v2277){
        checkArgs(nargs, 1);
        return (function(){
            return (function(v2279){
                return l489.fvalue(values, 4, l573, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 10, l1027, v2279, l1028, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l1029, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l1030, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l1031, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })()), l581);
            })(l494.fvalue(pv, 1, v2277));
        })();
    }));
    var v2280 = ({car: v2276, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2280);
})();
var l1032 = (new Symbol(make_lisp_string("SYMBOL-PLIST")));
var l1033 = make_lisp_string("((");
var l1034 = make_lisp_string(").plist || ");
var l1035 = make_lisp_string(")");
(function(){
    var v2281 = l92.fvalue(pv, 2, l1032, (function (values,nargs,v2282){
        checkArgs(nargs, 1);
        return (function(){
            return (function(v2284){
                return l489.fvalue(values, 5, l1033, v2284, l1034, l494.fvalue(pv, 1, l5.value), l1035);
            })(l494.fvalue(pv, 1, v2282));
        })();
    }));
    var v2285 = ({car: v2281, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2285);
})();
var l1036 = (new Symbol(make_lisp_string("LAMBDA-CODE")));
var l1037 = make_lisp_string("make_lisp_string((");
var l1038 = make_lisp_string(").toString())");
(function(){
    var v2286 = l92.fvalue(pv, 2, l1036, (function (values,nargs,v2287){
        checkArgs(nargs, 1);
        return (function(){
            return (function(v2289){
                return l489.fvalue(values, 3, l1037, v2289, l1038);
            })(l494.fvalue(pv, 1, v2287));
        })();
    }));
    var v2290 = ({car: v2286, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2290);
})();
var l1039 = (new Symbol(make_lisp_string("EQ")));
var l1040 = make_lisp_string("(");
var l1041 = make_lisp_string(" === ");
var l1042 = make_lisp_string(")");
(function(){
    var v2291 = l92.fvalue(pv, 2, l1039, (function (values,nargs,v2292,v2293){
        checkArgs(nargs, 2);
        return (function(){
            return (function(v2295,v2296){
                return l491.fvalue(values, 1, l489.fvalue(pv, 5, l1040, v2295, l1041, v2296, l1042));
            })(l494.fvalue(pv, 1, v2292),l494.fvalue(pv, 1, v2293));
        })();
    }));
    var v2297 = ({car: v2291, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2297);
})();
var l1043 = make_lisp_string("x");
var l1044 = make_lisp_string("string");
var l1045 = make_lisp_string("x.charCodeAt(0)");
(function(){
    var v2298 = l92.fvalue(pv, 2, l63, (function (values,nargs,v2299){
        checkArgs(nargs, 1);
        return (function(){
            return (function(v2301){
                return l489.fvalue(values, 4, l573, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 3, l489.fvalue(pv, 6, l921, l1043, l923, v2301, l924, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })()), l489.fvalue(pv, 7, l926, l1043, l927, l1044, l929, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 6, l930, l1043, l931, l1044, l932, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })())), l489.fvalue(pv, 4, l934, l1045, l937, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })())), l581);
            })(l494.fvalue(pv, 1, v2299));
        })();
    }));
    var v2302 = ({car: v2298, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2302);
})();
var l1046 = make_lisp_string("x");
var l1047 = make_lisp_string("number");
var l1048 = make_lisp_string("String.fromCharCode(x)");
(function(){
    var v2303 = l92.fvalue(pv, 2, l62, (function (values,nargs,v2304){
        checkArgs(nargs, 1);
        return (function(){
            return (function(v2306){
                return l489.fvalue(values, 4, l573, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 3, l489.fvalue(pv, 6, l921, l1046, l923, v2306, l924, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })()), l489.fvalue(pv, 7, l926, l1046, l927, l1047, l929, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 6, l930, l1046, l931, l1047, l932, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })())), l489.fvalue(pv, 4, l934, l1048, l937, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })())), l581);
            })(l494.fvalue(pv, 1, v2304));
        })();
    }));
    var v2307 = ({car: v2303, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2307);
})();
var l1049 = (new Symbol(make_lisp_string("CHARACTERP")));
var l1050 = make_lisp_string("var x = ");
var l1051 = make_lisp_string(";");
var l1052 = make_lisp_string("return (typeof(");
var l1053 = make_lisp_string(") == \"string\") && x.length == 1;");
(function(){
    var v2308 = l92.fvalue(pv, 2, l1049, (function (values,nargs,v2309){
        checkArgs(nargs, 1);
        return (function(){
            return (function(v2311){
                return l491.fvalue(values, 1, l489.fvalue(pv, 4, l573, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 7, l1050, v2311, l1051, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l1052, v2311, l1053), l581));
            })(l494.fvalue(pv, 1, v2309));
        })();
    }));
    var v2312 = ({car: v2308, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2312);
})();
var l1054 = (new Symbol(make_lisp_string("CHAR-TO-STRING")));
var l1055 = make_lisp_string("var r = [");
var l1056 = make_lisp_string("];");
var l1057 = make_lisp_string("r.type = 'character';");
var l1058 = make_lisp_string("return r");
(function(){
    var v2313 = l92.fvalue(pv, 2, l1054, (function (values,nargs,v2314){
        checkArgs(nargs, 1);
        return (function(){
            return (function(v2316){
                return l489.fvalue(values, 4, l573, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 6, l1055, v2316, l1056, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l1057, l1058), l581);
            })(l494.fvalue(pv, 1, v2314));
        })();
    }));
    var v2317 = ({car: v2313, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2317);
})();
var l1059 = (new Symbol(make_lisp_string("CHAR-UPCASE")));
var l1060 = make_lisp_string(".toUpperCase()");
(function(){
    var v2318 = l92.fvalue(pv, 2, l1059, (function (values,nargs,v2319){
        checkArgs(nargs, 1);
        return (function(){
            return (function(v2321){
                return l489.fvalue(values, 2, v2321, l1060);
            })(l494.fvalue(pv, 1, v2319));
        })();
    }));
    var v2322 = ({car: v2318, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2322);
})();
var l1061 = (new Symbol(make_lisp_string("CHAR-DOWNCASE")));
var l1062 = make_lisp_string(".toLowerCase()");
(function(){
    var v2323 = l92.fvalue(pv, 2, l1061, (function (values,nargs,v2324){
        checkArgs(nargs, 1);
        return (function(){
            return (function(v2326){
                return l489.fvalue(values, 2, v2326, l1062);
            })(l494.fvalue(pv, 1, v2324));
        })();
    }));
    var v2327 = ({car: v2323, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2327);
})();
var l1063 = make_lisp_string("var x = ");
var l1064 = make_lisp_string(";");
var l1065 = make_lisp_string("return typeof(x) == 'object' && 'length' in x && x.type == 'character';");
(function(){
    var v2328 = l92.fvalue(pv, 2, l204, (function (values,nargs,v2329){
        checkArgs(nargs, 1);
        return (function(){
            return (function(v2331){
                return l491.fvalue(values, 1, l489.fvalue(pv, 4, l573, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 5, l1063, v2331, l1064, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l1065), l581));
            })(l494.fvalue(pv, 1, v2329));
        })();
    }));
    var v2332 = ({car: v2328, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2332);
})();
var l1066 = (new Symbol(make_lisp_string("STRING-UPCASE")));
var l1067 = make_lisp_string("make_lisp_string(xstring(");
var l1068 = make_lisp_string(").toUpperCase())");
(function(){
    var v2333 = l92.fvalue(pv, 2, l1066, (function (values,nargs,v2334){
        checkArgs(nargs, 1);
        return (function(){
            return (function(v2336){
                return l489.fvalue(values, 3, l1067, v2336, l1068);
            })(l494.fvalue(pv, 1, v2334));
        })();
    }));
    var v2337 = ({car: v2333, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2337);
})();
var l1069 = (new Symbol(make_lisp_string("STRING-LENGTH")));
var l1070 = make_lisp_string(".length");
(function(){
    var v2338 = l92.fvalue(pv, 2, l1069, (function (values,nargs,v2339){
        checkArgs(nargs, 1);
        return (function(){
            return (function(v2341){
                return l489.fvalue(values, 2, v2341, l1070);
            })(l494.fvalue(pv, 1, v2339));
        })();
    }));
    var v2342 = ({car: v2338, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2342);
})();
var l1071 = (new Symbol(make_lisp_string("SLICE")));
var l1072 = make_lisp_string("var vector = ");
var l1073 = make_lisp_string(";");
var l1074 = make_lisp_string("var a = ");
var l1075 = make_lisp_string(";");
var l1076 = make_lisp_string("var b;");
var l1077 = make_lisp_string("b = ");
var l1078 = make_lisp_string(";");
var l1079 = make_lisp_string("return vector.slice(a,b);");
(function(){
    var v2343 = l92.fvalue(pv, 2, l1071, (function (values,nargs,v2344,v2345,v2346){
        checkArgsAtLeast(nargs, 2);
        checkArgsAtMost(nargs, 3);
        switch(nargs){
        case 2:
            v2346=l5.value;
        default: break;
        }
        return (function(){
            return l489.fvalue(values, 4, l573, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })(), l498.fvalue(pv, 13, l1072, l494.fvalue(pv, 1, v2344), l1073, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })(), l1074, l494.fvalue(pv, 1, v2345), l1075, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })(), l1076, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })(), (v2346 !== l5.value ? l489.fvalue(pv, 4, l1077, l494.fvalue(pv, 1, v2346), l1078, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })()) : l5.value), l1079, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })()), l581);
        })();
    }));
    var v2348 = ({car: v2343, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2348);
})();
var l1080 = make_lisp_string("[");
var l1081 = make_lisp_string("]");
(function(){
    var v2349 = l92.fvalue(pv, 2, l205, (function (values,nargs,v2350,v2351){
        checkArgs(nargs, 2);
        return (function(){
            return (function(v2353,v2354){
                return l489.fvalue(values, 4, v2353, l1080, v2354, l1081);
            })(l494.fvalue(pv, 1, v2350),l494.fvalue(pv, 1, v2351));
        })();
    }));
    var v2355 = ({car: v2349, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2355);
})();
var l1082 = make_lisp_string("var r = ");
var l1083 = make_lisp_string(".concat(");
var l1084 = make_lisp_string(");");
var l1085 = make_lisp_string("r.type = 'character';");
var l1086 = make_lisp_string("return r;");
(function(){
    var v2356 = l92.fvalue(pv, 2, l57, (function (values,nargs,v2357,v2358){
        checkArgs(nargs, 2);
        return (function(){
            return (function(v2360,v2361){
                return l489.fvalue(values, 4, l573, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 9, l1082, v2360, l1083, v2361, l1084, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l1085, l1086, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })()), l581);
            })(l494.fvalue(pv, 1, v2357),l494.fvalue(pv, 1, v2358));
        })();
    }));
    var v2362 = ({car: v2356, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2362);
})();
var l1087 = (new Symbol(make_lisp_string("FUNCALL")));
var l1088 = make_lisp_string("var f = ");
var l1089 = make_lisp_string(";");
var l1090 = make_lisp_string("return (typeof f === 'function'? f: f.fvalue)(");
var l1091 = make_lisp_string("values");
var l1092 = make_lisp_string("pv");
var l1093 = make_lisp_string(", ");
var l1094 = make_lisp_string(")");
(function(){
    var v2363 = l92.fvalue(pv, 2, l1087, (function (values,nargs,v2365){
        checkArgsAtLeast(nargs, 1);
        var v2364= l5.value;
        for (var i = nargs-1; i>=1; i--)
            v2364 = {car: arguments[i+2], cdr: v2364};
        return (function(){
            return l489.fvalue(values, 4, l573, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })(), l498.fvalue(pv, 7, l1088, l494.fvalue(pv, 1, v2365), l1089, (function(){
                var symbol = l113;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })(), l1090, l117.fvalue(pv, 2, l148.fvalue(pv, 3, ((function(){
                var symbol = l501;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })() !== l5.value ? l1091 : l1092), l17.fvalue(pv, 1, l54.fvalue(pv, 1, v2364)), l120.fvalue(pv, 2, (function(){
                var symbol = l494;
                var func = symbol.fvalue;
                if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                return func;
            })(), v2364)), l1093), l1094), l581);
        })();
    }));
    var v2367 = ({car: v2363, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2367);
})();
var l1095 = (new Symbol(make_lisp_string("APPLY")));
var l1096 = make_lisp_string("(");
var l1097 = make_lisp_string(")()");
var l1098 = make_lisp_string("var f = ");
var l1099 = make_lisp_string(";");
var l1100 = make_lisp_string("var args = [");
var l1101 = make_lisp_string("values");
var l1102 = make_lisp_string("pv");
var l1103 = make_lisp_string(", ");
var l1104 = make_lisp_string("];");
var l1105 = make_lisp_string("var tail = (");
var l1106 = make_lisp_string(");");
var l1107 = make_lisp_string("while (tail != ");
var l1108 = make_lisp_string("){");
var l1109 = make_lisp_string("    args.push(tail.car);");
var l1110 = make_lisp_string("    args[1] += 1;");
var l1111 = make_lisp_string("    tail = tail.cdr;");
var l1112 = make_lisp_string("}");
var l1113 = make_lisp_string("return (typeof f === 'function'? f : f.fvalue).apply(this, args);");
(function(){
    var v2368 = l92.fvalue(pv, 2, l1095, (function (values,nargs,v2370){
        checkArgsAtLeast(nargs, 1);
        var v2369= l5.value;
        for (var i = nargs-1; i>=1; i--)
            v2369 = {car: arguments[i+2], cdr: v2369};
        return (function(){
            return (l44.fvalue(pv, 1, v2369) !== l5.value ? l489.fvalue(values, 3, l1096, l494.fvalue(pv, 1, v2370), l1097) : (function(v2372,v2373){
                return l489.fvalue(values, 4, l573, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 26, l1098, l494.fvalue(pv, 1, v2370), l1099, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l1100, l117.fvalue(pv, 2, l148.fvalue(pv, 3, ((function(){
                    var symbol = l501;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })() !== l5.value ? l1101 : l1102), l17.fvalue(pv, 1, l54.fvalue(pv, 1, v2372)), l120.fvalue(pv, 2, (function(){
                    var symbol = l494;
                    var func = symbol.fvalue;
                    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                    return func;
                })(), v2372)), l1103), l1104, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l1105, l494.fvalue(pv, 1, v2373), l1106, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l1107, l494.fvalue(pv, 1, l5.value), l1108, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l1109, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l1110, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l1111, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l1112, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l1113, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })()), l581);
            })(l190.fvalue(pv, 1, v2369),(function(){
                var tmp = l189.fvalue(pv, 1, v2369);
                return tmp === l5.value? l5.value: tmp.car;
            })()));
        })();
    }));
    var v2374 = ({car: v2368, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2374);
})();
var l1114 = (new Symbol(make_lisp_string("JS-EVAL")));
var l1115 = make_lisp_string("var v = globalEval(xstring(");
var l1116 = make_lisp_string("));");
var l1117 = make_lisp_string("return values.apply(this, forcemv(v));");
var l1118 = make_lisp_string("globalEval(xstring(");
var l1119 = make_lisp_string("))");
(function(){
    var v2375 = l92.fvalue(pv, 2, l1114, (function (values,nargs,v2376){
        checkArgs(nargs, 1);
        return (function(){
            return (function(v2378){
                return ((function(){
                    var symbol = l501;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })() !== l5.value ? l489.fvalue(values, 4, l573, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 6, l1115, v2378, l1116, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l1117, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })()), l581) : l489.fvalue(values, 3, l1118, v2378, l1119));
            })(l494.fvalue(pv, 1, v2376));
        })();
    }));
    var v2379 = ({car: v2375, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2379);
})();
var l1120 = (new Symbol(make_lisp_string("%THROW")));
var l1121 = make_lisp_string("throw ");
var l1122 = make_lisp_string(";");
(function(){
    var v2380 = l92.fvalue(pv, 2, l1120, (function (values,nargs,v2381){
        checkArgs(nargs, 1);
        return (function(){
            return (function(v2383){
                return l489.fvalue(values, 4, l573, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 4, l1121, v2383, l1122, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })()), l581);
            })(l494.fvalue(pv, 1, v2381));
        })();
    }));
    var v2384 = ({car: v2380, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2384);
})();
var l1123 = (new Symbol(make_lisp_string("NEW")));
var l1124 = make_lisp_string("{}");
(function(){
    var v2385 = l92.fvalue(pv, 2, l1123, (function (values,nargs){
        checkArgsAtMost(nargs, 0);
        return (function(){
            return (function(){
                return l1124;
            })();
        })();
    }));
    var v2387 = ({car: v2385, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2387);
})();
var l1125 = (new Symbol(make_lisp_string("OBJECTP")));
var l1126 = make_lisp_string("(typeof (");
var l1127 = make_lisp_string(") === 'object')");
(function(){
    var v2388 = l92.fvalue(pv, 2, l1125, (function (values,nargs,v2389){
        checkArgs(nargs, 1);
        return (function(){
            return (function(v2391){
                return l491.fvalue(values, 1, l489.fvalue(pv, 3, l1126, v2391, l1127));
            })(l494.fvalue(pv, 1, v2389));
        })();
    }));
    var v2392 = ({car: v2388, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2392);
})();
var l1128 = (new Symbol(make_lisp_string("OGET")));
var l1129 = make_lisp_string("var tmp = ");
var l1130 = make_lisp_string("(");
var l1131 = make_lisp_string(")[xstring(");
var l1132 = make_lisp_string(")];");
var l1133 = make_lisp_string("return tmp == undefined? ");
var l1134 = make_lisp_string(": tmp ;");
(function(){
    var v2393 = l92.fvalue(pv, 2, l1128, (function (values,nargs,v2394,v2395){
        checkArgs(nargs, 2);
        return (function(){
            return (function(v2397,v2398){
                return l489.fvalue(values, 4, l573, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 11, l1129, l1130, v2397, l1131, v2398, l1132, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l1133, l494.fvalue(pv, 1, l5.value), l1134, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })()), l581);
            })(l494.fvalue(pv, 1, v2394),l494.fvalue(pv, 1, v2395));
        })();
    }));
    var v2399 = ({car: v2393, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2399);
})();
var l1135 = (new Symbol(make_lisp_string("OSET")));
var l1136 = make_lisp_string("((");
var l1137 = make_lisp_string(")[xstring(");
var l1138 = make_lisp_string(")] = ");
var l1139 = make_lisp_string(")");
(function(){
    var v2400 = l92.fvalue(pv, 2, l1135, (function (values,nargs,v2401,v2402,v2403){
        checkArgs(nargs, 3);
        return (function(){
            return (function(v2405,v2406,v2407){
                return l489.fvalue(values, 7, l1136, v2405, l1137, v2406, l1138, v2407, l1139);
            })(l494.fvalue(pv, 1, v2401),l494.fvalue(pv, 1, v2402),l494.fvalue(pv, 1, v2403));
        })();
    }));
    var v2408 = ({car: v2400, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2408);
})();
var l1140 = (new Symbol(make_lisp_string("IN")));
var l1141 = make_lisp_string("(xstring(");
var l1142 = make_lisp_string(") in (");
var l1143 = make_lisp_string("))");
(function(){
    var v2409 = l92.fvalue(pv, 2, l1140, (function (values,nargs,v2410,v2411){
        checkArgs(nargs, 2);
        return (function(){
            return (function(v2413,v2414){
                return l491.fvalue(values, 1, l489.fvalue(pv, 5, l1141, v2413, l1142, v2414, l1143));
            })(l494.fvalue(pv, 1, v2410),l494.fvalue(pv, 1, v2411));
        })();
    }));
    var v2415 = ({car: v2409, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2415);
})();
var l1144 = (new Symbol(make_lisp_string("FUNCTIONP")));
var l1145 = make_lisp_string("(typeof ");
var l1146 = make_lisp_string(" == 'function')");
(function(){
    var v2416 = l92.fvalue(pv, 2, l1144, (function (values,nargs,v2417){
        checkArgs(nargs, 1);
        return (function(){
            return (function(v2419){
                return l491.fvalue(values, 1, l489.fvalue(pv, 3, l1145, v2419, l1146));
            })(l494.fvalue(pv, 1, v2417));
        })();
    }));
    var v2420 = ({car: v2416, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2420);
})();
var l1147 = (new Symbol(make_lisp_string("WRITE-STRING")));
var l1148 = make_lisp_string("lisp.write(");
var l1149 = make_lisp_string(")");
(function(){
    var v2421 = l92.fvalue(pv, 2, l1147, (function (values,nargs,v2422){
        checkArgs(nargs, 1);
        return (function(){
            return (function(v2424){
                return l489.fvalue(values, 3, l1148, v2424, l1149);
            })(l494.fvalue(pv, 1, v2422));
        })();
    }));
    var v2425 = ({car: v2421, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2425);
})();
var l1150 = (new Symbol(make_lisp_string("MAKE-ARRAY")));
var l1151 = make_lisp_string("var r = [];");
var l1152 = make_lisp_string("for (var i = 0; i < ");
var l1153 = make_lisp_string("; i++)");
var l1154 = make_lisp_string("r.push(");
var l1155 = make_lisp_string(");");
var l1156 = make_lisp_string("return r;");
(function(){
    var v2426 = l92.fvalue(pv, 2, l1150, (function (values,nargs,v2427){
        checkArgs(nargs, 1);
        return (function(){
            return (function(v2429){
                return l489.fvalue(values, 4, l573, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 9, l1151, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l1152, v2429, l1153, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 4, l1154, l494.fvalue(pv, 1, l5.value), l1155, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })()), l1156, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })()), l581);
            })(l494.fvalue(pv, 1, v2427));
        })();
    }));
    var v2430 = ({car: v2426, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2430);
})();
var l1157 = (new Symbol(make_lisp_string("VECTOR-PUSH-EXTEND")));
var l1158 = make_lisp_string("var v = ");
var l1159 = make_lisp_string(";");
var l1160 = make_lisp_string("v.push(");
var l1161 = make_lisp_string(");");
var l1162 = make_lisp_string("return v;");
(function(){
    var v2431 = l92.fvalue(pv, 2, l1157, (function (values,nargs,v2432,v2433){
        checkArgs(nargs, 2);
        return (function(){
            return (function(v2435,v2436){
                return l489.fvalue(values, 4, l573, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 9, l1158, v2436, l1159, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l1160, v2435, l1161, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l1162), l581);
            })(l494.fvalue(pv, 1, v2432),l494.fvalue(pv, 1, v2433));
        })();
    }));
    var v2437 = ({car: v2431, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2437);
})();
var l1163 = (new Symbol(make_lisp_string("ARRAYP")));
var l1164 = make_lisp_string("var x = ");
var l1165 = make_lisp_string(";");
var l1166 = make_lisp_string("return typeof x === 'object' && 'length' in x;");
(function(){
    var v2438 = l92.fvalue(pv, 2, l1163, (function (values,nargs,v2439){
        checkArgs(nargs, 1);
        return (function(){
            return (function(v2441){
                return l491.fvalue(values, 1, l489.fvalue(pv, 4, l573, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 5, l1164, v2441, l1165, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l1166), l581));
            })(l494.fvalue(pv, 1, v2439));
        })();
    }));
    var v2442 = ({car: v2438, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2442);
})();
var l1167 = (new Symbol(make_lisp_string("AREF")));
var l1168 = make_lisp_string("var x = ");
var l1169 = make_lisp_string("(");
var l1170 = make_lisp_string(")[");
var l1171 = make_lisp_string("];");
var l1172 = make_lisp_string("if (x === undefined) throw 'Out of range';");
var l1173 = make_lisp_string("return x;");
(function(){
    var v2443 = l92.fvalue(pv, 2, l1167, (function (values,nargs,v2444,v2445){
        checkArgs(nargs, 2);
        return (function(){
            return (function(v2447,v2448){
                return l489.fvalue(values, 4, l573, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 11, l1168, l1169, v2447, l1170, v2448, l1171, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l1172, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l1173, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })()), l581);
            })(l494.fvalue(pv, 1, v2444),l494.fvalue(pv, 1, v2445));
        })();
    }));
    var v2449 = ({car: v2443, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2449);
})();
var l1174 = make_lisp_string("var x = ");
var l1175 = make_lisp_string(";");
var l1176 = make_lisp_string("var i = ");
var l1177 = make_lisp_string(";");
var l1178 = make_lisp_string("if (i < 0 || i >= x.length) throw 'Out of range';");
var l1179 = make_lisp_string("return x[i] = ");
var l1180 = make_lisp_string(";");
(function(){
    var v2450 = l92.fvalue(pv, 2, l206, (function (values,nargs,v2451,v2452,v2453){
        checkArgs(nargs, 3);
        return (function(){
            return (function(v2455,v2456,v2457){
                return l489.fvalue(values, 4, l573, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 14, l1174, v2455, l1175, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l1176, v2456, l1177, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l1178, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l1179, v2457, l1180, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })()), l581);
            })(l494.fvalue(pv, 1, v2451),l494.fvalue(pv, 1, v2452),l494.fvalue(pv, 1, v2453));
        })();
    }));
    var v2458 = ({car: v2450, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2458);
})();
var l1181 = (new Symbol(make_lisp_string("AFIND")));
var l1182 = make_lisp_string("var v = ");
var l1183 = make_lisp_string(";");
var l1184 = make_lisp_string("var x = ");
var l1185 = make_lisp_string(";");
var l1186 = make_lisp_string("return x.indexOf(v);");
(function(){
    var v2459 = l92.fvalue(pv, 2, l1181, (function (values,nargs,v2460,v2461){
        checkArgs(nargs, 2);
        return (function(){
            return (function(v2463,v2464){
                return l489.fvalue(values, 4, l573, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 10, l1182, v2463, l1183, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l1184, v2464, l1185, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l1186, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })()), l581);
            })(l494.fvalue(pv, 1, v2460),l494.fvalue(pv, 1, v2461));
        })();
    }));
    var v2465 = ({car: v2459, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2465);
})();
var l1187 = (new Symbol(make_lisp_string("ARESIZE")));
var l1188 = make_lisp_string("var x = ");
var l1189 = make_lisp_string(";");
var l1190 = make_lisp_string("var n = ");
var l1191 = make_lisp_string(";");
var l1192 = make_lisp_string("return x.length = n;");
(function(){
    var v2466 = l92.fvalue(pv, 2, l1187, (function (values,nargs,v2467,v2468){
        checkArgs(nargs, 2);
        return (function(){
            return (function(v2470,v2471){
                return l489.fvalue(values, 4, l573, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l498.fvalue(pv, 10, l1188, v2470, l1189, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l1190, v2471, l1191, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l1192, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })()), l581);
            })(l494.fvalue(pv, 1, v2467),l494.fvalue(pv, 1, v2468));
        })();
    }));
    var v2472 = ({car: v2466, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2472);
})();
var l1193 = make_lisp_string("(new Date()).getTime()");
(function(){
    var v2473 = l92.fvalue(pv, 2, l104, (function (values,nargs){
        checkArgsAtMost(nargs, 0);
        return (function(){
            return (function(){
                return l1193;
            })();
        })();
    }));
    var v2475 = ({car: v2473, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2475);
})();
var l1194 = (new Symbol(make_lisp_string("VALUES-ARRAY")));
var l1195 = make_lisp_string("values.apply(this, ");
var l1196 = make_lisp_string(")");
var l1197 = make_lisp_string("pv.apply(this, ");
var l1198 = make_lisp_string(")");
(function(){
    var v2476 = l92.fvalue(pv, 2, l1194, (function (values,nargs,v2477){
        checkArgs(nargs, 1);
        return (function(){
            return (function(v2479){
                return ((function(){
                    var symbol = l501;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })() !== l5.value ? l489.fvalue(values, 3, l1195, v2479, l1196) : l489.fvalue(values, 3, l1197, v2479, l1198));
            })(l494.fvalue(pv, 1, v2477));
        })();
    }));
    var v2480 = ({car: v2476, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2480);
})();
var l1199 = make_lisp_string("values(");
var l1200 = make_lisp_string(", ");
var l1201 = make_lisp_string(")");
var l1202 = make_lisp_string("pv(");
var l1203 = make_lisp_string(", ");
var l1204 = make_lisp_string(")");
(function(){
    var v2481 = l92.fvalue(pv, 2, l111, (function (values,nargs){
        var v2482= l5.value;
        for (var i = nargs-1; i>=0; i--)
            v2482 = {car: arguments[i+2], cdr: v2482};
        return (function(){
            return ((function(){
                var symbol = l501;
                var value = symbol.value;
                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                return value;
            })() !== l5.value ? l489.fvalue(values, 3, l1199, l117.fvalue(pv, 2, l120.fvalue(pv, 2, (function(){
                var symbol = l494;
                var func = symbol.fvalue;
                if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                return func;
            })(), v2482), l1200), l1201) : l489.fvalue(values, 3, l1202, l117.fvalue(pv, 2, l120.fvalue(pv, 2, (function(){
                var symbol = l494;
                var func = symbol.fvalue;
                if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                return func;
            })(), v2482), l1203), l1204));
        })();
    }));
    var v2484 = ({car: v2481, cdr: (function(){
        var symbol = l907;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l907).value = v2484);
})();
var l1205 = make_lisp_string("js_to_lisp(");
var l1206 = make_lisp_string(")");
(function(){
    var v2485 = l92.fvalue(pv, 2, l321, (function (values,nargs,v2486){
        checkArgs(nargs, 1);
        return (function(){
            return l489.fvalue(values, 3, l1205, v2486, l1206);
        })();
    }));
    var v2488 = ({car: v2485, cdr: (function(){
        var symbol = l552;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l552).value = v2488);
})();
var l1207 = (new Symbol(make_lisp_string("%JS-VSET")));
var l1208 = make_lisp_string("(");
var l1209 = make_lisp_string(" = lisp_to_js(");
var l1210 = make_lisp_string("))");
(function(){
    var v2489 = l92.fvalue(pv, 2, l1207, (function (values,nargs,v2490,v2491){
        checkArgs(nargs, 2);
        return (function(){
            return l489.fvalue(values, 5, l1208, v2490, l1209, l494.fvalue(pv, 1, v2491), l1210);
        })();
    }));
    var v2493 = ({car: v2489, cdr: (function(){
        var symbol = l552;
        var value = symbol.value;
        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
        return value;
    })()});
    return ((l552).value = v2493);
})();
var l1211 = make_lisp_string("`~S' is not a string.");
(function(){
    (function(){
        var v2494 = ({car: l321, cdr: (function (values,nargs,v2495){
            checkArgs(nargs, 1);
            return (function(v2496){
                (((function(){
                    var x = v2495;
                    return typeof(x) == 'object' && 'length' in x && x.type == 'character';
                })()?l4.value: l5.value) !== l5.value ? l5.value : l78.fvalue(pv, 2, l1211, v2495));
                return values(l5.value, l92.fvalue(pv, 1, v2495), l92.fvalue(pv, 1, v2496), l92.fvalue(pv, 3, l1207, v2495, v2496), l92.fvalue(pv, 2, l321, v2495));
            })(l15.fvalue(pv, 0));
        })});
        var v2497 = ({car: v2494, cdr: (function(){
            var symbol = l90;
            var value = symbol.value;
            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
            return value;
        })()});
        return ((l90).value = v2497);
    })();
    return l321;
})();
var l1212 = (new Symbol(make_lisp_string("!MACRO-FUNCTION")));
var l1213 = make_lisp_string("`~S' is not a symbol.");
(function(){
    (l1212).fvalue = (function(){
        var func = (function (values,nargs,v2498){
            checkArgs(nargs, 1);
            return (function(){
                (((v2498 instanceof Symbol)?l4.value: l5.value) !== l5.value ? l5.value : l78.fvalue(pv, 2, l1213, v2498));
                return (function(v2500){
                    return ((v2500 !== l5.value ? ((l512.fvalue(pv, 1, v2500) === l543)?l4.value: l5.value) : l5.value) !== l5.value ? (function(v2501){
                        (l56.fvalue(pv, 1, v2501) !== l5.value ? (function(v2502){
                            (function(){
                                var v2503 = v2500;
                                return (function(){
                                    var func = (function (values,nargs,v2505){
                                        switch(nargs){
                                        case 0:
                                            v2505=l5.value;
                                        default: break;
                                        }
                                        var v2504= l5.value;
                                        for (var i = nargs-1; i>=1; i--)
                                            v2504 = {car: arguments[i+2], cdr: v2504};
                                        return (function(){
                                            (function(){
                                                var x = l150.fvalue(pv, 2, 3, v2503);
                                                if (typeof x != 'object')
                                                    throw 'The value ' + x + ' is not a type object.';
                                                return (x.car = v2505, x);
                                            })();
                                            return v2505;
                                        })();
                                    });
                                    var args = [pv, 0];
                                    return (function(){
                                        var values = mv;
                                        var vs;
                                        vs = v2502;
                                        if (typeof vs === 'object' && 'multiple-value' in vs)
                                            args = args.concat(vs);
                                        else
                                            args.push(vs);
                                        args[1] = args.length-2;
                                        return func.apply(window, args);
                                    })();
                                })();
                            })();
                            return (v2501 = v2502);
                        })(l322.fvalue(pv, 1, v2501)) : l5.value);
                        return v2501;
                    })(l513.fvalue(pv, 1, v2500)) : l5.value);
                })(l527.fvalue(pv, 3, v2498, (function(){
                    var symbol = l532;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l82));
            })();
        });
        func.fname = '!MACRO-FUNCTION';
        return func;
    })();
    return l1212;
})();
(function(){
    (l94).fvalue = (function(){
        var func = (function (values,nargs,v2506){
            checkArgs(nargs, 1);
            return (function(){
                return (((v2506 instanceof Symbol)?l4.value: l5.value) !== l5.value ? (function(v2508){
                    return ((v2508 !== l5.value ? ((l512.fvalue(pv, 1, v2508) === l543)?l4.value: l5.value) : l5.value) !== l5.value ? values(l513.fvalue(pv, 1, v2508), l4.value) : values(v2506, l5.value));
                })(l527.fvalue(pv, 3, v2506, (function(){
                    var symbol = l532;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })(), l84)) : ((((function(){
                    var tmp = v2506;
                    return (typeof tmp == 'object' && 'car' in tmp);
                })()?l4.value: l5.value) !== l5.value ? (((function(){
                    var tmp = v2506;
                    return tmp === l5.value? l5.value: tmp.car;
                })() instanceof Symbol)?l4.value: l5.value) : l5.value) !== l5.value ? (function(v2509){
                    return (v2509 !== l5.value ? values((function(){
                        var f = v2509;
                        return (typeof f === 'function'? f: f.fvalue)(pv, 1, (function(){
                            var tmp = v2506;
                            return tmp === l5.value? l5.value: tmp.cdr;
                        })())
                    })(), l4.value) : values(v2506, l5.value));
                })(l1212.fvalue(pv, 1, (function(){
                    var tmp = v2506;
                    return tmp === l5.value? l5.value: tmp.car;
                })())) : values(v2506, l5.value)));
            })();
        });
        func.fname = '!MACROEXPAND-1';
        return func;
    })();
    return l94;
})();
var l1214 = (new Symbol(make_lisp_string("COMPILE-FUNCALL")));
var l1215 = make_lisp_string("values");
var l1216 = make_lisp_string("pv");
var l1217 = make_lisp_string("(");
var l1218 = make_lisp_string(", ");
var l1219 = make_lisp_string(")");
var l1220 = make_lisp_string("Bad function designator `~S'");
var l1221 = make_lisp_string("COMMON-LISP");
var l1222 = make_lisp_string(".fvalue");
(function(){
    (l1214).fvalue = (function(){
        var func = (function (values,nargs,v2510,v2511){
            checkArgs(nargs, 2);
            return (function(){
                return (function(){
                    var v2513 = ((function(){
                        var symbol = l501;
                        var value = symbol.value;
                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                        return value;
                    })() !== l5.value ? l1215 : l1216);
                    var v2514 = l107.fvalue(pv, 3, l1217, l117.fvalue(pv, 2, l148.fvalue(pv, 3, v2513, l17.fvalue(pv, 1, l54.fvalue(pv, 1, v2511)), l120.fvalue(pv, 2, (function(){
                        var symbol = l494;
                        var func = symbol.fvalue;
                        if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                        return func;
                    })(), v2511)), l1218), l1219);
                    ((function(v2515){
                        return (v2515 !== l5.value ? v2515 : (((function(){
                            var tmp = v2510;
                            return (typeof tmp == 'object' && 'car' in tmp);
                        })()?l4.value: l5.value) !== l5.value ? (((function(){
                            var tmp = v2510;
                            return tmp === l5.value? l5.value: tmp.car;
                        })() === l6)?l4.value: l5.value) : l5.value));
                    })(((v2510 instanceof Symbol)?l4.value: l5.value)) !== l5.value ? l5.value : l78.fvalue(pv, 2, l1220, v2510));
                    return (l695.fvalue(pv, 1, v2510) !== l5.value ? l107.fvalue(values, 2, l695.fvalue(pv, 1, v2510), v2514) : ((((v2510 instanceof Symbol)?l4.value: l5.value) !== l5.value ? ((l237.fvalue(pv, 1, v2510) === l245.fvalue(pv, 1, l1221))?l4.value: l5.value) : l5.value) !== l5.value ? l489.fvalue(values, 3, l494.fvalue(pv, 1, l92.fvalue(pv, 2, l389, v2510)), l1222, v2514) : l489.fvalue(values, 2, l494.fvalue(pv, 1, l92.fvalue(pv, 2, l82, v2510)), v2514)));
                })();
            })();
        });
        func.fname = 'COMPILE-FUNCALL';
        return func;
    })();
    return l1214;
})();
var l1223 = make_lisp_string("return ");
var l1224 = make_lisp_string(";");
var l1225 = make_lisp_string(";");
(function(){
    (l646).fvalue = (function(){
        var func = (function (values,nargs,v2516,v2517){
            checkArgsAtLeast(nargs, 1);
            checkArgsAtMost(nargs, 2);
            switch(nargs){
            case 1:
                v2517=l5.value;
            default: break;
            }
            return (function(){
                return (v2517 !== l5.value ? l489.fvalue(values, 4, l646.fvalue(pv, 1, l190.fvalue(pv, 1, v2516)), l1223, l494.fvalue(pv, 2, (function(){
                    var tmp = l189.fvalue(pv, 1, v2516);
                    return tmp === l5.value? l5.value: tmp.car;
                })(), (function(){
                    var symbol = l501;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })()), l1224) : l118.fvalue(values, 2, l216.fvalue(pv, 2, (function(){
                    var symbol = l540;
                    var func = symbol.fvalue;
                    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                    return func;
                })(), l120.fvalue(pv, 2, (function(){
                    var symbol = l494;
                    var func = symbol.fvalue;
                    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                    return func;
                })(), v2516)), l107.fvalue(pv, 2, l1225, (function(){
                    var symbol = l113;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })())));
            })();
        });
        func.fname = 'LS-COMPILE-BLOCK';
        return func;
    })();
    return l646;
})();
var l1226 = make_lisp_string(".value");
var l1227 = make_lisp_string("How should I compile `~S'?");
(function(){
    (l494).fvalue = (function(){
        var func = (function (values,nargs,v2519,v2520){
            checkArgsAtLeast(nargs, 1);
            checkArgsAtMost(nargs, 2);
            switch(nargs){
            case 1:
                v2520=l5.value;
            default: break;
            }
            return (function(){
                try {
                var v2521 = [];
                    return (function(){
                        var func = (function (values,nargs,v2523,v2524){
                            switch(nargs){
                            case 0:
                                v2523=l5.value;
                            case 1:
                                v2524=l5.value;
                            default: break;
                            }
                            var v2522= l5.value;
                            for (var i = nargs-1; i>=2; i--)
                                v2522 = {car: arguments[i+2], cdr: v2522};
                            (v2524 !== l5.value ? (function(){
                                var values = mv;
                                throw ({type: 'block', id: v2521, values: l494.fvalue(values, 2, v2523, v2520), message: 'Return from unknown block LS-COMPILE.'})
                            })() : l5.value);
                            return (function(v2525){
                                try {
                                    var tmp;
                                    tmp = l501.value;
                                    l501.value = v2525;
                                    v2525 = tmp;
                                    return (((v2523 instanceof Symbol)?l4.value: l5.value) !== l5.value ? (function(v2526){
                                        return ((v2526 !== l5.value ? l28.fvalue(pv, 1, l191.fvalue(pv, 2, l547, l514.fvalue(pv, 1, v2526))) : l5.value) !== l5.value ? l513.fvalue(values, 1, v2526) : ((function(v2527){
                                            return (v2527 !== l5.value ? v2527 : (v2526 !== l5.value ? l191.fvalue(pv, 2, l549, l514.fvalue(pv, 1, v2526)) : l5.value));
                                        })(l302.fvalue(pv, 1, v2523)) !== l5.value ? l489.fvalue(values, 2, l494.fvalue(pv, 1, l92.fvalue(pv, 2, l389, v2523)), l1226) : l494.fvalue(values, 1, l92.fvalue(pv, 2, l1021, l92.fvalue(pv, 2, l389, v2523)))));
                                    })(l527.fvalue(pv, 3, v2523, (function(){
                                        var symbol = l532;
                                        var value = symbol.value;
                                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                        return value;
                                    })(), l84)) : ((function(v2528){
                                        return (v2528 !== l5.value ? v2528 : (function(v2529){
                                            return (v2529 !== l5.value ? v2529 : (function(v2530){
                                                return (v2530 !== l5.value ? v2530 : (function(v2531){
                                                    return (v2531 !== l5.value ? v2531 : ((function(){
                                                        var x = v2523;
                                                        return typeof x === 'object' && 'length' in x;
                                                    })()?l4.value: l5.value));
                                                })(((function(){
                                                    var x = v2523;
                                                    return typeof(x) == 'object' && 'length' in x && x.type == 'character';
                                                })()?l4.value: l5.value)));
                                            })(((function(){
                                                var x = v2523;
                                                return (typeof(v2523) == "string") && x.length == 1;
                                            })()?l4.value: l5.value)));
                                        })(l66.fvalue(pv, 1, v2523)));
                                    })(l65.fvalue(pv, 1, v2523)) !== l5.value ? l669.fvalue(values, 1, v2523) : (l56.fvalue(pv, 1, v2523) !== l5.value ? (function(v2532,v2533){
                                        return (l95.fvalue(pv, 2, v2532, (function(){
                                            var symbol = l552;
                                            var value = symbol.value;
                                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                            return value;
                                        })()) !== l5.value ? (function(v2534){
                                            return (function(){
                                                var f = v2534;
                                                var args = [values, 0];
                                                var tail = (v2533);
                                                while (tail != l5.value){
                                                    args.push(tail.car);
                                                    args[1] += 1;
                                                    tail = tail.cdr;
                                                }
                                                return (typeof f === 'function'? f : f.fvalue).apply(this, args);
                                            })();
                                        })(l134.fvalue(pv, 1, l95.fvalue(pv, 2, v2532, (function(){
                                            var symbol = l552;
                                            var value = symbol.value;
                                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                            return value;
                                        })()))) : ((l95.fvalue(pv, 2, v2532, (function(){
                                            var symbol = l907;
                                            var value = symbol.value;
                                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                            return value;
                                        })()) !== l5.value ? l28.fvalue(pv, 1, l545.fvalue(pv, 3, v2532, l82, l548)) : l5.value) !== l5.value ? (function(v2535){
                                            return (function(){
                                                var f = v2535;
                                                var args = [values, 0];
                                                var tail = (v2533);
                                                while (tail != l5.value){
                                                    args.push(tail.car);
                                                    args[1] += 1;
                                                    tail = tail.cdr;
                                                }
                                                return (typeof f === 'function'? f : f.fvalue).apply(this, args);
                                            })();
                                        })(l134.fvalue(pv, 1, l95.fvalue(pv, 2, v2532, (function(){
                                            var symbol = l907;
                                            var value = symbol.value;
                                            if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                            return value;
                                        })()))) : l1214.fvalue(values, 2, v2532, v2533)));
                                    })((function(){
                                        var tmp = v2523;
                                        return tmp === l5.value? l5.value: tmp.car;
                                    })(),(function(){
                                        var tmp = v2523;
                                        return tmp === l5.value? l5.value: tmp.cdr;
                                    })()) : l78.fvalue(values, 2, l1227, v2523))));
                                }
                                finally {
                                    l501.value = v2525;
                                }
                            })(v2520);
                        });
                        var args = [values, 0];
                        return (function(){
                            var values = mv;
                            var vs;
                            vs = l94.fvalue(values, 1, v2519);
                            if (typeof vs === 'object' && 'multiple-value' in vs)
                                args = args.concat(vs);
                            else
                                args.push(vs);
                            args[1] = args.length-2;
                            return func.apply(window, args);
                        })();
                    })();
                }
                catch (cf){
                    if (cf.type == 'block' && cf.id == v2521)
                        return values.apply(this, forcemv(cf.values));
                    else
                        throw cf;
                }
            })();
        });
        func.fname = 'LS-COMPILE';
        return func;
    })();
    return l494;
})();
var l1228 = (new Symbol(make_lisp_string("*COMPILE-PRINT-TOPLEVELS*")));
(function(){
    (((l1228.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l1228).value = l5.value));
    return l1228;
})();
var l1229 = (new Symbol(make_lisp_string("TRUNCATE-STRING")));
var l1230 = (new Symbol(make_lisp_string("MIN")));
(function(){
    (l1229).fvalue = (function(){
        var func = (function (values,nargs,v2536,v2537){
            checkArgsAtLeast(nargs, 1);
            checkArgsAtMost(nargs, 2);
            switch(nargs){
            case 1:
                v2537=60;
            default: break;
            }
            return (function(){
                return (function(v2540){
                    return l220.fvalue(values, 3, v2536, 0, v2540);
                })((function(v2539){
                    return (v2539 !== l5.value ? v2539 : l1230.fvalue(pv, 2, v2537, l54.fvalue(pv, 1, v2536)));
                })(l212.fvalue(pv, 2, "\n", v2536)));
            })();
        });
        func.fname = 'TRUNCATE-STRING';
        return func;
    })();
    return l1229;
})();
var l1231 = (new Symbol(make_lisp_string("LS-COMPILE-TOPLEVEL")));
var l1232 = make_lisp_string("Compiling ~a...");
var l1233 = make_lisp_string(";");
var l1234 = make_lisp_string(";");
(function(){
    (l1231).fvalue = (function(){
        var func = (function (values,nargs,v2541,v2542){
            checkArgsAtLeast(nargs, 1);
            checkArgsAtMost(nargs, 2);
            switch(nargs){
            case 1:
                v2542=l5.value;
            default: break;
            }
            return (function(){
                return (function(v2544){
                    try {
                        var tmp;
                        tmp = l538.value;
                        l538.value = v2544;
                        v2544 = tmp;
                        return ((((function(){
                            var tmp = v2541;
                            return (typeof tmp == 'object' && 'car' in tmp);
                        })()?l4.value: l5.value) !== l5.value ? (((function(){
                            var tmp = v2541;
                            return tmp === l5.value? l5.value: tmp.car;
                        })() === l196)?l4.value: l5.value) : l5.value) !== l5.value ? (function(v2546){
                            return l117.fvalue(values, 1, l216.fvalue(pv, 2, (function(){
                                var symbol = l540;
                                var func = symbol.fvalue;
                                if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                                return func;
                            })(), v2546));
                        })(l120.fvalue(pv, 2, (function (values,nargs,v2545){
                            checkArgs(nargs, 1);
                            return l1231.fvalue(values, 2, v2545, l4.value);
                        }), (function(){
                            var tmp = v2541;
                            return tmp === l5.value? l5.value: tmp.cdr;
                        })())) : (function(){
                            ((function(){
                                var symbol = l1228;
                                var value = symbol.value;
                                if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                return value;
                            })() !== l5.value ? (function(v2547){
                                return l112.fvalue(pv, 3, l4.value, l1232, l1229.fvalue(pv, 1, v2547));
                            })(l271.fvalue(pv, 1, v2541)) : l5.value);
                            return (function(v2548){
                                return l489.fvalue(values, 2, l118.fvalue(pv, 2, l541.fvalue(pv, 0), l489.fvalue(pv, 2, l1233, (function(){
                                    var symbol = l113;
                                    var value = symbol.value;
                                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                    return value;
                                })())), (v2548 !== l5.value ? l489.fvalue(pv, 3, v2548, l1234, (function(){
                                    var symbol = l113;
                                    var value = symbol.value;
                                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                    return value;
                                })()) : l5.value));
                            })(l494.fvalue(pv, 2, v2541, v2542));
                        })());
                    }
                    finally {
                        l538.value = v2544;
                    }
                })(l5.value);
            })();
        });
        func.fname = 'LS-COMPILE-TOPLEVEL';
        return func;
    })();
    return l1231;
})();
(function(){
    (l322).fvalue = (function(){
        var func = (function (values,nargs,v2549){
            checkArgs(nargs, 1);
            return (function(){
                return (function(){
                    var v = globalEval(xstring(l1231.fvalue(pv, 2, v2549, l4.value)));
                    return values.apply(this, forcemv(v));
                })();
            })();
        });
        func.fname = 'EVAL';
        return func;
    })();
    return l322;
})();
(function(){
    (((l21.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l21).value = l5.value));
    return l21;
})();
var l1235 = (new Symbol(make_lisp_string("**")));
(function(){
    (((l1235.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l1235).value = l5.value));
    return l1235;
})();
var l1236 = (new Symbol(make_lisp_string("***")));
(function(){
    (((l1236.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l1236).value = l5.value));
    return l1236;
})();
(function(){
    (((l22.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l22).value = l5.value));
    return l22;
})();
var l1237 = (new Symbol(make_lisp_string("//")));
(function(){
    (((l1237.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l1237).value = l5.value));
    return l1237;
})();
var l1238 = (new Symbol(make_lisp_string("///")));
(function(){
    (((l1238.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l1238).value = l5.value));
    return l1238;
})();
(function(){
    (((l42.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l42).value = l5.value));
    return l42;
})();
var l1239 = (new Symbol(make_lisp_string("++")));
(function(){
    (((l1239.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l1239).value = l5.value));
    return l1239;
})();
var l1240 = (new Symbol(make_lisp_string("+++")));
(function(){
    (((l1240.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l1240).value = l5.value));
    return l1240;
})();
(function(){
    (((l43.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : ((l43).value = l5.value));
    return l43;
})();
var l1241 = (new Symbol(make_lisp_string("EVAL-INTERACTIVE")));
(function(){
    (l1241).fvalue = (function(){
        var func = (function (values,nargs,v2551){
            checkArgs(nargs, 1);
            return (function(){
                (function(){
                    return (function(){
                        var func = (function (values,nargs,v2554){
                            switch(nargs){
                            case 0:
                                v2554=l5.value;
                            default: break;
                            }
                            var v2553= l5.value;
                            for (var i = nargs-1; i>=1; i--)
                                v2553 = {car: arguments[i+2], cdr: v2553};
                            return ((l43).value = v2554);
                        });
                        var args = [pv, 0];
                        return (function(){
                            var values = mv;
                            var vs;
                            vs = v2551;
                            if (typeof vs === 'object' && 'multiple-value' in vs)
                                args = args.concat(vs);
                            else
                                args.push(vs);
                            args[1] = args.length-2;
                            return func.apply(window, args);
                        })();
                    })();
                })();
                (function(v2555){
                    return (function(){
                        (function(){
                            return (function(){
                                var func = (function (values,nargs,v2557){
                                    switch(nargs){
                                    case 0:
                                        v2557=l5.value;
                                    default: break;
                                    }
                                    var v2556= l5.value;
                                    for (var i = nargs-1; i>=1; i--)
                                        v2556 = {car: arguments[i+2], cdr: v2556};
                                    return ((l1238).value = v2557);
                                });
                                var args = [pv, 0];
                                return (function(){
                                    var values = mv;
                                    var vs;
                                    vs = (function(){
                                        var symbol = l1237;
                                        var value = symbol.value;
                                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                        return value;
                                    })();
                                    if (typeof vs === 'object' && 'multiple-value' in vs)
                                        args = args.concat(vs);
                                    else
                                        args.push(vs);
                                    args[1] = args.length-2;
                                    return func.apply(window, args);
                                })();
                            })();
                        })();
                        (function(){
                            return (function(){
                                var func = (function (values,nargs,v2559){
                                    switch(nargs){
                                    case 0:
                                        v2559=l5.value;
                                    default: break;
                                    }
                                    var v2558= l5.value;
                                    for (var i = nargs-1; i>=1; i--)
                                        v2558 = {car: arguments[i+2], cdr: v2558};
                                    return ((l1237).value = v2559);
                                });
                                var args = [pv, 0];
                                return (function(){
                                    var values = mv;
                                    var vs;
                                    vs = (function(){
                                        var symbol = l22;
                                        var value = symbol.value;
                                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                        return value;
                                    })();
                                    if (typeof vs === 'object' && 'multiple-value' in vs)
                                        args = args.concat(vs);
                                    else
                                        args.push(vs);
                                    args[1] = args.length-2;
                                    return func.apply(window, args);
                                })();
                            })();
                        })();
                        (function(){
                            return (function(){
                                var func = (function (values,nargs,v2561){
                                    switch(nargs){
                                    case 0:
                                        v2561=l5.value;
                                    default: break;
                                    }
                                    var v2560= l5.value;
                                    for (var i = nargs-1; i>=1; i--)
                                        v2560 = {car: arguments[i+2], cdr: v2560};
                                    return ((l22).value = v2561);
                                });
                                var args = [pv, 0];
                                return (function(){
                                    var values = mv;
                                    var vs;
                                    vs = v2555;
                                    if (typeof vs === 'object' && 'multiple-value' in vs)
                                        args = args.concat(vs);
                                    else
                                        args.push(vs);
                                    args[1] = args.length-2;
                                    return func.apply(window, args);
                                })();
                            })();
                        })();
                        (function(){
                            return (function(){
                                var func = (function (values,nargs,v2563){
                                    switch(nargs){
                                    case 0:
                                        v2563=l5.value;
                                    default: break;
                                    }
                                    var v2562= l5.value;
                                    for (var i = nargs-1; i>=1; i--)
                                        v2562 = {car: arguments[i+2], cdr: v2562};
                                    return ((l1236).value = v2563);
                                });
                                var args = [pv, 0];
                                return (function(){
                                    var values = mv;
                                    var vs;
                                    vs = (function(){
                                        var symbol = l1235;
                                        var value = symbol.value;
                                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                        return value;
                                    })();
                                    if (typeof vs === 'object' && 'multiple-value' in vs)
                                        args = args.concat(vs);
                                    else
                                        args.push(vs);
                                    args[1] = args.length-2;
                                    return func.apply(window, args);
                                })();
                            })();
                        })();
                        (function(){
                            return (function(){
                                var func = (function (values,nargs,v2565){
                                    switch(nargs){
                                    case 0:
                                        v2565=l5.value;
                                    default: break;
                                    }
                                    var v2564= l5.value;
                                    for (var i = nargs-1; i>=1; i--)
                                        v2564 = {car: arguments[i+2], cdr: v2564};
                                    return ((l1235).value = v2565);
                                });
                                var args = [pv, 0];
                                return (function(){
                                    var values = mv;
                                    var vs;
                                    vs = (function(){
                                        var symbol = l21;
                                        var value = symbol.value;
                                        if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                        return value;
                                    })();
                                    if (typeof vs === 'object' && 'multiple-value' in vs)
                                        args = args.concat(vs);
                                    else
                                        args.push(vs);
                                    args[1] = args.length-2;
                                    return func.apply(window, args);
                                })();
                            })();
                        })();
                        return (function(){
                            return (function(){
                                var func = (function (values,nargs,v2567){
                                    switch(nargs){
                                    case 0:
                                        v2567=l5.value;
                                    default: break;
                                    }
                                    var v2566= l5.value;
                                    for (var i = nargs-1; i>=1; i--)
                                        v2566 = {car: arguments[i+2], cdr: v2566};
                                    return ((l21).value = v2567);
                                });
                                var args = [pv, 0];
                                return (function(){
                                    var values = mv;
                                    var vs;
                                    vs = (function(){
                                        var tmp = v2555;
                                        return tmp === l5.value? l5.value: tmp.car;
                                    })();
                                    if (typeof vs === 'object' && 'multiple-value' in vs)
                                        args = args.concat(vs);
                                    else
                                        args.push(vs);
                                    args[1] = args.length-2;
                                    return func.apply(window, args);
                                })();
                            })();
                        })();
                    })();
                })((function(){
                    var func = (function(){
                        var symbol = l92;
                        var func = symbol.fvalue;
                        if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                        return func;
                    })();
                    var args = [pv, 0];
                    return (function(){
                        var values = mv;
                        var vs;
                        vs = l322.fvalue(values, 1, v2551);
                        if (typeof vs === 'object' && 'multiple-value' in vs)
                            args = args.concat(vs);
                        else
                            args.push(vs);
                        args[1] = args.length-2;
                        return func.apply(window, args);
                    })();
                })());
                (((l21.value !== undefined)?l4.value: l5.value) !== l5.value ? l5.value : (function(){
                    return (function(){
                        var func = (function (values,nargs,v2569){
                            switch(nargs){
                            case 0:
                                v2569=l5.value;
                            default: break;
                            }
                            var v2568= l5.value;
                            for (var i = nargs-1; i>=1; i--)
                                v2568 = {car: arguments[i+2], cdr: v2568};
                            return ((l21).value = v2569);
                        });
                        var args = [pv, 0];
                        return (function(){
                            var values = mv;
                            var vs;
                            vs = l5.value;
                            if (typeof vs === 'object' && 'multiple-value' in vs)
                                args = args.concat(vs);
                            else
                                args.push(vs);
                            args[1] = args.length-2;
                            return func.apply(window, args);
                        })();
                    })();
                })());
                (function(){
                    (function(){
                        return (function(){
                            var func = (function (values,nargs,v2571){
                                switch(nargs){
                                case 0:
                                    v2571=l5.value;
                                default: break;
                                }
                                var v2570= l5.value;
                                for (var i = nargs-1; i>=1; i--)
                                    v2570 = {car: arguments[i+2], cdr: v2570};
                                return ((l1240).value = v2571);
                            });
                            var args = [pv, 0];
                            return (function(){
                                var values = mv;
                                var vs;
                                vs = (function(){
                                    var symbol = l1239;
                                    var value = symbol.value;
                                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                    return value;
                                })();
                                if (typeof vs === 'object' && 'multiple-value' in vs)
                                    args = args.concat(vs);
                                else
                                    args.push(vs);
                                args[1] = args.length-2;
                                return func.apply(window, args);
                            })();
                        })();
                    })();
                    (function(){
                        return (function(){
                            var func = (function (values,nargs,v2573){
                                switch(nargs){
                                case 0:
                                    v2573=l5.value;
                                default: break;
                                }
                                var v2572= l5.value;
                                for (var i = nargs-1; i>=1; i--)
                                    v2572 = {car: arguments[i+2], cdr: v2572};
                                return ((l1239).value = v2573);
                            });
                            var args = [pv, 0];
                            return (function(){
                                var values = mv;
                                var vs;
                                vs = (function(){
                                    var symbol = l42;
                                    var value = symbol.value;
                                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                    return value;
                                })();
                                if (typeof vs === 'object' && 'multiple-value' in vs)
                                    args = args.concat(vs);
                                else
                                    args.push(vs);
                                args[1] = args.length-2;
                                return func.apply(window, args);
                            })();
                        })();
                    })();
                    return (function(){
                        return (function(){
                            var func = (function (values,nargs,v2575){
                                switch(nargs){
                                case 0:
                                    v2575=l5.value;
                                default: break;
                                }
                                var v2574= l5.value;
                                for (var i = nargs-1; i>=1; i--)
                                    v2574 = {car: arguments[i+2], cdr: v2574};
                                return ((l42).value = v2575);
                            });
                            var args = [pv, 0];
                            return (function(){
                                var values = mv;
                                var vs;
                                vs = (function(){
                                    var symbol = l43;
                                    var value = symbol.value;
                                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                                    return value;
                                })();
                                if (typeof vs === 'object' && 'multiple-value' in vs)
                                    args = args.concat(vs);
                                else
                                    args.push(vs);
                                args[1] = args.length-2;
                                return func.apply(window, args);
                            })();
                        })();
                    })();
                })();
                return l109.fvalue(values, 1, (function(){
                    var symbol = l22;
                    var value = symbol.value;
                    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
                    return value;
                })());
            })();
        });
        func.fname = 'EVAL-INTERACTIVE';
        return func;
    })();
    return l1241;
})();
var l1242 = (new Symbol(make_lisp_string("OTHERWISE")));
var l1243 = QIList(l402,l399,l397,l398,l21,l1235,l1236,l324,l14,l303,l235,l42,l1239,l1240,l43,l22,l1237,l1238,l23,l24,l956,l960,l20,l20,l954,l958,l193,l202,l70,l37,l46,l1095,l1167,l1163,l95,l69,l528,l18,l190,l161,l162,l154,l163,l164,l155,l152,l165,l166,l156,l167,l139,l137,l135,l131,l131,l35,l774,l168,l169,l157,l170,l171,l158,l153,l172,l173,l159,l174,l141,l160,l149,l132,l132,l205,l63,l64,l62,l34,l127,l128,l61,l195,l180,l181,l30,l2,l473,l3,l97,l551,l1,l10,l11,l9,l488,l72,l71,l79,l51,l52,l81,l32,l33,l36,l144,l1039,l27,l74,l78,l322,l215,l316,l970,l76,l140,l210,l245,l241,l133,l696,l112,l138,l19,l1014,l1087,l82,l1144,l15,l104,l91,l106,l833,l60,l485,l304,l29,l65,l313,l203,l302,l703,l6,l189,l54,l725,l486,l328,l92,l148,l279,l56,l59,l1150,l280,l1006,l188,l120,l191,l68,l948,l88,l853,l89,l872,l199,l5,l145,l28,l201,l151,l150,l44,l963,l38,l1242,l246,l292,l267,l194,l385,l67,l185,l271,l275,l550,l41,l39,l40,l196,l50,l31,l389,l192,l394,l214,l216,l219,l12,l762,l48,l49,l197,l198,l134,l650,l98,l93,l143,l142,l102,l125,l1066,l75,l204,l175,l220,l184,l692,l1009,l237,l1032,l1021,l1003,l4,l798,l183,l146,l136,l786,l182,l26,l8,l844,l111,l109,l84,l1157,l273,l7,l80,l1147,l25,l5);
l316.fvalue(pv, 1, l1243);
((l303).value = (function(){
    var symbol = l298;
    var value = symbol.value;
    if (value === undefined) throw "Variable `" + xstring(symbol.name) + "' is unbound.";
    return value;
})());
var l1244 = make_lisp_string("var lisp");
globalEval(xstring(l1244));
(lisp = lisp_to_js({}));
(lisp.read = lisp_to_js((function(){
    var symbol = l393;
    var func = symbol.fvalue;
    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
    return func;
})()));
(lisp.print = lisp_to_js((function(){
    var symbol = l271;
    var func = symbol.fvalue;
    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
    return func;
})()));
(lisp.eval = lisp_to_js((function(){
    var symbol = l322;
    var func = symbol.fvalue;
    if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
    return func;
})()));
(lisp.compile = lisp_to_js((function (values,nargs,v2576){
    checkArgs(nargs, 1);
    return l1231.fvalue(values, 2, v2576, l4.value);
})));
(lisp.evalString = lisp_to_js((function (values,nargs,v2577){
    checkArgs(nargs, 1);
    return l322.fvalue(values, 1, l393.fvalue(pv, 1, v2577));
})));
(lisp.evalInput = lisp_to_js((function (values,nargs,v2578){
    checkArgs(nargs, 1);
    return l1241.fvalue(values, 1, l393.fvalue(pv, 1, v2578));
})));
(lisp.compileString = lisp_to_js((function (values,nargs,v2579){
    checkArgs(nargs, 1);
    return l1231.fvalue(values, 2, l393.fvalue(pv, 1, v2579), l4.value);
})));
var l1245 = (new Symbol(make_lisp_string("X")));
var l1246 = (new Symbol(make_lisp_string("ARGS")));
var l1247 = QIList(l1245,l398,l1246,l5);
var l1248 = QIList(QIList(l1246,QIList(l127,l1245,l1246,l5),l5),l5);
var l1249 = make_lisp_string("`~S' is not a symbol.");
var l1250 = QIList(l941,l113,l5);
var l1251 = QIList(l924,l113,l5);
var l1252 = QIList(l932,l113,l5);
var l1253 = QIList(l937,l113,l5);
var l1254 = QIList(l907,l5);
var l1255 = QIList(l552,l5);
var l1256 = QIList(l581,l5);
var l1257 = make_lisp_string("It is not a full defstruct implementation.");
var l1258 = make_lisp_string("Bad slot description `~S'.");
var l1259 = make_lisp_string("-P");
var l1260 = make_lisp_string("MAKE-");
var l1261 = QIList(l1245,l5);
var l1262 = QIList(l128,l1245,l5);
var l1263 = QIList(l131,l1245,l5);
var l1264 = make_lisp_string("COPY-");
var l1265 = QIList(QIList(l1245,l5),QIList(l180,l1245,l5),l5);
var l1266 = make_lisp_string("-");
var l1267 = QIList(l1245,l5);
var l1268 = QIList(l1245,l5);
var l1269 = QIList(l1245,l5);
var l1270 = QIList(l1245,l5);
var l1271 = (new Symbol(make_lisp_string("OBJECT")));
var l1272 = (new Symbol(make_lisp_string("NEW-VALUE")));
var l1273 = QIList(QIList(l1271,QIList(l15,l5),l5),QIList(l1272,QIList(l15,l5),l5),l5);
var l1274 = QIList(l92,l1271,l5);
var l1275 = QIList(l92,l1245,l5);
var l1276 = QIList(l92,l1272,l5);
var l1277 = QIList(l389,l196,l5);
var l1278 = QIList(l389,l197,l5);
var l1279 = QIList(l389,l150,l5);
var l1280 = QIList(l1271,l5);
var l1281 = QIList(l1272,l5);
var l1282 = QIList(l1272,l5);
var l1283 = QIList(l1271,l5);
var l1284 = make_lisp_string("i");
var l1285 = make_lisp_string("seq");
var l1286 = make_lisp_string("`~S' must be a symbol.");
var l1287 = QIList(-1,l5);
var l1288 = (new Symbol(make_lisp_string("IT")));
var l1289 = (new Symbol(make_lisp_string("INTEGER")));
var l1290 = (new Symbol(make_lisp_string("SYMBOL")));
var l1291 = (new Symbol(make_lisp_string("ARRAY")));
var l1292 = make_lisp_string("Odd number of arguments to setf.");
var l1293 = make_lisp_string("ACCESS-FN `~S' must be a symbol.");
var l1294 = QIList(l90,l5);
var l1295 = QIList(l82,l92,l5);
var l1296 = QIList(QIList(l127,QIList(l389,l187,l5),l5,l5),l5);
var l1297 = (new Symbol(make_lisp_string("COLLECT")));
var l1298 = QIList(l1245,l5);
var l1299 = QIList(QIList(l127,l1245,l5,l5),l5);
var l1300 = QIList(l1245,l5);
var l1301 = make_lisp_string("Odd paris in PSETQ");
var l1302 = QIList(l5,l5);
var l1303 = make_lisp_string("`~S' is not a symbol.");
var l1304 = QIList(0,l5);
var l1305 = make_lisp_string("`~S' is not a symbol.");
var l1306 = QIList(l5,l5);
var l1307 = make_lisp_string("vardoc");
var l1308 = make_lisp_string("vardoc");
var l1309 = QIList(l5,l5);
var l1310 = make_lisp_string("vardoc");
var l1311 = QIList(l519,QIList(QIList(l507,l43,l84,l5,QIList(l547,l5),l5),QIList(l507,l1240,l84,l5,QIList(l547,l5),l5),QIList(l507,l1239,l84,l5,QIList(l547,l5),l5),QIList(l507,l42,l84,l5,QIList(l547,l5),l5),QIList(l507,l1238,l84,l5,QIList(l547,l5),l5),QIList(l507,l1237,l84,l5,QIList(l547,l5),l5),QIList(l507,l22,l84,l5,QIList(l547,l5),l5),QIList(l507,l1236,l84,l5,QIList(l547,l5),l5),QIList(l507,l1235,l84,l5,QIList(l547,l5),l5),QIList(l507,l21,l84,l5,QIList(l547,l5),l5),QIList(l507,l1228,l84,l5,QIList(l547,l5),l5),QIList(l507,l907,l84,l5,QIList(l547,l5),l5),QIList(l507,l890,l84,l5,QIList(l547,l5),l5),QIList(l507,l888,l84,l5,QIList(l547,l5),l5),QIList(l507,l886,l84,l5,QIList(l547,l5),l5),QIList(l507,l884,l84,l5,QIList(l547,l5),l5),QIList(l507,l882,l84,l5,QIList(l547,l5),l5),QIList(l507,l880,l84,l5,QIList(l547,l5),l5),QIList(l507,l878,l84,l5,QIList(l547,l5),l5),QIList(l507,l877,l84,l5,QIList(l547,l5),l5),QIList(l507,l876,l84,l5,QIList(l547,l5),l5),QIList(l507,l707,l84,l5,QIList(l547,l5),l5),QIList(l507,l660,l84,l5,QIList(l547,l5),l5),QIList(l507,l659,l84,l5,QIList(l547,l5),l5),QIList(l507,l657,l84,l5,QIList(l547,l5),l5),QIList(l507,l559,l84,l5,QIList(l547,l5),l5),QIList(l507,l552,l84,l5,QIList(l547,l5),l5),QIList(l507,l538,l84,l5,QIList(l547,l5),l5),QIList(l507,l533,l84,l5,QIList(l547,l5),l5),QIList(l507,l532,l84,l5,QIList(l547,l5),l5),QIList(l507,l501,l84,l5,QIList(l547,l5),l5),QIList(l507,l396,l84,l5,QIList(l547,l5),l5),QIList(l507,l341,l84,l5,QIList(l547,l5),l5),QIList(l507,l338,l84,l5,QIList(l547,l5),l5),QIList(l507,l336,l84,l5,QIList(l547,l5),l5),QIList(l507,l334,l84,l5,QIList(l547,l5),l5),QIList(l507,l330,l84,l5,QIList(l547,l5),l5),QIList(l507,l242,l84,l5,QIList(l547,l5),l5),QIList(l507,l312,l84,l5,QIList(l547,l5),l5),QIList(l507,l303,l84,l5,QIList(l547,l5),l5),QIList(l507,l300,l84,l5,QIList(l547,l5),l5),QIList(l507,l298,l84,l5,QIList(l547,l5),l5),QIList(l507,l296,l84,l5,QIList(l547,l5),l5),QIList(l507,l278,l84,l5,QIList(l547,l5),l5),QIList(l507,l235,l84,l5,QIList(l547,l5),l5),QIList(l507,l234,l84,l5,QIList(l547,l5),l5),QIList(l507,l113,l84,l5,QIList(l547,l5),l5),QIList(l507,l103,l84,l5,QIList(l549,l547,l5),l5),QIList(l507,l90,l84,l5,QIList(l547,l5),l5),QIList(l507,l14,l84,l5,QIList(l547,l5),l5),QIList(l507,l5,l84,l5,QIList(l549,l547,l5),l5),QIList(l507,l4,l84,l5,QIList(l549,l547,l5),l5),l5),QIList(QIList(l507,l953,l543,(function (values,nargs,v2580){
    checkArgs(nargs, 1);
    return (function(){
        var v2581 = l475.fvalue(pv, 2, v2580, 2);
        var v2582 = (function(){
            var tmp = v2581;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2583 = (function(){
            var tmp = (function(){
                var tmp = v2581;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2584 = l478.fvalue(pv, 1, (function(){
            var tmp = (function(){
                var tmp = v2581;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.cdr;
        })());
        return l92.fvalue(values, 4, l908, v2582, l1247, l92.fvalue(pv, 3, l725, l1248, l92.fvalue(pv, 3, l919, l1246, l92.fvalue(pv, 2, l491, l92.fvalue(pv, 3, l950, l1246, v2583)))));
    })();
}),l5,l5),QIList(l507,l919,l543,(function (values,nargs,v2585){
    checkArgs(nargs, 1);
    return (function(){
        var v2586 = l475.fvalue(pv, 2, v2585, 1);
        var v2587 = (function(){
            var tmp = v2586;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2588 = (function(){
            var tmp = v2586;
            return tmp === l5.value? l5.value: tmp.cdr;
        })();
        (((v2587 instanceof Symbol)?l4.value: l5.value) !== l5.value ? l5.value : l78.fvalue(pv, 2, l1249, v2587));
        return l92.fvalue(values, 3, l911, v2587, l92.fvalue(pv, 3, l6, l92.fvalue(pv, 1, v2587), l148.fvalue(pv, 3, l489, l939, l46.fvalue(pv, 2, v2588, l1250))));
    })();
}),l5,l5),QIList(l507,l910,l543,(function (values,nargs,v2589){
    checkArgs(nargs, 1);
    return (function(){
        var v2590 = l475.fvalue(pv, 2, v2589, 1);
        var v2591 = (function(){
            var tmp = v2590;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2592 = (function(){
            var tmp = v2590;
            return tmp === l5.value? l5.value: tmp.cdr;
        })();
        return ({car: l497, cdr: l46.fvalue(pv, 3, l120.fvalue(pv, 2, (function (values,nargs,v2593){
            checkArgs(nargs, 1);
            return l148.fvalue(values, 6, l489, l921, l133.fvalue(pv, 1, v2593), l923, l136.fvalue(pv, 1, v2593), l1251);
        }), v2591), l120.fvalue(pv, 2, (function (values,nargs,v2594){
            checkArgs(nargs, 1);
            return l92.fvalue(values, 8, l489, l926, l133.fvalue(pv, 1, v2594), l927, l134.fvalue(pv, 1, v2594), l929, l113, l148.fvalue(pv, 6, l498, l930, l133.fvalue(pv, 1, v2594), l931, l134.fvalue(pv, 1, v2594), l1252));
        }), v2591), l92.fvalue(pv, 1, l148.fvalue(pv, 4, l489, l934, ({car: l196, cdr: v2592}), l1253)))});
    })();
}),l5,l5),QIList(l507,l909,l543,(function (values,nargs,v2595){
    checkArgs(nargs, 1);
    return (function(){
        var v2596 = l475.fvalue(pv, 2, v2595, 2);
        var v2597 = (function(){
            var tmp = v2596;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2598 = (function(){
            var tmp = (function(){
                var tmp = v2596;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2599 = (function(){
            var tmp = (function(){
                var tmp = v2596;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.cdr;
        })();
        return l92.fvalue(values, 4, l908, v2597, v2598, l148.fvalue(pv, 3, l725, l120.fvalue(pv, 2, (function (values,nargs,v2600){
            checkArgs(nargs, 1);
            return l92.fvalue(values, 2, v2600, l92.fvalue(pv, 2, l494, v2600));
        }), v2598), v2599));
    })();
}),l5,l5),QIList(l507,l908,l543,(function (values,nargs,v2601){
    checkArgs(nargs, 1);
    return (function(){
        var v2602 = l475.fvalue(pv, 2, v2601, 2);
        var v2603 = (function(){
            var tmp = v2602;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2604 = (function(){
            var tmp = (function(){
                var tmp = v2602;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2605 = (function(){
            var tmp = (function(){
                var tmp = v2602;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.cdr;
        })();
        return l148.fvalue(values, 3, l31, l92.fvalue(pv, 3, l92, l92.fvalue(pv, 2, l389, v2603), l92.fvalue(pv, 3, l6, v2604, l148.fvalue(pv, 3, l528, v2603, v2605))), l1254);
    })();
}),l5,l5),QIList(l507,l390,l543,(function (values,nargs,v2606){
    checkArgs(nargs, 1);
    return (function(){
        var v2607 = l475.fvalue(pv, 2, v2606, 1);
        var v2608 = (function(){
            var tmp = v2607;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2609 = l478.fvalue(pv, 1, (function(){
            var tmp = v2607;
            return tmp === l5.value? l5.value: tmp.cdr;
        })());
        return l892.fvalue(values, 1, v2608);
    })();
}),l5,l5),QIList(l507,l709,l543,(function (values,nargs,v2610){
    checkArgs(nargs, 1);
    return (function(){
        var v2611 = l475.fvalue(pv, 2, v2610, 3);
        var v2612 = (function(){
            var tmp = v2611;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2613 = (function(){
            var tmp = (function(){
                var tmp = v2611;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2614 = (function(){
            var tmp = (function(){
                var tmp = (function(){
                    var tmp = v2611;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })();
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2615 = l478.fvalue(pv, 1, (function(){
            var tmp = (function(){
                var tmp = (function(){
                    var tmp = v2611;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })();
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.cdr;
        })());
        return l92.fvalue(values, 4, l553, v2612, v2613, l92.fvalue(pv, 2, l494, v2614));
    })();
}),l5,l5),QIList(l507,l553,l543,(function (values,nargs,v2616){
    checkArgs(nargs, 1);
    return (function(){
        var v2617 = l475.fvalue(pv, 2, v2616, 2);
        var v2618 = (function(){
            var tmp = v2617;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2619 = (function(){
            var tmp = (function(){
                var tmp = v2617;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2620 = (function(){
            var tmp = (function(){
                var tmp = v2617;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.cdr;
        })();
        return l148.fvalue(values, 3, l31, l92.fvalue(pv, 3, l92, l92.fvalue(pv, 2, l389, v2618), l92.fvalue(pv, 3, l6, v2619, l148.fvalue(pv, 3, l528, v2618, v2620))), l1255);
    })();
}),l5,l5),QIList(l507,l551,l543,(function (values,nargs,v2621){
    checkArgs(nargs, 1);
    return (function(){
        var v2622 = l475.fvalue(pv, 2, v2621, 2);
        var v2623 = (function(){
            var tmp = v2622;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2624 = (function(){
            var tmp = (function(){
                var tmp = v2622;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2625 = l478.fvalue(pv, 1, (function(){
            var tmp = (function(){
                var tmp = v2622;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.cdr;
        })());
        return l92.fvalue(values, 3, l323, l92.fvalue(pv, 2, l389, v2623), l92.fvalue(pv, 2, l389, v2624));
    })();
}),l5,l5),QIList(l507,l497,l543,(function (values,nargs,v2626){
    checkArgs(nargs, 1);
    return (function(){
        var v2627 = l475.fvalue(pv, 2, v2626, 0);
        var v2628 = v2627;
        return l148.fvalue(values, 5, l489, l573, l113, ({car: l498, cdr: v2628}), l1256);
    })();
}),l5,l5),QIList(l507,l488,l543,(function (values,nargs,v2629,v2630){
    checkArgsAtLeast(nargs, 1);
    checkArgsAtMost(nargs, 2);
    switch(nargs){
    case 1:
        v2630=l5.value;
    default: break;
    }
    return (function(){
        var f = (function(){
            var symbol = l484;
            var func = symbol.fvalue;
            if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
            return func;
        })();
        var args = [values, 0];
        var tail = (v2629);
        while (tail != l5.value){
            args.push(tail.car);
            args[1] += 1;
            tail = tail.cdr;
        }
        return (typeof f === 'function'? f : f.fvalue).apply(this, args);
    })();
}),l5,l5),QIList(l507,l487,l543,(function (values,nargs,v2631,v2632){
    checkArgsAtLeast(nargs, 1);
    checkArgsAtMost(nargs, 2);
    switch(nargs){
    case 1:
        v2632=l5.value;
    default: break;
    }
    return (function(){
        var f = (function(){
            var symbol = l484;
            var func = symbol.fvalue;
            if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
            return func;
        })();
        var args = [values, 0];
        var tail = (v2631);
        while (tail != l5.value){
            args.push(tail.car);
            args[1] += 1;
            tail = tail.cdr;
        }
        return (typeof f === 'function'? f : f.fvalue).apply(this, args);
    })();
}),l5,l5),QIList(l507,l470,l543,(function (values,nargs,v2633){
    checkArgs(nargs, 1);
    return (function(){
        var v2634 = l475.fvalue(pv, 2, v2633, 3);
        var v2635 = (function(){
            var tmp = v2634;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2636 = (function(){
            var tmp = (function(){
                var tmp = v2634;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2637 = (function(){
            var tmp = (function(){
                var tmp = (function(){
                    var tmp = v2634;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })();
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2638 = (function(){
            var tmp = (function(){
                var tmp = (function(){
                    var tmp = v2634;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })();
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.cdr;
        })();
        return (function(v2639){
            return l92.fvalue(values, 3, l725, l92.fvalue(pv, 1, l92.fvalue(pv, 2, v2639, v2637)), l92.fvalue(pv, 4, l13, v2639, l148.fvalue(pv, 3, l725, l92.fvalue(pv, 2, l92.fvalue(pv, 2, v2635, l92.fvalue(pv, 2, l131, v2639)), l92.fvalue(pv, 2, v2636, l92.fvalue(pv, 2, l135, v2639))), v2638), l92.fvalue(pv, 3, l93, v2639, l92.fvalue(pv, 2, l149, v2639))));
        })(l15.fvalue(pv, 0));
    })();
}),l5,l5),QIList(l507,l395,l543,(function (values,nargs,v2640){
    checkArgs(nargs, 1);
    return (function(){
        var v2641 = l475.fvalue(pv, 2, v2640, 1);
        var v2642 = (function(){
            var tmp = v2641;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2643 = (function(){
            var tmp = v2641;
            return tmp === l5.value? l5.value: tmp.cdr;
        })();
        (((v2642 instanceof Symbol)?l4.value: l5.value) !== l5.value ? l5.value : l78.fvalue(pv, 1, l1257));
        return (function(){
            var v2644 = (v2642).name;
            var v2645 = l120.fvalue(pv, 2, (function (values,nargs,v2646){
                checkArgs(nargs, 1);
                return (((v2646 instanceof Symbol)?l4.value: l5.value) !== l5.value ? l92.fvalue(values, 1, v2646) : ((l56.fvalue(pv, 1, v2646) !== l5.value ? ((function(){
                    var tmp = v2646;
                    return tmp === l5.value? l5.value: tmp.car;
                })() !== l5.value ? l149.fvalue(pv, 1, v2646) : l5.value) : l5.value) !== l5.value ? v2646 : l78.fvalue(values, 2, l1258, v2646)));
            }), v2643);
            var v2647 = l313.fvalue(pv, 1, l107.fvalue(pv, 2, v2644, l1259));
            return l148.fvalue(values, 5, l196, l92.fvalue(pv, 4, l11, l313.fvalue(pv, 1, l107.fvalue(pv, 2, l1260, v2644)), ({car: l399, cdr: v2645}), l148.fvalue(pv, 3, l92, l92.fvalue(pv, 2, l389, v2642), l120.fvalue(pv, 2, (function(){
                var symbol = l131;
                var func = symbol.fvalue;
                if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                return func;
            })(), v2645))), l92.fvalue(pv, 4, l11, v2647, l1261, l92.fvalue(pv, 3, l37, l1262, l92.fvalue(pv, 3, l1039, l1263, l92.fvalue(pv, 2, l389, v2642)))), l148.fvalue(pv, 3, l11, l313.fvalue(pv, 1, l107.fvalue(pv, 2, l1264, v2644)), l1265), l46.fvalue(pv, 2, (function(){
                var v2648 = ({car: l187, cdr: l5.value});
                var v2649 = v2648;
                (function(v2652){
                    return (function(v2653){
                        return (function(){
                            return (function(v2655,v2656){
                                (function(){
                                    while(v2655 !== l5.value){
                                        (v2656 = (function(){
                                            var tmp = v2655;
                                            return tmp === l5.value? l5.value: tmp.car;
                                        })());
                                        (function(){
                                            (function(){
                                                var v2657 = (function(){
                                                    var tmp = v2656;
                                                    return tmp === l5.value? l5.value: tmp.car;
                                                })();
                                                var v2658 = l313.fvalue(pv, 1, l107.fvalue(pv, 3, v2644, l1266, l125.fvalue(pv, 1, v2657)));
                                                v2652(pv, 1, l92.fvalue(pv, 5, l11, v2658, l1267, l92.fvalue(pv, 3, l8, ({car: v2647, cdr: l1268}), l92.fvalue(pv, 4, l78, l412, l1245, v2644)), l148.fvalue(pv, 3, l151, v2653, l1269)));
                                                v2652(pv, 1, l92.fvalue(pv, 4, l97, v2658, l1270, l92.fvalue(pv, 3, l725, l1273, l92.fvalue(pv, 6, l111, l1274, l1275, l1276, l148.fvalue(pv, 4, l92, l1277, l148.fvalue(pv, 4, l92, l1278, l148.fvalue(pv, 4, l92, l1279, l92.fvalue(pv, 2, l389, v2653), l1280), l1281), l1282), l148.fvalue(pv, 3, l92, l92.fvalue(pv, 2, l389, v2658), l1283)))));
                                                return (function(){
                                                    var v2659 = 1;
                                                    var v2660 = (function(){
                                                        var x1 = v2653;
                                                        if (typeof x1 !== 'number') throw 'Not a number!';
                                                        var x2 = v2659;
                                                        if (typeof x2 !== 'number') throw 'Not a number!';
                                                        return x1+x2;
                                                    })();
                                                    return (v2653 = v2660);
                                                })();
                                            })();
                                            return l5.value;
                                        })();
                                        (v2655 = (function(){
                                            var tmp = v2655;
                                            return tmp === l5.value? l5.value: tmp.cdr;
                                        })());
                                    }return l5.value;
                                })();
                                return l5.value;
                            })(v2645,l5.value);
                        })();
                    })(1);
                })((function (values,nargs,v2650){
                    checkArgs(nargs, 1);
                    return (function(){
                        (function(){
                            var x = v2649;
                            if (typeof x != 'object')
                                throw 'The value ' + x + ' is not a type object.';
                            return (x.cdr = ({car: v2650, cdr: l5.value}), x);
                        })();
                        (v2649 = (function(){
                            var tmp = v2649;
                            return tmp === l5.value? l5.value: tmp.cdr;
                        })());
                        return v2650;
                    })();
                }));
                return (function(){
                    var tmp = v2648;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })();
            })(), l92.fvalue(pv, 1, l92.fvalue(pv, 2, l389, v2642))));
        })();
    })();
}),l5,l5),QIList(l507,l304,l543,(function (values,nargs,v2661){
    checkArgs(nargs, 1);
    return (function(){
        var v2662 = l475.fvalue(pv, 2, v2661, 1);
        var v2663 = (function(){
            var tmp = v2662;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2664 = l478.fvalue(pv, 1, (function(){
            var tmp = v2662;
            return tmp === l5.value? l5.value: tmp.cdr;
        })());
        return l92.fvalue(values, 2, l708, l92.fvalue(pv, 3, l93, l303, l92.fvalue(pv, 2, l282, v2663)));
    })();
}),l5,l5),QIList(l507,l209,l543,(function (values,nargs,v2665){
    checkArgs(nargs, 1);
    return (function(){
        var v2666 = l475.fvalue(pv, 2, v2665, 1);
        var v2667 = l475.fvalue(pv, 2, (function(){
            var tmp = v2666;
            return tmp === l5.value? l5.value: tmp.car;
        })(), 2);
        var v2668 = (function(){
            var tmp = v2667;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2669 = (function(){
            var tmp = (function(){
                var tmp = v2667;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2670 = l28.fvalue(pv, 1, l44.fvalue(pv, 1, (function(){
            var tmp = (function(){
                var tmp = v2667;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.cdr;
        })()));
        var v2671 = (l44.fvalue(pv, 1, (function(){
            var tmp = (function(){
                var tmp = v2667;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.cdr;
        })()) !== l5.value ? l15.fvalue(pv, 1, l1284) : (function(){
            var tmp = (function(){
                var tmp = (function(){
                    var tmp = v2667;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })();
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.car;
        })());
        var v2672 = l478.fvalue(pv, 1, (function(){
            var tmp = (function(){
                var tmp = (function(){
                    var tmp = v2667;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })();
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.cdr;
        })());
        var v2673 = (function(){
            var tmp = v2666;
            return tmp === l5.value? l5.value: tmp.cdr;
        })();
        return (function(v2674){
            (((v2668 instanceof Symbol)?l4.value: l5.value) !== l5.value ? l5.value : l78.fvalue(pv, 2, l1286, v2668));
            return l92.fvalue(values, 3, l725, l92.fvalue(pv, 1, l92.fvalue(pv, 2, v2674, v2669)), l92.fvalue(pv, 4, l485, l92.fvalue(pv, 2, l56, v2674), (v2670 !== l5.value ? l92.fvalue(pv, 3, l725, l92.fvalue(pv, 1, ({car: v2671, cdr: l1287})), l148.fvalue(pv, 4, l32, l92.fvalue(pv, 2, v2668, v2674), l92.fvalue(pv, 2, l29, v2671), v2673)) : l148.fvalue(pv, 3, l32, l92.fvalue(pv, 2, v2668, v2674), v2673)), l92.fvalue(pv, 3, l33, l92.fvalue(pv, 2, v2671, l92.fvalue(pv, 2, l54, v2674)), l148.fvalue(pv, 3, l725, l92.fvalue(pv, 1, l92.fvalue(pv, 2, v2668, l92.fvalue(pv, 3, l1167, v2674, v2671))), v2673))));
        })(l15.fvalue(pv, 1, l1285));
    })();
}),l5,l5),QIList(l507,l185,l543,(function (values,nargs,v2675){
    checkArgs(nargs, 1);
    return (function(){
        var v2676 = l475.fvalue(pv, 2, v2675, 1);
        var v2677 = (function(){
            var tmp = v2676;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2678 = l478.fvalue(pv, 1, (function(){
            var tmp = v2676;
            return tmp === l5.value? l5.value: tmp.cdr;
        })());
        return (function(){
            var func = (function (values,nargs,v2680,v2681,v2682,v2683,v2684){
                switch(nargs){
                case 0:
                    v2680=l5.value;
                case 1:
                    v2681=l5.value;
                case 2:
                    v2682=l5.value;
                case 3:
                    v2683=l5.value;
                case 4:
                    v2684=l5.value;
                default: break;
                }
                var v2679= l5.value;
                for (var i = nargs-1; i>=5; i--)
                    v2679 = {car: arguments[i+2], cdr: v2679};
                return (function(v2685){
                    return l92.fvalue(values, 4, l486, l46.fvalue(pv, 2, l120.fvalue(pv, 3, (function(){
                        var symbol = l92;
                        var func = symbol.fvalue;
                        if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                        return func;
                    })(), v2680, v2681), l148.fvalue(pv, 3, l92.fvalue(pv, 2, v2685, v2684), l92.fvalue(pv, 2, (function(){
                        var tmp = v2682;
                        return tmp === l5.value? l5.value: tmp.car;
                    })(), l92.fvalue(pv, 2, l132, v2685)), (function(){
                        var tmp = v2682;
                        return tmp === l5.value? l5.value: tmp.cdr;
                    })())), v2683, l92.fvalue(pv, 2, l131, v2685));
                })(l15.fvalue(pv, 0));
            });
            var args = [values, 0];
            return (function(){
                var values = mv;
                var vs;
                vs = l91.fvalue(values, 1, v2677);
                if (typeof vs === 'object' && 'multiple-value' in vs)
                    args = args.concat(vs);
                else
                    args.push(vs);
                args[1] = args.length-2;
                return func.apply(window, args);
            })();
        })();
    })();
}),l5,l5),QIList(l507,l122,l543,(function (values,nargs,v2686){
    checkArgs(nargs, 1);
    return (function(){
        var v2687 = l475.fvalue(pv, 2, v2686, 1);
        var v2688 = (function(){
            var tmp = v2687;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2689 = (function(){
            var tmp = v2687;
            return tmp === l5.value? l5.value: tmp.cdr;
        })();
        return l92.fvalue(values, 3, l725, l92.fvalue(pv, 1, l92.fvalue(pv, 2, l1288, v2688)), l148.fvalue(pv, 3, l7, l1288, v2689));
    })();
}),l5,l5),QIList(l507,l115,l543,(function (values,nargs,v2690){
    checkArgs(nargs, 1);
    return (function(){
        var v2691 = l475.fvalue(pv, 2, v2690, 1);
        var v2692 = (function(){
            var tmp = v2691;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2693 = (function(){
            var tmp = v2691;
            return tmp === l5.value? l5.value: tmp.cdr;
        })();
        return l92.fvalue(values, 3, l93, v2692, l92.fvalue(pv, 3, l107, v2692, ({car: l196, cdr: v2693})));
    })();
}),l5,l5),QIList(l507,l100,l543,(function (values,nargs,v2694){
    checkArgs(nargs, 1);
    return (function(){
        var v2695 = l475.fvalue(pv, 2, v2694, 1);
        var v2696 = (function(){
            var tmp = v2695;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2697 = (function(){
            var tmp = v2695;
            return tmp === l5.value? l5.value: tmp.cdr;
        })();
        return (function(v2698){
            return l92.fvalue(values, 3, l725, l92.fvalue(pv, 1, l92.fvalue(pv, 2, v2698, v2696)), l148.fvalue(pv, 3, l99, v2698, l46.fvalue(pv, 2, v2697, l92.fvalue(pv, 1, l92.fvalue(pv, 2, l4, l92.fvalue(pv, 3, l78, l454, v2698))))));
        })(l15.fvalue(pv, 0));
    })();
}),l5,l5),QIList(l507,l99,l543,(function (values,nargs,v2699){
    checkArgs(nargs, 1);
    return (function(){
        var v2700 = l475.fvalue(pv, 2, v2699, 1);
        var v2701 = (function(){
            var tmp = v2700;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2702 = (function(){
            var tmp = v2700;
            return tmp === l5.value? l5.value: tmp.cdr;
        })();
        return (function(v2703){
            return l92.fvalue(values, 3, l725, l92.fvalue(pv, 1, l92.fvalue(pv, 2, v2703, v2701)), ({car: l34, cdr: l120.fvalue(pv, 2, (function (values,nargs,v2704){
                checkArgs(nargs, 1);
                return ((((function(){
                    var tmp = v2704;
                    return tmp === l5.value? l5.value: tmp.car;
                })() === l4.value)?l4.value: l5.value) !== l5.value ? l92.fvalue(values, 1, ({car: l4, cdr: l147.fvalue(pv, 1, v2704)})) : ({car: l92.fvalue(pv, 2, (function(v2705){
                    return (function(v2706){
                        return (l27.fvalue(pv, 2, v2706, l1289) !== l5.value ? (function(){
                            l5.value;
                            return l65;
                        })() : (l27.fvalue(pv, 2, v2706, l127) !== l5.value ? (function(){
                            l5.value;
                            return l128;
                        })() : (l27.fvalue(pv, 2, v2706, l1290) !== l5.value ? (function(){
                            l5.value;
                            return l1003;
                        })() : (l27.fvalue(pv, 2, v2706, l1291) !== l5.value ? (function(){
                            l5.value;
                            return l1163;
                        })() : (l27.fvalue(pv, 2, v2706, l125) !== l5.value ? (function(){
                            l5.value;
                            return l204;
                        })() : (l27.fvalue(pv, 2, v2706, l69) !== l5.value ? (function(){
                            l5.value;
                            return l69;
                        })() : (l27.fvalue(pv, 2, v2706, l44) !== l5.value ? (function(){
                            l5.value;
                            return l44;
                        })() : (function(){
                            l5.value;
                            return l78.fvalue(pv, 2, l87, v2705);
                        })())))))));
                    })(v2705);
                })((function(){
                    var tmp = v2704;
                    return tmp === l5.value? l5.value: tmp.car;
                })()), v2703), cdr: (function(v2707){
                    return (v2707 !== l5.value ? v2707 : l92.fvalue(pv, 1, l5.value));
                })(l147.fvalue(pv, 1, v2704))}));
            }), v2702)}));
        })(l15.fvalue(pv, 0));
    })();
}),l5,l5),QIList(l507,l98,l543,(function (values,nargs,v2708){
    checkArgs(nargs, 1);
    return (function(){
        var v2709 = l475.fvalue(pv, 2, v2708, 0);
        var v2710 = v2709;
        return (l44.fvalue(pv, 1, v2710) !== l5.value ? l5.value : (l44.fvalue(pv, 1, (function(){
            var tmp = v2710;
            return tmp === l5.value? l5.value: tmp.cdr;
        })()) !== l5.value ? l78.fvalue(values, 1, l1292) : (l44.fvalue(pv, 1, l149.fvalue(pv, 1, v2710)) !== l5.value ? (function(v2711,v2712){
            return (function(){
                var func = (function (values,nargs,v2714,v2715,v2716,v2717){
                    switch(nargs){
                    case 0:
                        v2714=l5.value;
                    case 1:
                        v2715=l5.value;
                    case 2:
                        v2716=l5.value;
                    case 3:
                        v2717=l5.value;
                    default: break;
                    }
                    var v2713= l5.value;
                    for (var i = nargs-1; i>=4; i--)
                        v2713 = {car: arguments[i+2], cdr: v2713};
                    return l92.fvalue(values, 3, l486, l120.fvalue(pv, 3, (function(){
                        var symbol = l92;
                        var func = symbol.fvalue;
                        if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                        return func;
                    })(), v2714, v2715), l92.fvalue(pv, 4, l88, v2716, v2712, v2717));
                });
                var args = [values, 0];
                return (function(){
                    var values = mv;
                    var vs;
                    vs = l91.fvalue(values, 1, v2711);
                    if (typeof vs === 'object' && 'multiple-value' in vs)
                        args = args.concat(vs);
                    else
                        args.push(vs);
                    args[1] = args.length-2;
                    return func.apply(window, args);
                })();
            })();
        })(l94.fvalue(pv, 1, l133.fvalue(pv, 1, v2710)),l134.fvalue(pv, 1, v2710)) : ({car: l196, cdr: (function(){
            return (function(v2719,v2720){
                return (function(){
                    try {
                    var v2721 = [];
                        return (function(){
                            while(l4.value !== l5.value){
                                (l44.fvalue(pv, 1, v2719) !== l5.value ? (function(){
                                    throw ({type: 'block', id: v2721, values: l49.fvalue(pv, 1, v2720), message: 'Return from unknown block NIL.'})
                                })() : l5.value);
                                l5.value;
                                (function(v2722,v2723){
                                    return (v2719 = v2722, v2720 = v2723);
                                })(l149.fvalue(pv, 1, v2719),({car: l92.fvalue(pv, 3, l98, (function(){
                                    var tmp = v2719;
                                    return tmp === l5.value? l5.value: tmp.car;
                                })(), l135.fvalue(pv, 1, v2719)), cdr: v2720}));
                            }return l5.value;
                        })();
                    }
                    catch (cf){
                        if (cf.type == 'block' && cf.id == v2721)
                            return cf.values;
                        else
                            throw cf;
                    }
                })();
            })(v2710,l5);
        })()}))));
    })();
}),l5,l5),QIList(l507,l97,l543,(function (values,nargs,v2724){
    checkArgs(nargs, 1);
    return (function(){
        var v2725 = l475.fvalue(pv, 2, v2724, 2);
        var v2726 = (function(){
            var tmp = v2725;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2727 = (function(){
            var tmp = (function(){
                var tmp = v2725;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2728 = (function(){
            var tmp = (function(){
                var tmp = v2725;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.cdr;
        })();
        (((v2726 instanceof Symbol)?l4.value: l5.value) !== l5.value ? l5.value : l78.fvalue(pv, 2, l1293, v2726));
        return l92.fvalue(values, 3, l196, l148.fvalue(pv, 3, l31, l92.fvalue(pv, 3, l127, l92.fvalue(pv, 2, l389, v2726), l148.fvalue(pv, 3, l6, v2727, v2728)), l1294), l92.fvalue(pv, 2, l389, v2726));
    })();
}),l5,l5),QIList(l507,l89,l543,(function (values,nargs,v2729){
    checkArgs(nargs, 1);
    return (function(){
        var v2730 = l475.fvalue(pv, 2, v2729, 1);
        var v2731 = (function(){
            var tmp = v2730;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2732 = l478.fvalue(pv, 1, (function(){
            var tmp = v2730;
            return tmp === l5.value? l5.value: tmp.cdr;
        })());
        return l92.fvalue(values, 3, l853, l1295, v2731);
    })();
}),l5,l5),QIList(l507,l88,l543,(function (values,nargs,v2733){
    checkArgs(nargs, 1);
    return (function(){
        var v2734 = l475.fvalue(pv, 2, v2733, 2);
        var v2735 = (function(){
            var tmp = v2734;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2736 = (function(){
            var tmp = (function(){
                var tmp = v2734;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2737 = (function(){
            var tmp = (function(){
                var tmp = v2734;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.cdr;
        })();
        return l92.fvalue(values, 3, l853, l148.fvalue(pv, 3, l6, ({car: l397, cdr: l46.fvalue(pv, 2, v2735, l92.fvalue(pv, 2, l398, l15.fvalue(pv, 0)))}), v2737), v2736);
    })();
}),l5,l5),QIList(l507,l59,l543,(function (values,nargs,v2738){
    checkArgs(nargs, 1);
    return (function(){
        var v2739 = l475.fvalue(pv, 2, v2738, 0);
        var v2740 = v2739;
        return l148.fvalue(values, 3, l13, l4, v2740);
    })();
}),l5,l5),QIList(l507,l58,l543,(function (values,nargs,v2741){
    checkArgs(nargs, 1);
    return (function(){
        var v2742 = l475.fvalue(pv, 2, v2741, 0);
        var v2743 = v2742;
        return (function(v2744,v2745){
            return l92.fvalue(values, 4, l486, l92.fvalue(pv, 2, ({car: v2744, cdr: l1296}), l92.fvalue(pv, 2, v2745, v2744)), l148.fvalue(pv, 3, l696, l92.fvalue(pv, 1, l148.fvalue(pv, 5, l1297, l1298, l148.fvalue(pv, 3, l198, v2745, l1299), l92.fvalue(pv, 3, l93, v2745, l92.fvalue(pv, 2, l132, v2745)), l1300)), v2743), l92.fvalue(pv, 2, l132, v2744));
        })(l15.fvalue(pv, 0),l15.fvalue(pv, 0));
    })();
}),l5,l5),QIList(l507,l52,l543,(function (values,nargs,v2746){
    checkArgs(nargs, 1);
    return (function(){
        var v2747 = l475.fvalue(pv, 2, v2746, 2);
        var v2748 = (function(){
            var tmp = v2747;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2749 = (function(){
            var tmp = (function(){
                var tmp = v2747;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2750 = (function(){
            var tmp = (function(){
                var tmp = v2747;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.cdr;
        })();
        return l92.fvalue(values, 3, l528, l5, l92.fvalue(pv, 3, l486, l120.fvalue(pv, 2, (function (values,nargs,v2751){
            checkArgs(nargs, 1);
            return l92.fvalue(values, 2, l133.fvalue(pv, 1, v2751), l134.fvalue(pv, 1, v2751));
        }), v2748), l92.fvalue(pv, 5, l13, l4, l92.fvalue(pv, 3, l7, (function(){
            var tmp = v2749;
            return tmp === l5.value? l5.value: tmp.car;
        })(), l92.fvalue(pv, 2, l12, ({car: l196, cdr: (function(){
            var tmp = v2749;
            return tmp === l5.value? l5.value: tmp.cdr;
        })()}))), ({car: l798, cdr: v2750}), ({car: l93, cdr: (function(){
            var f = (function(){
                var symbol = l46;
                var func = symbol.fvalue;
                if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                return func;
            })();
            var args = [pv, 0];
            var tail = (l120.fvalue(pv, 2, (function (values,nargs,v2752){
                checkArgs(nargs, 1);
                return (((function(){
                    var tmp = l149.fvalue(pv, 1, v2752);
                    return (typeof tmp == 'object' && 'car' in tmp);
                })()?l4.value: l5.value) !== l5.value ? l92.fvalue(values, 2, l133.fvalue(pv, 1, v2752), l136.fvalue(pv, 1, v2752)) : l5.value);
            }), v2748));
            while (tail != l5.value){
                args.push(tail.car);
                args[1] += 1;
                tail = tail.cdr;
            }
            return (typeof f === 'function'? f : f.fvalue).apply(this, args);
        })()}))));
    })();
}),l5,l5),QIList(l507,l51,l543,(function (values,nargs,v2753){
    checkArgs(nargs, 1);
    return (function(){
        var v2754 = l475.fvalue(pv, 2, v2753, 2);
        var v2755 = (function(){
            var tmp = v2754;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2756 = (function(){
            var tmp = (function(){
                var tmp = v2754;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2757 = (function(){
            var tmp = (function(){
                var tmp = v2754;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.cdr;
        })();
        return l92.fvalue(values, 3, l528, l5, l92.fvalue(pv, 3, l725, l120.fvalue(pv, 2, (function (values,nargs,v2758){
            checkArgs(nargs, 1);
            return l92.fvalue(values, 2, l133.fvalue(pv, 1, v2758), l134.fvalue(pv, 1, v2758));
        }), v2755), l92.fvalue(pv, 5, l13, l4, l92.fvalue(pv, 3, l7, (function(){
            var tmp = v2756;
            return tmp === l5.value? l5.value: tmp.car;
        })(), l92.fvalue(pv, 2, l12, ({car: l196, cdr: (function(){
            var tmp = v2756;
            return tmp === l5.value? l5.value: tmp.cdr;
        })()}))), ({car: l798, cdr: v2757}), ({car: l50, cdr: (function(){
            var f = (function(){
                var symbol = l46;
                var func = symbol.fvalue;
                if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                return func;
            })();
            var args = [pv, 0];
            var tail = (l120.fvalue(pv, 2, (function (values,nargs,v2759){
                checkArgs(nargs, 1);
                return (((function(){
                    var tmp = l149.fvalue(pv, 1, v2759);
                    return (typeof tmp == 'object' && 'car' in tmp);
                })()?l4.value: l5.value) !== l5.value ? l92.fvalue(values, 2, l133.fvalue(pv, 1, v2759), l136.fvalue(pv, 1, v2759)) : l5.value);
            }), v2755));
            while (tail != l5.value){
                args.push(tail.car);
                args[1] += 1;
                tail = tail.cdr;
            }
            return (typeof f === 'function'? f : f.fvalue).apply(this, args);
        })()}))));
    })();
}),l5,l5),QIList(l507,l50,l543,(function (values,nargs,v2760){
    checkArgs(nargs, 1);
    return (function(){
        var v2761 = l475.fvalue(pv, 2, v2760, 0);
        var v2762 = v2761;
        return (function(v2763){
            (function(){
                try {
                var v2764 = [];
                    return (function(){
                        while(l4.value !== l5.value){
                            (l44.fvalue(pv, 1, v2762) !== l5.value ? (function(){
                                throw ({type: 'block', id: v2764, values: l5.value, message: 'Return from unknown block NIL.'})
                            })() : (l44.fvalue(pv, 1, (function(){
                                var tmp = v2762;
                                return tmp === l5.value? l5.value: tmp.cdr;
                            })()) !== l5.value ? l78.fvalue(pv, 1, l1301) : (function(v2765,v2766){
                                (function(){
                                    var v2767 = l92.fvalue(pv, 3, v2765, l15.fvalue(pv, 0), v2766);
                                    var v2768 = ({car: v2767, cdr: v2763});
                                    return (v2763 = v2768);
                                })();
                                return (v2762 = l149.fvalue(pv, 1, v2762));
                            })((function(){
                                var tmp = v2762;
                                return tmp === l5.value? l5.value: tmp.car;
                            })(),l135.fvalue(pv, 1, v2762))));
                        }return l5.value;
                    })();
                }
                catch (cf){
                    if (cf.type == 'block' && cf.id == v2764)
                        return cf.values;
                    else
                        throw cf;
                }
            })();
            (v2763 = l49.fvalue(pv, 1, v2763));
            return l92.fvalue(values, 3, l725, l120.fvalue(pv, 2, (function(){
                var symbol = l132;
                var func = symbol.fvalue;
                if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                return func;
            })(), v2763), ({car: l93, cdr: l47.fvalue(pv, 3, (function(){
                var symbol = l46;
                var func = symbol.fvalue;
                if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                return func;
            })(), l120.fvalue(pv, 2, (function(){
                var symbol = l190;
                var func = symbol.fvalue;
                if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                return func;
            })(), v2763), l5.value)}));
        })(l5);
    })();
}),l5,l5),QIList(l507,l41,l543,(function (values,nargs,v2769){
    checkArgs(nargs, 1);
    return (function(){
        var v2770 = l475.fvalue(pv, 2, v2769, 1);
        var v2771 = (function(){
            var tmp = v2770;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2772 = (function(){
            var tmp = v2770;
            return tmp === l5.value? l5.value: tmp.cdr;
        })();
        return (function(){
            var func = (function (values,nargs,v2774,v2775,v2776){
                switch(nargs){
                case 0:
                    v2774=l5.value;
                case 1:
                    v2775=l5.value;
                case 2:
                    v2776=l5.value;
                default: break;
                }
                var v2773= l5.value;
                for (var i = nargs-1; i>=3; i--)
                    v2773 = {car: arguments[i+2], cdr: v2773};
                return l92.fvalue(values, 3, l528, l5, l148.fvalue(pv, 3, l725, v2771, l46.fvalue(pv, 2, v2775, l92.fvalue(pv, 1, ({car: l798, cdr: v2774})))));
            });
            var args = [values, 0];
            return (function(){
                var values = mv;
                var vs;
                vs = l638.fvalue(values, 1, v2772);
                if (typeof vs === 'object' && 'multiple-value' in vs)
                    args = args.concat(vs);
                else
                    args.push(vs);
                args[1] = args.length-2;
                return func.apply(window, args);
            })();
        })();
    })();
}),l5,l5),QIList(l507,l40,l543,(function (values,nargs,v2777){
    checkArgs(nargs, 1);
    return (function(){
        var v2778 = l475.fvalue(pv, 2, v2777, 2);
        var v2779 = (function(){
            var tmp = v2778;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2780 = (function(){
            var tmp = (function(){
                var tmp = v2778;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2781 = (function(){
            var tmp = (function(){
                var tmp = v2778;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.cdr;
        })();
        return l148.fvalue(values, 3, l39, l92.fvalue(pv, 3, l196, v2779, v2780), v2781);
    })();
}),l5,l5),QIList(l507,l39,l543,(function (values,nargs,v2782){
    checkArgs(nargs, 1);
    return (function(){
        var v2783 = l475.fvalue(pv, 2, v2782, 1);
        var v2784 = (function(){
            var tmp = v2783;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2785 = (function(){
            var tmp = v2783;
            return tmp === l5.value? l5.value: tmp.cdr;
        })();
        return (function(v2786){
            return l148.fvalue(values, 3, l725, l92.fvalue(pv, 1, l92.fvalue(pv, 2, v2786, v2784)), l46.fvalue(pv, 2, v2785, l92.fvalue(pv, 1, v2786)));
        })(l15.fvalue(pv, 0));
    })();
}),l5,l5),QIList(l507,l38,l543,(function (values,nargs,v2787){
    checkArgs(nargs, 1);
    return (function(){
        var v2788 = l475.fvalue(pv, 2, v2787, 0);
        var v2789 = v2788;
        return (l44.fvalue(pv, 1, v2789) !== l5.value ? l5.value : (l44.fvalue(pv, 1, (function(){
            var tmp = v2789;
            return tmp === l5.value? l5.value: tmp.cdr;
        })()) !== l5.value ? (function(){
            var tmp = v2789;
            return tmp === l5.value? l5.value: tmp.car;
        })() : (function(v2790){
            return l92.fvalue(values, 3, l725, l92.fvalue(pv, 1, l92.fvalue(pv, 2, v2790, (function(){
                var tmp = v2789;
                return tmp === l5.value? l5.value: tmp.car;
            })())), l92.fvalue(pv, 4, l485, v2790, v2790, ({car: l38, cdr: (function(){
                var tmp = v2789;
                return tmp === l5.value? l5.value: tmp.cdr;
            })()})));
        })(l15.fvalue(pv, 0))));
    })();
}),l5,l5),QIList(l507,l37,l543,(function (values,nargs,v2791){
    checkArgs(nargs, 1);
    return (function(){
        var v2792 = l475.fvalue(pv, 2, v2791, 0);
        var v2793 = v2792;
        return (l44.fvalue(pv, 1, v2793) !== l5.value ? l4.value : (l44.fvalue(pv, 1, (function(){
            var tmp = v2793;
            return tmp === l5.value? l5.value: tmp.cdr;
        })()) !== l5.value ? (function(){
            var tmp = v2793;
            return tmp === l5.value? l5.value: tmp.car;
        })() : l148.fvalue(values, 4, l485, (function(){
            var tmp = v2793;
            return tmp === l5.value? l5.value: tmp.car;
        })(), ({car: l37, cdr: (function(){
            var tmp = v2793;
            return tmp === l5.value? l5.value: tmp.cdr;
        })()}), l1302)));
    })();
}),l5,l5),QIList(l507,l36,l543,(function (values,nargs,v2794){
    checkArgs(nargs, 1);
    return (function(){
        var v2795 = l475.fvalue(pv, 2, v2794, 1);
        var v2796 = (function(){
            var tmp = v2795;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2797 = (function(){
            var tmp = v2795;
            return tmp === l5.value? l5.value: tmp.cdr;
        })();
        return (function(v2798){
            return l92.fvalue(values, 3, l725, l92.fvalue(pv, 1, l92.fvalue(pv, 2, v2798, v2796)), l148.fvalue(pv, 3, l35, v2798, l46.fvalue(pv, 2, v2797, l92.fvalue(pv, 1, l92.fvalue(pv, 2, l4, l92.fvalue(pv, 3, l78, l87, v2798))))));
        })(l15.fvalue(pv, 0));
    })();
}),l5,l5),QIList(l507,l35,l543,(function (values,nargs,v2799){
    checkArgs(nargs, 1);
    return (function(){
        var v2800 = l475.fvalue(pv, 2, v2799, 1);
        var v2801 = (function(){
            var tmp = v2800;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2802 = (function(){
            var tmp = v2800;
            return tmp === l5.value? l5.value: tmp.cdr;
        })();
        return (function(v2803){
            return l92.fvalue(values, 3, l725, l92.fvalue(pv, 1, l92.fvalue(pv, 2, v2803, v2801)), ({car: l34, cdr: l120.fvalue(pv, 2, (function (values,nargs,v2804){
                checkArgs(nargs, 1);
                return (function(){
                    var v2805 = l475.fvalue(pv, 2, v2804, 1);
                    var v2806 = (function(){
                        var tmp = v2805;
                        return tmp === l5.value? l5.value: tmp.car;
                    })();
                    var v2807 = (function(){
                        var tmp = v2805;
                        return tmp === l5.value? l5.value: tmp.cdr;
                    })();
                    return ((function(v2808){
                        return (v2808 !== l5.value ? v2808 : ((v2806 === l1242)?l4.value: l5.value));
                    })(((v2806 === l4)?l4.value: l5.value)) !== l5.value ? l148.fvalue(values, 3, l4, l5, v2807) : (function(v2809){
                        return l148.fvalue(values, 3, ({car: l38, cdr: l120.fvalue(pv, 2, (function (values,nargs,v2810){
                            checkArgs(nargs, 1);
                            return l92.fvalue(values, 3, l27, v2803, l92.fvalue(pv, 2, l389, v2810));
                        }), v2809)}), l5, v2807);
                    })((l56.fvalue(pv, 1, v2806) !== l5.value ? v2806 : l92.fvalue(pv, 1, v2806))));
                })();
            }), v2802)}));
        })(l15.fvalue(pv, 0));
    })();
}),l5,l5),QIList(l507,l34,l543,(function (values,nargs,v2811){
    checkArgs(nargs, 1);
    return (function(){
        var v2812 = l475.fvalue(pv, 2, v2811, 0);
        var v2813 = v2812;
        return (l44.fvalue(pv, 1, v2813) !== l5.value ? l5.value : (function(){
            var v2814 = l475.fvalue(pv, 2, l133.fvalue(pv, 1, v2813), 1);
            var v2815 = (function(){
                var tmp = v2814;
                return tmp === l5.value? l5.value: tmp.car;
            })();
            var v2816 = (function(){
                var tmp = v2814;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return (((v2815 === l4.value)?l4.value: l5.value) !== l5.value ? ({car: l196, cdr: v2816}) : (l44.fvalue(pv, 1, v2816) !== l5.value ? (function(v2817){
                return l92.fvalue(values, 3, l725, l92.fvalue(pv, 1, l92.fvalue(pv, 2, v2817, v2815)), l92.fvalue(pv, 4, l485, v2817, v2817, ({car: l34, cdr: l147.fvalue(pv, 1, v2813)})));
            })(l15.fvalue(pv, 0)) : l92.fvalue(values, 4, l485, v2815, ({car: l196, cdr: v2816}), ({car: l34, cdr: l147.fvalue(pv, 1, v2813)}))));
        })());
    })();
}),l5,l5),QIList(l507,l33,l543,(function (values,nargs,v2818){
    checkArgs(nargs, 1);
    return (function(){
        var v2819 = l475.fvalue(pv, 2, v2818, 1);
        var v2820 = l475.fvalue(pv, 2, (function(){
            var tmp = v2819;
            return tmp === l5.value? l5.value: tmp.car;
        })(), 2);
        var v2821 = (function(){
            var tmp = v2820;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2822 = (function(){
            var tmp = (function(){
                var tmp = v2820;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2823 = (l44.fvalue(pv, 1, (function(){
            var tmp = (function(){
                var tmp = v2820;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.cdr;
        })()) !== l5.value ? l5.value : (function(){
            var tmp = (function(){
                var tmp = (function(){
                    var tmp = v2820;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })();
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.car;
        })());
        var v2824 = l478.fvalue(pv, 1, (function(){
            var tmp = (function(){
                var tmp = (function(){
                    var tmp = v2820;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })();
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.cdr;
        })());
        var v2825 = (function(){
            var tmp = v2819;
            return tmp === l5.value? l5.value: tmp.cdr;
        })();
        return (function(v2826){
            (((v2821 instanceof Symbol)?l4.value: l5.value) !== l5.value ? l5.value : l78.fvalue(pv, 2, l1303, v2821));
            return l92.fvalue(values, 3, l528, l5, l92.fvalue(pv, 4, l725, l92.fvalue(pv, 2, ({car: v2821, cdr: l1304}), l92.fvalue(pv, 2, v2826, v2822)), l92.fvalue(pv, 4, l684, l92.fvalue(pv, 3, l956, v2821, v2826), ({car: l798, cdr: v2825}), l92.fvalue(pv, 2, l29, v2821)), v2823));
        })(l15.fvalue(pv, 0));
    })();
}),l5,l5),QIList(l507,l32,l543,(function (values,nargs,v2827){
    checkArgs(nargs, 1);
    return (function(){
        var v2828 = l475.fvalue(pv, 2, v2827, 1);
        var v2829 = l475.fvalue(pv, 2, (function(){
            var tmp = v2828;
            return tmp === l5.value? l5.value: tmp.car;
        })(), 2);
        var v2830 = (function(){
            var tmp = v2829;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2831 = (function(){
            var tmp = (function(){
                var tmp = v2829;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2832 = (l44.fvalue(pv, 1, (function(){
            var tmp = (function(){
                var tmp = v2829;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.cdr;
        })()) !== l5.value ? l5.value : (function(){
            var tmp = (function(){
                var tmp = (function(){
                    var tmp = v2829;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })();
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.car;
        })());
        var v2833 = l478.fvalue(pv, 1, (function(){
            var tmp = (function(){
                var tmp = (function(){
                    var tmp = v2829;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })();
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.cdr;
        })());
        var v2834 = (function(){
            var tmp = v2828;
            return tmp === l5.value? l5.value: tmp.cdr;
        })();
        return (function(v2835){
            (((v2830 instanceof Symbol)?l4.value: l5.value) !== l5.value ? l5.value : l78.fvalue(pv, 2, l1305, v2830));
            return l92.fvalue(values, 3, l528, l5, l92.fvalue(pv, 4, l725, l92.fvalue(pv, 2, l92.fvalue(pv, 2, v2835, v2831), ({car: v2830, cdr: l1306})), l92.fvalue(pv, 5, l684, v2835, l92.fvalue(pv, 3, l93, v2830, l92.fvalue(pv, 2, l131, v2835)), ({car: l798, cdr: v2834}), l92.fvalue(pv, 3, l93, v2835, l92.fvalue(pv, 2, l132, v2835))), v2832));
        })(l15.fvalue(pv, 0));
    })();
}),l5,l5),QIList(l507,l31,l543,(function (values,nargs,v2836){
    checkArgs(nargs, 1);
    return (function(){
        var v2837 = l475.fvalue(pv, 2, v2836, 2);
        var v2838 = (function(){
            var tmp = v2837;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2839 = (function(){
            var tmp = (function(){
                var tmp = v2837;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2840 = l478.fvalue(pv, 1, (function(){
            var tmp = (function(){
                var tmp = v2837;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.cdr;
        })());
        return (function(){
            var func = (function (values,nargs,v2842,v2843,v2844,v2845,v2846){
                switch(nargs){
                case 0:
                    v2842=l5.value;
                case 1:
                    v2843=l5.value;
                case 2:
                    v2844=l5.value;
                case 3:
                    v2845=l5.value;
                case 4:
                    v2846=l5.value;
                default: break;
                }
                var v2841= l5.value;
                for (var i = nargs-1; i>=5; i--)
                    v2841 = {car: arguments[i+2], cdr: v2841};
                return (function(v2847){
                    return l92.fvalue(values, 3, l486, ({car: l92.fvalue(pv, 2, v2847, v2838), cdr: l46.fvalue(pv, 2, l120.fvalue(pv, 3, (function(){
                        var symbol = l92;
                        var func = symbol.fvalue;
                        if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                        return func;
                    })(), v2842, v2843), ({car: l92.fvalue(pv, 2, (function(){
                        var tmp = v2844;
                        return tmp === l5.value? l5.value: tmp.car;
                    })(), l92.fvalue(pv, 3, l127, v2847, v2846)), cdr: (function(){
                        var tmp = v2844;
                        return tmp === l5.value? l5.value: tmp.cdr;
                    })()}))}), v2845);
                })(l15.fvalue(pv, 0));
            });
            var args = [values, 0];
            return (function(){
                var values = mv;
                var vs;
                vs = l91.fvalue(values, 1, v2839);
                if (typeof vs === 'object' && 'multiple-value' in vs)
                    args = args.concat(vs);
                else
                    args.push(vs);
                args[1] = args.length-2;
                return func.apply(window, args);
            })();
        })();
    })();
}),l5,l5),QIList(l507,l30,l543,(function (values,nargs,v2848){
    checkArgs(nargs, 1);
    return (function(){
        var v2849 = l475.fvalue(pv, 2, v2848, 1);
        var v2850 = (function(){
            var tmp = v2849;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2851 = (l44.fvalue(pv, 1, (function(){
            var tmp = v2849;
            return tmp === l5.value? l5.value: tmp.cdr;
        })()) !== l5.value ? 1 : (function(){
            var tmp = (function(){
                var tmp = v2849;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.car;
        })());
        var v2852 = l478.fvalue(pv, 1, (function(){
            var tmp = (function(){
                var tmp = v2849;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.cdr;
        })());
        return (function(){
            var func = (function (values,nargs,v2854,v2855,v2856,v2857,v2858){
                switch(nargs){
                case 0:
                    v2854=l5.value;
                case 1:
                    v2855=l5.value;
                case 2:
                    v2856=l5.value;
                case 3:
                    v2857=l5.value;
                case 4:
                    v2858=l5.value;
                default: break;
                }
                var v2853= l5.value;
                for (var i = nargs-1; i>=5; i--)
                    v2853 = {car: arguments[i+2], cdr: v2853};
                return (function(v2859){
                    return l92.fvalue(values, 3, l486, l46.fvalue(pv, 2, l120.fvalue(pv, 3, (function(){
                        var symbol = l92;
                        var func = symbol.fvalue;
                        if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                        return func;
                    })(), v2854, v2855), l148.fvalue(pv, 3, l92.fvalue(pv, 2, v2859, v2851), l92.fvalue(pv, 2, (function(){
                        var tmp = v2856;
                        return tmp === l5.value? l5.value: tmp.car;
                    })(), l92.fvalue(pv, 3, l43, v2858, v2859)), (function(){
                        var tmp = v2856;
                        return tmp === l5.value? l5.value: tmp.cdr;
                    })())), v2857);
                })(l15.fvalue(pv, 0));
            });
            var args = [values, 0];
            return (function(){
                var values = mv;
                var vs;
                vs = l91.fvalue(values, 1, v2850);
                if (typeof vs === 'object' && 'multiple-value' in vs)
                    args = args.concat(vs);
                else
                    args.push(vs);
                args[1] = args.length-2;
                return func.apply(window, args);
            })();
        })();
    })();
}),l5,l5),QIList(l507,l29,l543,(function (values,nargs,v2860){
    checkArgs(nargs, 1);
    return (function(){
        var v2861 = l475.fvalue(pv, 2, v2860, 1);
        var v2862 = (function(){
            var tmp = v2861;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2863 = (l44.fvalue(pv, 1, (function(){
            var tmp = v2861;
            return tmp === l5.value? l5.value: tmp.cdr;
        })()) !== l5.value ? 1 : (function(){
            var tmp = (function(){
                var tmp = v2861;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.car;
        })());
        var v2864 = l478.fvalue(pv, 1, (function(){
            var tmp = (function(){
                var tmp = v2861;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.cdr;
        })());
        return (function(){
            var func = (function (values,nargs,v2866,v2867,v2868,v2869,v2870){
                switch(nargs){
                case 0:
                    v2866=l5.value;
                case 1:
                    v2867=l5.value;
                case 2:
                    v2868=l5.value;
                case 3:
                    v2869=l5.value;
                case 4:
                    v2870=l5.value;
                default: break;
                }
                var v2865= l5.value;
                for (var i = nargs-1; i>=5; i--)
                    v2865 = {car: arguments[i+2], cdr: v2865};
                return (function(v2871){
                    return l92.fvalue(values, 3, l486, l46.fvalue(pv, 2, l120.fvalue(pv, 3, (function(){
                        var symbol = l92;
                        var func = symbol.fvalue;
                        if (func === undefined) throw "Function `" + xstring(symbol.name) + "' is undefined.";
                        return func;
                    })(), v2866, v2867), l148.fvalue(pv, 3, l92.fvalue(pv, 2, v2871, v2863), l92.fvalue(pv, 2, (function(){
                        var tmp = v2868;
                        return tmp === l5.value? l5.value: tmp.car;
                    })(), l92.fvalue(pv, 3, l42, v2870, v2871)), (function(){
                        var tmp = v2868;
                        return tmp === l5.value? l5.value: tmp.cdr;
                    })())), v2869);
                })(l15.fvalue(pv, 0));
            });
            var args = [values, 0];
            return (function(){
                var values = mv;
                var vs;
                vs = l91.fvalue(values, 1, v2862);
                if (typeof vs === 'object' && 'multiple-value' in vs)
                    args = args.concat(vs);
                else
                    args.push(vs);
                args[1] = args.length-2;
                return func.apply(window, args);
            })();
        })();
    })();
}),l5,l5),QIList(l507,l13,l543,(function (values,nargs,v2872){
    checkArgs(nargs, 1);
    return (function(){
        var v2873 = l475.fvalue(pv, 2, v2872, 1);
        var v2874 = (function(){
            var tmp = v2873;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2875 = (function(){
            var tmp = v2873;
            return tmp === l5.value? l5.value: tmp.cdr;
        })();
        return l92.fvalue(values, 3, l528, l5, l148.fvalue(pv, 3, l684, v2874, v2875));
    })();
}),l5,l5),QIList(l507,l12,l543,(function (values,nargs,v2876){
    checkArgs(nargs, 1);
    return (function(){
        var v2877 = l475.fvalue(pv, 2, v2876, 0);
        var v2878 = (l44.fvalue(pv, 1, v2877) !== l5.value ? l5.value : (function(){
            var tmp = v2877;
            return tmp === l5.value? l5.value: tmp.car;
        })());
        var v2879 = l478.fvalue(pv, 1, (function(){
            var tmp = v2877;
            return tmp === l5.value? l5.value: tmp.cdr;
        })());
        return l92.fvalue(values, 3, l762, l5, v2878);
    })();
}),l5,l5),QIList(l507,l11,l543,(function (values,nargs,v2880){
    checkArgs(nargs, 1);
    return (function(){
        var v2881 = l475.fvalue(pv, 2, v2880, 2);
        var v2882 = (function(){
            var tmp = v2881;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2883 = (function(){
            var tmp = (function(){
                var tmp = v2881;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2884 = (function(){
            var tmp = (function(){
                var tmp = v2881;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.cdr;
        })();
        return l92.fvalue(values, 3, l196, l92.fvalue(pv, 3, l1014, l92.fvalue(pv, 2, l389, v2882), l92.fvalue(pv, 2, l82, l148.fvalue(pv, 4, l691, v2882, v2883, v2884))), l92.fvalue(pv, 2, l389, v2882));
    })();
}),l5,l5),QIList(l507,l10,l543,(function (values,nargs,v2885){
    checkArgs(nargs, 1);
    return (function(){
        var v2886 = l475.fvalue(pv, 2, v2885, 2);
        var v2887 = (function(){
            var tmp = v2886;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2888 = (function(){
            var tmp = (function(){
                var tmp = v2886;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2889 = (l44.fvalue(pv, 1, (function(){
            var tmp = (function(){
                var tmp = v2886;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.cdr;
        })()) !== l5.value ? l5.value : (function(){
            var tmp = (function(){
                var tmp = (function(){
                    var tmp = v2886;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })();
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.car;
        })());
        var v2890 = l478.fvalue(pv, 1, (function(){
            var tmp = (function(){
                var tmp = (function(){
                    var tmp = v2886;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })();
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.cdr;
        })());
        return l148.fvalue(values, 3, l196, l92.fvalue(pv, 3, l93, v2887, v2888), l46.fvalue(pv, 2, (((function(){
            var x = v2889;
            return typeof(x) == 'object' && 'length' in x && x.type == 'character';
        })()?l4.value: l5.value) !== l5.value ? l92.fvalue(pv, 1, l92.fvalue(pv, 4, l1135, l92.fvalue(pv, 2, l389, v2887), l1307, v2889)) : l5.value), l92.fvalue(pv, 1, l92.fvalue(pv, 2, l389, v2887))));
    })();
}),l5,l5),QIList(l507,l9,l543,(function (values,nargs,v2891){
    checkArgs(nargs, 1);
    return (function(){
        var v2892 = l475.fvalue(pv, 2, v2891, 1);
        var v2893 = (function(){
            var tmp = v2892;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2894 = l28.fvalue(pv, 1, l44.fvalue(pv, 1, (function(){
            var tmp = v2892;
            return tmp === l5.value? l5.value: tmp.cdr;
        })()));
        var v2895 = (l44.fvalue(pv, 1, (function(){
            var tmp = v2892;
            return tmp === l5.value? l5.value: tmp.cdr;
        })()) !== l5.value ? l5.value : (function(){
            var tmp = (function(){
                var tmp = v2892;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.car;
        })());
        var v2896 = (l44.fvalue(pv, 1, (function(){
            var tmp = (function(){
                var tmp = v2892;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.cdr;
        })()) !== l5.value ? l5.value : (function(){
            var tmp = (function(){
                var tmp = (function(){
                    var tmp = v2892;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })();
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.car;
        })());
        var v2897 = l478.fvalue(pv, 1, (function(){
            var tmp = (function(){
                var tmp = (function(){
                    var tmp = v2892;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })();
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.cdr;
        })());
        return l148.fvalue(values, 3, l196, l92.fvalue(pv, 2, l2, l92.fvalue(pv, 2, l547, v2893)), l46.fvalue(pv, 3, (v2894 !== l5.value ? l92.fvalue(pv, 1, l92.fvalue(pv, 3, l8, l92.fvalue(pv, 2, l18, l92.fvalue(pv, 2, l389, v2893)), l92.fvalue(pv, 3, l93, v2893, v2895))) : l5.value), (((function(){
            var x = v2896;
            return typeof(x) == 'object' && 'length' in x && x.type == 'character';
        })()?l4.value: l5.value) !== l5.value ? l92.fvalue(pv, 1, l92.fvalue(pv, 4, l1135, l92.fvalue(pv, 2, l389, v2893), l1308, v2896)) : l5.value), l92.fvalue(pv, 1, l92.fvalue(pv, 2, l389, v2893))));
    })();
}),l5,l5),QIList(l507,l8,l543,(function (values,nargs,v2898){
    checkArgs(nargs, 1);
    return (function(){
        var v2899 = l475.fvalue(pv, 2, v2898, 1);
        var v2900 = (function(){
            var tmp = v2899;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2901 = (function(){
            var tmp = v2899;
            return tmp === l5.value? l5.value: tmp.cdr;
        })();
        return l92.fvalue(values, 4, l485, v2900, l5, ({car: l196, cdr: v2901}));
    })();
}),l5,l5),QIList(l507,l7,l543,(function (values,nargs,v2902){
    checkArgs(nargs, 1);
    return (function(){
        var v2903 = l475.fvalue(pv, 2, v2902, 1);
        var v2904 = (function(){
            var tmp = v2903;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2905 = (function(){
            var tmp = v2903;
            return tmp === l5.value? l5.value: tmp.cdr;
        })();
        return l148.fvalue(values, 4, l485, v2904, ({car: l196, cdr: v2905}), l1309);
    })();
}),l5,l5),QIList(l507,l6,l543,(function (values,nargs,v2906){
    checkArgs(nargs, 1);
    return (function(){
        var v2907 = l475.fvalue(pv, 2, v2906, 1);
        var v2908 = (function(){
            var tmp = v2907;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2909 = (function(){
            var tmp = v2907;
            return tmp === l5.value? l5.value: tmp.cdr;
        })();
        return l92.fvalue(values, 2, l82, l148.fvalue(pv, 3, l6, v2908, v2909));
    })();
}),l5,l5),QIList(l507,l3,l543,(function (values,nargs,v2910){
    checkArgs(nargs, 1);
    return (function(){
        var v2911 = l475.fvalue(pv, 2, v2910, 2);
        var v2912 = (function(){
            var tmp = v2911;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2913 = (function(){
            var tmp = (function(){
                var tmp = v2911;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2914 = (l44.fvalue(pv, 1, (function(){
            var tmp = (function(){
                var tmp = v2911;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.cdr;
        })()) !== l5.value ? l5.value : (function(){
            var tmp = (function(){
                var tmp = (function(){
                    var tmp = v2911;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })();
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.car;
        })());
        var v2915 = l478.fvalue(pv, 1, (function(){
            var tmp = (function(){
                var tmp = (function(){
                    var tmp = v2911;
                    return tmp === l5.value? l5.value: tmp.cdr;
                })();
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.cdr;
        })());
        return l148.fvalue(values, 5, l196, l92.fvalue(pv, 2, l2, l92.fvalue(pv, 2, l547, v2912)), l92.fvalue(pv, 2, l2, l92.fvalue(pv, 2, l549, v2912)), l92.fvalue(pv, 3, l93, v2912, v2913), l46.fvalue(pv, 2, (((function(){
            var x = v2914;
            return typeof(x) == 'object' && 'length' in x && x.type == 'character';
        })()?l4.value: l5.value) !== l5.value ? l92.fvalue(pv, 1, l92.fvalue(pv, 4, l1135, l92.fvalue(pv, 2, l389, v2912), l1310, v2914)) : l5.value), l92.fvalue(pv, 1, l92.fvalue(pv, 2, l389, v2912))));
    })();
}),l5,l5),QIList(l507,l2,l543,(function (values,nargs,v2916){
    checkArgs(nargs, 1);
    return (function(){
        var v2917 = l475.fvalue(pv, 2, v2916, 0);
        var v2918 = v2917;
        return ({car: l708, cdr: l120.fvalue(pv, 2, (function (values,nargs,v2919){
            checkArgs(nargs, 1);
            return l92.fvalue(values, 2, l546, l92.fvalue(pv, 2, l389, v2919));
        }), v2918)});
    })();
}),l5,l5),QIList(l507,l1,l543,(function (values,nargs,v2920){
    checkArgs(nargs, 1);
    return (function(){
        var v2921 = l475.fvalue(pv, 2, v2920, 2);
        var v2922 = (function(){
            var tmp = v2921;
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2923 = (function(){
            var tmp = (function(){
                var tmp = v2921;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.car;
        })();
        var v2924 = (function(){
            var tmp = (function(){
                var tmp = v2921;
                return tmp === l5.value? l5.value: tmp.cdr;
            })();
            return tmp === l5.value? l5.value: tmp.cdr;
        })();
        return (function(v2925){
            return l92.fvalue(values, 2, l708, l92.fvalue(pv, 3, l542, l92.fvalue(pv, 2, l389, v2922), l92.fvalue(pv, 2, l389, l92.fvalue(pv, 2, l82, l92.fvalue(pv, 3, l6, l92.fvalue(pv, 1, v2925), l148.fvalue(pv, 4, l488, v2923, v2925, v2924))))));
        })(l15.fvalue(pv, 0));
    })();
}),l5,l5),l5),l5,l5,l5);
((l532).value = l1311);
l305.fvalue(values, 1, js_to_lisp(l1297));
l305.fvalue(values, 1, js_to_lisp(l1291));
l305.fvalue(values, 1, js_to_lisp(l1290));
l305.fvalue(values, 1, js_to_lisp(l1289));
l305.fvalue(values, 1, js_to_lisp(l1288));
l305.fvalue(values, 1, js_to_lisp(l1272));
l305.fvalue(values, 1, js_to_lisp(l1271));
l305.fvalue(values, 1, js_to_lisp(l1246));
l305.fvalue(values, 1, js_to_lisp(l1245));
l305.fvalue(values, 1, js_to_lisp(l1242));
l305.fvalue(values, 1, js_to_lisp(l1241));
l305.fvalue(values, 1, js_to_lisp(l1240));
l305.fvalue(values, 1, js_to_lisp(l1239));
l305.fvalue(values, 1, js_to_lisp(l1238));
l305.fvalue(values, 1, js_to_lisp(l1237));
l305.fvalue(values, 1, js_to_lisp(l1236));
l305.fvalue(values, 1, js_to_lisp(l1235));
l305.fvalue(values, 1, js_to_lisp(l1231));
l305.fvalue(values, 1, js_to_lisp(l1230));
l305.fvalue(values, 1, js_to_lisp(l1229));
l305.fvalue(values, 1, js_to_lisp(l1228));
l305.fvalue(values, 1, js_to_lisp(l1214));
l305.fvalue(values, 1, js_to_lisp(l1212));
l305.fvalue(values, 1, js_to_lisp(l1207));
l305.fvalue(values, 1, js_to_lisp(l1194));
l305.fvalue(values, 1, js_to_lisp(l1187));
l305.fvalue(values, 1, js_to_lisp(l1181));
l305.fvalue(values, 1, js_to_lisp(l1167));
l305.fvalue(values, 1, js_to_lisp(l1163));
l305.fvalue(values, 1, js_to_lisp(l1157));
l305.fvalue(values, 1, js_to_lisp(l1150));
l305.fvalue(values, 1, js_to_lisp(l1147));
l305.fvalue(values, 1, js_to_lisp(l1144));
l305.fvalue(values, 1, js_to_lisp(l1140));
l305.fvalue(values, 1, js_to_lisp(l1135));
l305.fvalue(values, 1, js_to_lisp(l1128));
l305.fvalue(values, 1, js_to_lisp(l1125));
l305.fvalue(values, 1, js_to_lisp(l1123));
l305.fvalue(values, 1, js_to_lisp(l1120));
l305.fvalue(values, 1, js_to_lisp(l1114));
l305.fvalue(values, 1, js_to_lisp(l1095));
l305.fvalue(values, 1, js_to_lisp(l1087));
l305.fvalue(values, 1, js_to_lisp(l1071));
l305.fvalue(values, 1, js_to_lisp(l1069));
l305.fvalue(values, 1, js_to_lisp(l1066));
l305.fvalue(values, 1, js_to_lisp(l1061));
l305.fvalue(values, 1, js_to_lisp(l1059));
l305.fvalue(values, 1, js_to_lisp(l1054));
l305.fvalue(values, 1, js_to_lisp(l1049));
l305.fvalue(values, 1, js_to_lisp(l1039));
l305.fvalue(values, 1, js_to_lisp(l1036));
l305.fvalue(values, 1, js_to_lisp(l1032));
l305.fvalue(values, 1, js_to_lisp(l1021));
l305.fvalue(values, 1, js_to_lisp(l1014));
l305.fvalue(values, 1, js_to_lisp(l1009));
l305.fvalue(values, 1, js_to_lisp(l1006));
l305.fvalue(values, 1, js_to_lisp(l1003));
l305.fvalue(values, 1, js_to_lisp(l970));
l305.fvalue(values, 1, js_to_lisp(l966));
l305.fvalue(values, 1, js_to_lisp(l963));
l305.fvalue(values, 1, js_to_lisp(l960));
l305.fvalue(values, 1, js_to_lisp(l958));
l305.fvalue(values, 1, js_to_lisp(l956));
l305.fvalue(values, 1, js_to_lisp(l954));
l305.fvalue(values, 1, js_to_lisp(l953));
l305.fvalue(values, 1, js_to_lisp(l950));
l305.fvalue(values, 1, js_to_lisp(l948));
l305.fvalue(values, 1, js_to_lisp(l920));
l305.fvalue(values, 1, js_to_lisp(l919));
l305.fvalue(values, 1, js_to_lisp(l911));
l305.fvalue(values, 1, js_to_lisp(l910));
l305.fvalue(values, 1, js_to_lisp(l909));
l305.fvalue(values, 1, js_to_lisp(l908));
l305.fvalue(values, 1, js_to_lisp(l907));
l305.fvalue(values, 1, js_to_lisp(l906));
l305.fvalue(values, 1, js_to_lisp(l905));
l305.fvalue(values, 1, js_to_lisp(l904));
l305.fvalue(values, 1, js_to_lisp(l903));
l305.fvalue(values, 1, js_to_lisp(l902));
l305.fvalue(values, 1, js_to_lisp(l901));
l305.fvalue(values, 1, js_to_lisp(l900));
l305.fvalue(values, 1, js_to_lisp(l899));
l305.fvalue(values, 1, js_to_lisp(l895));
l305.fvalue(values, 1, js_to_lisp(l894));
l305.fvalue(values, 1, js_to_lisp(l893));
l305.fvalue(values, 1, js_to_lisp(l892));
l305.fvalue(values, 1, js_to_lisp(l891));
l305.fvalue(values, 1, js_to_lisp(l890));
l305.fvalue(values, 1, js_to_lisp(l888));
l305.fvalue(values, 1, js_to_lisp(l886));
l305.fvalue(values, 1, js_to_lisp(l884));
l305.fvalue(values, 1, js_to_lisp(l882));
l305.fvalue(values, 1, js_to_lisp(l880));
l305.fvalue(values, 1, js_to_lisp(l878));
l305.fvalue(values, 1, js_to_lisp(l877));
l305.fvalue(values, 1, js_to_lisp(l876));
l305.fvalue(values, 1, js_to_lisp(l872));
l305.fvalue(values, 1, js_to_lisp(l853));
l305.fvalue(values, 1, js_to_lisp(l844));
l305.fvalue(values, 1, js_to_lisp(l833));
l305.fvalue(values, 1, js_to_lisp(l802));
l305.fvalue(values, 1, js_to_lisp(l801));
l305.fvalue(values, 1, js_to_lisp(l798));
l305.fvalue(values, 1, js_to_lisp(l797));
l305.fvalue(values, 1, js_to_lisp(l796));
l305.fvalue(values, 1, js_to_lisp(l786));
l305.fvalue(values, 1, js_to_lisp(l774));
l305.fvalue(values, 1, js_to_lisp(l762));
l305.fvalue(values, 1, js_to_lisp(l749));
l305.fvalue(values, 1, js_to_lisp(l748));
l305.fvalue(values, 1, js_to_lisp(l737));
l305.fvalue(values, 1, js_to_lisp(l732));
l305.fvalue(values, 1, js_to_lisp(l725));
l305.fvalue(values, 1, js_to_lisp(l711));
l305.fvalue(values, 1, js_to_lisp(l710));
l305.fvalue(values, 1, js_to_lisp(l709));
l305.fvalue(values, 1, js_to_lisp(l708));
l305.fvalue(values, 1, js_to_lisp(l707));
l305.fvalue(values, 1, js_to_lisp(l703));
l305.fvalue(values, 1, js_to_lisp(l696));
l305.fvalue(values, 1, js_to_lisp(l695));
l305.fvalue(values, 1, js_to_lisp(l694));
l305.fvalue(values, 1, js_to_lisp(l693));
l305.fvalue(values, 1, js_to_lisp(l692));
l305.fvalue(values, 1, js_to_lisp(l691));
l305.fvalue(values, 1, js_to_lisp(l684));
l305.fvalue(values, 1, js_to_lisp(l673));
l305.fvalue(values, 1, js_to_lisp(l669));
l305.fvalue(values, 1, js_to_lisp(l667));
l305.fvalue(values, 1, js_to_lisp(l665));
l305.fvalue(values, 1, js_to_lisp(l663));
l305.fvalue(values, 1, js_to_lisp(l661));
l305.fvalue(values, 1, js_to_lisp(l660));
l305.fvalue(values, 1, js_to_lisp(l659));
l305.fvalue(values, 1, js_to_lisp(l657));
l305.fvalue(values, 1, js_to_lisp(l650));
l305.fvalue(values, 1, js_to_lisp(l648));
l305.fvalue(values, 1, js_to_lisp(l646));
l305.fvalue(values, 1, js_to_lisp(l640));
l305.fvalue(values, 1, js_to_lisp(l639));
l305.fvalue(values, 1, js_to_lisp(l638));
l305.fvalue(values, 1, js_to_lisp(l637));
l305.fvalue(values, 1, js_to_lisp(l608));
l305.fvalue(values, 1, js_to_lisp(l600));
l305.fvalue(values, 1, js_to_lisp(l590));
l305.fvalue(values, 1, js_to_lisp(l583));
l305.fvalue(values, 1, js_to_lisp(l582));
l305.fvalue(values, 1, js_to_lisp(l572));
l305.fvalue(values, 1, js_to_lisp(l571));
l305.fvalue(values, 1, js_to_lisp(l570));
l305.fvalue(values, 1, js_to_lisp(l568));
l305.fvalue(values, 1, js_to_lisp(l566));
l305.fvalue(values, 1, js_to_lisp(l565));
l305.fvalue(values, 1, js_to_lisp(l564));
l305.fvalue(values, 1, js_to_lisp(l563));
l305.fvalue(values, 1, js_to_lisp(l562));
l305.fvalue(values, 1, js_to_lisp(l561));
l305.fvalue(values, 1, js_to_lisp(l559));
l305.fvalue(values, 1, js_to_lisp(l553));
l305.fvalue(values, 1, js_to_lisp(l552));
l305.fvalue(values, 1, js_to_lisp(l551));
l305.fvalue(values, 1, js_to_lisp(l550));
l305.fvalue(values, 1, js_to_lisp(l549));
l305.fvalue(values, 1, js_to_lisp(l548));
l305.fvalue(values, 1, js_to_lisp(l547));
l305.fvalue(values, 1, js_to_lisp(l546));
l305.fvalue(values, 1, js_to_lisp(l545));
l305.fvalue(values, 1, js_to_lisp(l544));
l305.fvalue(values, 1, js_to_lisp(l543));
l305.fvalue(values, 1, js_to_lisp(l542));
l305.fvalue(values, 1, js_to_lisp(l541));
l305.fvalue(values, 1, js_to_lisp(l540));
l305.fvalue(values, 1, js_to_lisp(l539));
l305.fvalue(values, 1, js_to_lisp(l538));
l305.fvalue(values, 1, js_to_lisp(l537));
l305.fvalue(values, 1, js_to_lisp(l536));
l305.fvalue(values, 1, js_to_lisp(l534));
l305.fvalue(values, 1, js_to_lisp(l533));
l305.fvalue(values, 1, js_to_lisp(l532));
l305.fvalue(values, 1, js_to_lisp(l531));
l305.fvalue(values, 1, js_to_lisp(l530));
l305.fvalue(values, 1, js_to_lisp(l529));
l305.fvalue(values, 1, js_to_lisp(l528));
l305.fvalue(values, 1, js_to_lisp(l527));
l305.fvalue(values, 1, js_to_lisp(l526));
l305.fvalue(values, 1, js_to_lisp(l525));
l305.fvalue(values, 1, js_to_lisp(l524));
l305.fvalue(values, 1, js_to_lisp(l522));
l305.fvalue(values, 1, js_to_lisp(l521));
l305.fvalue(values, 1, js_to_lisp(l520));
l305.fvalue(values, 1, js_to_lisp(l519));
l305.fvalue(values, 1, js_to_lisp(l518));
l305.fvalue(values, 1, js_to_lisp(l517));
l305.fvalue(values, 1, js_to_lisp(l516));
l305.fvalue(values, 1, js_to_lisp(l515));
l305.fvalue(values, 1, js_to_lisp(l514));
l305.fvalue(values, 1, js_to_lisp(l513));
l305.fvalue(values, 1, js_to_lisp(l512));
l305.fvalue(values, 1, js_to_lisp(l510));
l305.fvalue(values, 1, js_to_lisp(l509));
l305.fvalue(values, 1, js_to_lisp(l508));
l305.fvalue(values, 1, js_to_lisp(l507));
l305.fvalue(values, 1, js_to_lisp(l506));
l305.fvalue(values, 1, js_to_lisp(l505));
l305.fvalue(values, 1, js_to_lisp(l504));
l305.fvalue(values, 1, js_to_lisp(l503));
l305.fvalue(values, 1, js_to_lisp(l502));
l305.fvalue(values, 1, js_to_lisp(l501));
l305.fvalue(values, 1, js_to_lisp(l498));
l305.fvalue(values, 1, js_to_lisp(l497));
l305.fvalue(values, 1, js_to_lisp(l494));
l305.fvalue(values, 1, js_to_lisp(l491));
l305.fvalue(values, 1, js_to_lisp(l489));
l305.fvalue(values, 1, js_to_lisp(l488));
l305.fvalue(values, 1, js_to_lisp(l487));
l305.fvalue(values, 1, js_to_lisp(l486));
l305.fvalue(values, 1, js_to_lisp(l485));
l305.fvalue(values, 1, js_to_lisp(l484));
l305.fvalue(values, 1, js_to_lisp(l480));
l305.fvalue(values, 1, js_to_lisp(l478));
l305.fvalue(values, 1, js_to_lisp(l475));
l305.fvalue(values, 1, js_to_lisp(l474));
l305.fvalue(values, 1, js_to_lisp(l473));
l305.fvalue(values, 1, js_to_lisp(l472));
l305.fvalue(values, 1, js_to_lisp(l471));
l305.fvalue(values, 1, js_to_lisp(l470));
l305.fvalue(values, 1, js_to_lisp(l468));
l305.fvalue(values, 1, js_to_lisp(l465));
l305.fvalue(values, 1, js_to_lisp(l458));
l305.fvalue(values, 1, js_to_lisp(l455));
l305.fvalue(values, 1, js_to_lisp(l453));
l305.fvalue(values, 1, js_to_lisp(l452));
l305.fvalue(values, 1, js_to_lisp(l451));
l305.fvalue(values, 1, js_to_lisp(l450));
l305.fvalue(values, 1, js_to_lisp(l449));
l305.fvalue(values, 1, js_to_lisp(l448));
l305.fvalue(values, 1, js_to_lisp(l447));
l305.fvalue(values, 1, js_to_lisp(l446));
l305.fvalue(values, 1, js_to_lisp(l444));
l305.fvalue(values, 1, js_to_lisp(l443));
l305.fvalue(values, 1, js_to_lisp(l442));
l305.fvalue(values, 1, js_to_lisp(l441));
l305.fvalue(values, 1, js_to_lisp(l440));
l305.fvalue(values, 1, js_to_lisp(l439));
l305.fvalue(values, 1, js_to_lisp(l438));
l305.fvalue(values, 1, js_to_lisp(l437));
l305.fvalue(values, 1, js_to_lisp(l436));
l305.fvalue(values, 1, js_to_lisp(l435));
l305.fvalue(values, 1, js_to_lisp(l434));
l305.fvalue(values, 1, js_to_lisp(l433));
l305.fvalue(values, 1, js_to_lisp(l432));
l305.fvalue(values, 1, js_to_lisp(l430));
l305.fvalue(values, 1, js_to_lisp(l429));
l305.fvalue(values, 1, js_to_lisp(l428));
l305.fvalue(values, 1, js_to_lisp(l427));
l305.fvalue(values, 1, js_to_lisp(l426));
l305.fvalue(values, 1, js_to_lisp(l425));
l305.fvalue(values, 1, js_to_lisp(l424));
l305.fvalue(values, 1, js_to_lisp(l423));
l305.fvalue(values, 1, js_to_lisp(l421));
l305.fvalue(values, 1, js_to_lisp(l420));
l305.fvalue(values, 1, js_to_lisp(l419));
l305.fvalue(values, 1, js_to_lisp(l418));
l305.fvalue(values, 1, js_to_lisp(l417));
l305.fvalue(values, 1, js_to_lisp(l416));
l305.fvalue(values, 1, js_to_lisp(l415));
l305.fvalue(values, 1, js_to_lisp(l414));
l305.fvalue(values, 1, js_to_lisp(l411));
l305.fvalue(values, 1, js_to_lisp(l410));
l305.fvalue(values, 1, js_to_lisp(l409));
l305.fvalue(values, 1, js_to_lisp(l408));
l305.fvalue(values, 1, js_to_lisp(l407));
l305.fvalue(values, 1, js_to_lisp(l406));
l305.fvalue(values, 1, js_to_lisp(l405));
l305.fvalue(values, 1, js_to_lisp(l404));
l305.fvalue(values, 1, js_to_lisp(l402));
l305.fvalue(values, 1, js_to_lisp(l401));
l305.fvalue(values, 1, js_to_lisp(l400));
l305.fvalue(values, 1, js_to_lisp(l399));
l305.fvalue(values, 1, js_to_lisp(l398));
l305.fvalue(values, 1, js_to_lisp(l397));
l305.fvalue(values, 1, js_to_lisp(l396));
l305.fvalue(values, 1, js_to_lisp(l395));
l305.fvalue(values, 1, js_to_lisp(l394));
l305.fvalue(values, 1, js_to_lisp(l393));
l305.fvalue(values, 1, js_to_lisp(l392));
l305.fvalue(values, 1, js_to_lisp(l391));
l305.fvalue(values, 1, js_to_lisp(l390));
l305.fvalue(values, 1, js_to_lisp(l389));
l305.fvalue(values, 1, js_to_lisp(l386));
l305.fvalue(values, 1, js_to_lisp(l385));
l305.fvalue(values, 1, js_to_lisp(l384));
l305.fvalue(values, 1, js_to_lisp(l382));
l305.fvalue(values, 1, js_to_lisp(l381));
l305.fvalue(values, 1, js_to_lisp(l375));
l305.fvalue(values, 1, js_to_lisp(l366));
l305.fvalue(values, 1, js_to_lisp(l365));
l305.fvalue(values, 1, js_to_lisp(l364));
l305.fvalue(values, 1, js_to_lisp(l362));
l305.fvalue(values, 1, js_to_lisp(l361));
l305.fvalue(values, 1, js_to_lisp(l358));
l305.fvalue(values, 1, js_to_lisp(l356));
l305.fvalue(values, 1, js_to_lisp(l353));
l305.fvalue(values, 1, js_to_lisp(l352));
l305.fvalue(values, 1, js_to_lisp(l349));
l305.fvalue(values, 1, js_to_lisp(l348));
l305.fvalue(values, 1, js_to_lisp(l347));
l305.fvalue(values, 1, js_to_lisp(l346));
l305.fvalue(values, 1, js_to_lisp(l345));
l305.fvalue(values, 1, js_to_lisp(l344));
l305.fvalue(values, 1, js_to_lisp(l343));
l305.fvalue(values, 1, js_to_lisp(l341));
l305.fvalue(values, 1, js_to_lisp(l339));
l305.fvalue(values, 1, js_to_lisp(l338));
l305.fvalue(values, 1, js_to_lisp(l336));
l305.fvalue(values, 1, js_to_lisp(l334));
l305.fvalue(values, 1, js_to_lisp(l333));
l305.fvalue(values, 1, js_to_lisp(l332));
l305.fvalue(values, 1, js_to_lisp(l331));
l305.fvalue(values, 1, js_to_lisp(l330));
l305.fvalue(values, 1, js_to_lisp(l328));
l305.fvalue(values, 1, js_to_lisp(l326));
l305.fvalue(values, 1, js_to_lisp(l325));
l305.fvalue(values, 1, js_to_lisp(l324));
l305.fvalue(values, 1, js_to_lisp(l323));
l305.fvalue(values, 1, js_to_lisp(l322));
l305.fvalue(values, 1, js_to_lisp(l321));
l305.fvalue(values, 1, js_to_lisp(l320));
l305.fvalue(values, 1, js_to_lisp(l316));
l305.fvalue(values, 1, js_to_lisp(l313));
l305.fvalue(values, 1, js_to_lisp(l312));
l305.fvalue(values, 1, js_to_lisp(l311));
l305.fvalue(values, 1, js_to_lisp(l310));
l305.fvalue(values, 1, js_to_lisp(l305));
l305.fvalue(values, 1, js_to_lisp(l304));
l305.fvalue(values, 1, js_to_lisp(l303));
l305.fvalue(values, 1, js_to_lisp(l302));
l305.fvalue(values, 1, js_to_lisp(l300));
l305.fvalue(values, 1, js_to_lisp(l298));
l305.fvalue(values, 1, js_to_lisp(l296));
l305.fvalue(values, 1, js_to_lisp(l294));
l305.fvalue(values, 1, js_to_lisp(l292));
l305.fvalue(values, 1, js_to_lisp(l290));
l305.fvalue(values, 1, js_to_lisp(l282));
l305.fvalue(values, 1, js_to_lisp(l281));
l305.fvalue(values, 1, js_to_lisp(l280));
l305.fvalue(values, 1, js_to_lisp(l279));
l305.fvalue(values, 1, js_to_lisp(l278));
l305.fvalue(values, 1, js_to_lisp(l277));
l305.fvalue(values, 1, js_to_lisp(l275));
l305.fvalue(values, 1, js_to_lisp(l273));
l305.fvalue(values, 1, js_to_lisp(l272));
l305.fvalue(values, 1, js_to_lisp(l271));
l305.fvalue(values, 1, js_to_lisp(l267));
l305.fvalue(values, 1, js_to_lisp(l254));
l305.fvalue(values, 1, js_to_lisp(l248));
l305.fvalue(values, 1, js_to_lisp(l246));
l305.fvalue(values, 1, js_to_lisp(l245));
l305.fvalue(values, 1, js_to_lisp(l242));
l305.fvalue(values, 1, js_to_lisp(l241));
l305.fvalue(values, 1, js_to_lisp(l237));
l305.fvalue(values, 1, js_to_lisp(l236));
l305.fvalue(values, 1, js_to_lisp(l235));
l305.fvalue(values, 1, js_to_lisp(l234));
l305.fvalue(values, 1, js_to_lisp(l230));
l305.fvalue(values, 1, js_to_lisp(l229));
l305.fvalue(values, 1, js_to_lisp(l225));
l305.fvalue(values, 1, js_to_lisp(l224));
l305.fvalue(values, 1, js_to_lisp(l223));
l305.fvalue(values, 1, js_to_lisp(l220));
l305.fvalue(values, 1, js_to_lisp(l219));
l305.fvalue(values, 1, js_to_lisp(l218));
l305.fvalue(values, 1, js_to_lisp(l217));
l305.fvalue(values, 1, js_to_lisp(l216));
l305.fvalue(values, 1, js_to_lisp(l215));
l305.fvalue(values, 1, js_to_lisp(l214));
l305.fvalue(values, 1, js_to_lisp(l213));
l305.fvalue(values, 1, js_to_lisp(l212));
l305.fvalue(values, 1, js_to_lisp(l211));
l305.fvalue(values, 1, js_to_lisp(l210));
l305.fvalue(values, 1, js_to_lisp(l209));
l305.fvalue(values, 1, js_to_lisp(l207));
l305.fvalue(values, 1, js_to_lisp(l206));
l305.fvalue(values, 1, js_to_lisp(l205));
l305.fvalue(values, 1, js_to_lisp(l204));
l305.fvalue(values, 1, js_to_lisp(l203));
l305.fvalue(values, 1, js_to_lisp(l202));
l305.fvalue(values, 1, js_to_lisp(l201));
l305.fvalue(values, 1, js_to_lisp(l199));
l305.fvalue(values, 1, js_to_lisp(l198));
l305.fvalue(values, 1, js_to_lisp(l197));
l305.fvalue(values, 1, js_to_lisp(l196));
l305.fvalue(values, 1, js_to_lisp(l195));
l305.fvalue(values, 1, js_to_lisp(l194));
l305.fvalue(values, 1, js_to_lisp(l193));
l305.fvalue(values, 1, js_to_lisp(l192));
l305.fvalue(values, 1, js_to_lisp(l191));
l305.fvalue(values, 1, js_to_lisp(l190));
l305.fvalue(values, 1, js_to_lisp(l189));
l305.fvalue(values, 1, js_to_lisp(l188));
l305.fvalue(values, 1, js_to_lisp(l187));
l305.fvalue(values, 1, js_to_lisp(l186));
l305.fvalue(values, 1, js_to_lisp(l185));
l305.fvalue(values, 1, js_to_lisp(l184));
l305.fvalue(values, 1, js_to_lisp(l183));
l305.fvalue(values, 1, js_to_lisp(l182));
l305.fvalue(values, 1, js_to_lisp(l181));
l305.fvalue(values, 1, js_to_lisp(l180));
l305.fvalue(values, 1, js_to_lisp(l178));
l305.fvalue(values, 1, js_to_lisp(l177));
l305.fvalue(values, 1, js_to_lisp(l176));
l305.fvalue(values, 1, js_to_lisp(l175));
l305.fvalue(values, 1, js_to_lisp(l174));
l305.fvalue(values, 1, js_to_lisp(l173));
l305.fvalue(values, 1, js_to_lisp(l172));
l305.fvalue(values, 1, js_to_lisp(l171));
l305.fvalue(values, 1, js_to_lisp(l170));
l305.fvalue(values, 1, js_to_lisp(l169));
l305.fvalue(values, 1, js_to_lisp(l168));
l305.fvalue(values, 1, js_to_lisp(l167));
l305.fvalue(values, 1, js_to_lisp(l166));
l305.fvalue(values, 1, js_to_lisp(l165));
l305.fvalue(values, 1, js_to_lisp(l164));
l305.fvalue(values, 1, js_to_lisp(l163));
l305.fvalue(values, 1, js_to_lisp(l162));
l305.fvalue(values, 1, js_to_lisp(l161));
l305.fvalue(values, 1, js_to_lisp(l160));
l305.fvalue(values, 1, js_to_lisp(l159));
l305.fvalue(values, 1, js_to_lisp(l158));
l305.fvalue(values, 1, js_to_lisp(l157));
l305.fvalue(values, 1, js_to_lisp(l156));
l305.fvalue(values, 1, js_to_lisp(l155));
l305.fvalue(values, 1, js_to_lisp(l154));
l305.fvalue(values, 1, js_to_lisp(l153));
l305.fvalue(values, 1, js_to_lisp(l152));
l305.fvalue(values, 1, js_to_lisp(l151));
l305.fvalue(values, 1, js_to_lisp(l150));
l305.fvalue(values, 1, js_to_lisp(l149));
l305.fvalue(values, 1, js_to_lisp(l148));
l305.fvalue(values, 1, js_to_lisp(l147));
l305.fvalue(values, 1, js_to_lisp(l146));
l305.fvalue(values, 1, js_to_lisp(l145));
l305.fvalue(values, 1, js_to_lisp(l144));
l305.fvalue(values, 1, js_to_lisp(l143));
l305.fvalue(values, 1, js_to_lisp(l142));
l305.fvalue(values, 1, js_to_lisp(l141));
l305.fvalue(values, 1, js_to_lisp(l140));
l305.fvalue(values, 1, js_to_lisp(l139));
l305.fvalue(values, 1, js_to_lisp(l138));
l305.fvalue(values, 1, js_to_lisp(l137));
l305.fvalue(values, 1, js_to_lisp(l136));
l305.fvalue(values, 1, js_to_lisp(l135));
l305.fvalue(values, 1, js_to_lisp(l134));
l305.fvalue(values, 1, js_to_lisp(l133));
l305.fvalue(values, 1, js_to_lisp(l132));
l305.fvalue(values, 1, js_to_lisp(l131));
l305.fvalue(values, 1, js_to_lisp(l129));
l305.fvalue(values, 1, js_to_lisp(l128));
l305.fvalue(values, 1, js_to_lisp(l127));
l305.fvalue(values, 1, js_to_lisp(l126));
l305.fvalue(values, 1, js_to_lisp(l125));
l305.fvalue(values, 1, js_to_lisp(l122));
l305.fvalue(values, 1, js_to_lisp(l121));
l305.fvalue(values, 1, js_to_lisp(l120));
l305.fvalue(values, 1, js_to_lisp(l119));
l305.fvalue(values, 1, js_to_lisp(l118));
l305.fvalue(values, 1, js_to_lisp(l117));
l305.fvalue(values, 1, js_to_lisp(l116));
l305.fvalue(values, 1, js_to_lisp(l115));
l305.fvalue(values, 1, js_to_lisp(l113));
l305.fvalue(values, 1, js_to_lisp(l112));
l305.fvalue(values, 1, js_to_lisp(l111));
l305.fvalue(values, 1, js_to_lisp(l110));
l305.fvalue(values, 1, js_to_lisp(l109));
l305.fvalue(values, 1, js_to_lisp(l107));
l305.fvalue(values, 1, js_to_lisp(l106));
l305.fvalue(values, 1, js_to_lisp(l105));
l305.fvalue(values, 1, js_to_lisp(l104));
l305.fvalue(values, 1, js_to_lisp(l103));
l305.fvalue(values, 1, js_to_lisp(l102));
l305.fvalue(values, 1, js_to_lisp(l101));
l305.fvalue(values, 1, js_to_lisp(l100));
l305.fvalue(values, 1, js_to_lisp(l99));
l305.fvalue(values, 1, js_to_lisp(l98));
l305.fvalue(values, 1, js_to_lisp(l97));
l305.fvalue(values, 1, js_to_lisp(l95));
l305.fvalue(values, 1, js_to_lisp(l94));
l305.fvalue(values, 1, js_to_lisp(l93));
l305.fvalue(values, 1, js_to_lisp(l92));
l305.fvalue(values, 1, js_to_lisp(l91));
l305.fvalue(values, 1, js_to_lisp(l90));
l305.fvalue(values, 1, js_to_lisp(l89));
l305.fvalue(values, 1, js_to_lisp(l88));
l305.fvalue(values, 1, js_to_lisp(l84));
l305.fvalue(values, 1, js_to_lisp(l82));
l305.fvalue(values, 1, js_to_lisp(l81));
l305.fvalue(values, 1, js_to_lisp(l80));
l305.fvalue(values, 1, js_to_lisp(l79));
l305.fvalue(values, 1, js_to_lisp(l78));
l305.fvalue(values, 1, js_to_lisp(l76));
l305.fvalue(values, 1, js_to_lisp(l75));
l305.fvalue(values, 1, js_to_lisp(l74));
l305.fvalue(values, 1, js_to_lisp(l72));
l305.fvalue(values, 1, js_to_lisp(l71));
l305.fvalue(values, 1, js_to_lisp(l70));
l305.fvalue(values, 1, js_to_lisp(l69));
l305.fvalue(values, 1, js_to_lisp(l68));
l305.fvalue(values, 1, js_to_lisp(l67));
l305.fvalue(values, 1, js_to_lisp(l66));
l305.fvalue(values, 1, js_to_lisp(l65));
l305.fvalue(values, 1, js_to_lisp(l64));
l305.fvalue(values, 1, js_to_lisp(l63));
l305.fvalue(values, 1, js_to_lisp(l62));
l305.fvalue(values, 1, js_to_lisp(l61));
l305.fvalue(values, 1, js_to_lisp(l60));
l305.fvalue(values, 1, js_to_lisp(l59));
l305.fvalue(values, 1, js_to_lisp(l58));
l305.fvalue(values, 1, js_to_lisp(l57));
l305.fvalue(values, 1, js_to_lisp(l56));
l305.fvalue(values, 1, js_to_lisp(l54));
l305.fvalue(values, 1, js_to_lisp(l53));
l305.fvalue(values, 1, js_to_lisp(l52));
l305.fvalue(values, 1, js_to_lisp(l51));
l305.fvalue(values, 1, js_to_lisp(l50));
l305.fvalue(values, 1, js_to_lisp(l49));
l305.fvalue(values, 1, js_to_lisp(l48));
l305.fvalue(values, 1, js_to_lisp(l47));
l305.fvalue(values, 1, js_to_lisp(l46));
l305.fvalue(values, 1, js_to_lisp(l45));
l305.fvalue(values, 1, js_to_lisp(l44));
l305.fvalue(values, 1, js_to_lisp(l43));
l305.fvalue(values, 1, js_to_lisp(l42));
l305.fvalue(values, 1, js_to_lisp(l41));
l305.fvalue(values, 1, js_to_lisp(l40));
l305.fvalue(values, 1, js_to_lisp(l39));
l305.fvalue(values, 1, js_to_lisp(l38));
l305.fvalue(values, 1, js_to_lisp(l37));
l305.fvalue(values, 1, js_to_lisp(l36));
l305.fvalue(values, 1, js_to_lisp(l35));
l305.fvalue(values, 1, js_to_lisp(l34));
l305.fvalue(values, 1, js_to_lisp(l33));
l305.fvalue(values, 1, js_to_lisp(l32));
l305.fvalue(values, 1, js_to_lisp(l31));
l305.fvalue(values, 1, js_to_lisp(l30));
l305.fvalue(values, 1, js_to_lisp(l29));
l305.fvalue(values, 1, js_to_lisp(l28));
l305.fvalue(values, 1, js_to_lisp(l27));
l305.fvalue(values, 1, js_to_lisp(l26));
l305.fvalue(values, 1, js_to_lisp(l25));
l305.fvalue(values, 1, js_to_lisp(l24));
l305.fvalue(values, 1, js_to_lisp(l23));
l305.fvalue(values, 1, js_to_lisp(l22));
l305.fvalue(values, 1, js_to_lisp(l21));
l305.fvalue(values, 1, js_to_lisp(l20));
l305.fvalue(values, 1, js_to_lisp(l19));
l305.fvalue(values, 1, js_to_lisp(l18));
l305.fvalue(values, 1, js_to_lisp(l17));
l305.fvalue(values, 1, js_to_lisp(l15));
l305.fvalue(values, 1, js_to_lisp(l14));
l305.fvalue(values, 1, js_to_lisp(l13));
l305.fvalue(values, 1, js_to_lisp(l12));
l305.fvalue(values, 1, js_to_lisp(l11));
l305.fvalue(values, 1, js_to_lisp(l10));
l305.fvalue(values, 1, js_to_lisp(l9));
l305.fvalue(values, 1, js_to_lisp(l8));
l305.fvalue(values, 1, js_to_lisp(l7));
l305.fvalue(values, 1, js_to_lisp(l6));
l305.fvalue(values, 1, js_to_lisp(l5));
l305.fvalue(values, 1, js_to_lisp(l4));
l305.fvalue(values, 1, js_to_lisp(l3));
l305.fvalue(values, 1, js_to_lisp(l2));
l305.fvalue(values, 1, js_to_lisp(l1));
var l1312 = QIList(QIList(l1311,make_lisp_string("l1311")),QIList(l1310,make_lisp_string("l1310")),QIList(l1309,make_lisp_string("l1309")),QIList(l1308,make_lisp_string("l1308")),QIList(l1307,make_lisp_string("l1307")),QIList(l1306,make_lisp_string("l1306")),QIList(l1305,make_lisp_string("l1305")),QIList(l1304,make_lisp_string("l1304")),QIList(l1303,make_lisp_string("l1303")),QIList(l1302,make_lisp_string("l1302")),QIList(l1301,make_lisp_string("l1301")),QIList(l1300,make_lisp_string("l1300")),QIList(l1299,make_lisp_string("l1299")),QIList(l1298,make_lisp_string("l1298")),QIList(l1297,make_lisp_string("l1297")),QIList(l1296,make_lisp_string("l1296")),QIList(l1295,make_lisp_string("l1295")),QIList(l1294,make_lisp_string("l1294")),QIList(l1293,make_lisp_string("l1293")),QIList(l1292,make_lisp_string("l1292")),QIList(l1291,make_lisp_string("l1291")),QIList(l1290,make_lisp_string("l1290")),QIList(l1289,make_lisp_string("l1289")),QIList(l1288,make_lisp_string("l1288")),QIList(l1287,make_lisp_string("l1287")),QIList(l1286,make_lisp_string("l1286")),QIList(l1285,make_lisp_string("l1285")),QIList(l1284,make_lisp_string("l1284")),QIList(l1283,make_lisp_string("l1283")),QIList(l1282,make_lisp_string("l1282")),QIList(l1281,make_lisp_string("l1281")),QIList(l1280,make_lisp_string("l1280")),QIList(l1279,make_lisp_string("l1279")),QIList(l1278,make_lisp_string("l1278")),QIList(l1277,make_lisp_string("l1277")),QIList(l1276,make_lisp_string("l1276")),QIList(l1275,make_lisp_string("l1275")),QIList(l1274,make_lisp_string("l1274")),QIList(l1273,make_lisp_string("l1273")),QIList(l1272,make_lisp_string("l1272")),QIList(l1271,make_lisp_string("l1271")),QIList(l1270,make_lisp_string("l1270")),QIList(l1269,make_lisp_string("l1269")),QIList(l1268,make_lisp_string("l1268")),QIList(l1267,make_lisp_string("l1267")),QIList(l1266,make_lisp_string("l1266")),QIList(l1265,make_lisp_string("l1265")),QIList(l1264,make_lisp_string("l1264")),QIList(l1263,make_lisp_string("l1263")),QIList(l1262,make_lisp_string("l1262")),QIList(l1261,make_lisp_string("l1261")),QIList(l1260,make_lisp_string("l1260")),QIList(l1259,make_lisp_string("l1259")),QIList(l1258,make_lisp_string("l1258")),QIList(l1257,make_lisp_string("l1257")),QIList(l1256,make_lisp_string("l1256")),QIList(l1255,make_lisp_string("l1255")),QIList(l1254,make_lisp_string("l1254")),QIList(l1253,make_lisp_string("l1253")),QIList(l1252,make_lisp_string("l1252")),QIList(l1251,make_lisp_string("l1251")),QIList(l1250,make_lisp_string("l1250")),QIList(l1249,make_lisp_string("l1249")),QIList(l1248,make_lisp_string("l1248")),QIList(l1247,make_lisp_string("l1247")),QIList(l1246,make_lisp_string("l1246")),QIList(l1245,make_lisp_string("l1245")),QIList(l1244,make_lisp_string("l1244")),QIList(l1243,make_lisp_string("l1243")),QIList(l1242,make_lisp_string("l1242")),QIList(l1241,make_lisp_string("l1241")),QIList(l1240,make_lisp_string("l1240")),QIList(l1239,make_lisp_string("l1239")),QIList(l1238,make_lisp_string("l1238")),QIList(l1237,make_lisp_string("l1237")),QIList(l1236,make_lisp_string("l1236")),QIList(l1235,make_lisp_string("l1235")),QIList(l1234,make_lisp_string("l1234")),QIList(l1233,make_lisp_string("l1233")),QIList(l1232,make_lisp_string("l1232")),QIList(l1231,make_lisp_string("l1231")),QIList(l1230,make_lisp_string("l1230")),QIList(l1229,make_lisp_string("l1229")),QIList(l1228,make_lisp_string("l1228")),QIList(l1227,make_lisp_string("l1227")),QIList(l1226,make_lisp_string("l1226")),QIList(l1225,make_lisp_string("l1225")),QIList(l1224,make_lisp_string("l1224")),QIList(l1223,make_lisp_string("l1223")),QIList(l1222,make_lisp_string("l1222")),QIList(l1221,make_lisp_string("l1221")),QIList(l1220,make_lisp_string("l1220")),QIList(l1219,make_lisp_string("l1219")),QIList(l1218,make_lisp_string("l1218")),QIList(l1217,make_lisp_string("l1217")),QIList(l1216,make_lisp_string("l1216")),QIList(l1215,make_lisp_string("l1215")),QIList(l1214,make_lisp_string("l1214")),QIList(l1213,make_lisp_string("l1213")),QIList(l1212,make_lisp_string("l1212")),QIList(l1211,make_lisp_string("l1211")),QIList(l1210,make_lisp_string("l1210")),QIList(l1209,make_lisp_string("l1209")),QIList(l1208,make_lisp_string("l1208")),QIList(l1207,make_lisp_string("l1207")),QIList(l1206,make_lisp_string("l1206")),QIList(l1205,make_lisp_string("l1205")),QIList(l1204,make_lisp_string("l1204")),QIList(l1203,make_lisp_string("l1203")),QIList(l1202,make_lisp_string("l1202")),QIList(l1201,make_lisp_string("l1201")),QIList(l1200,make_lisp_string("l1200")),QIList(l1199,make_lisp_string("l1199")),QIList(l1198,make_lisp_string("l1198")),QIList(l1197,make_lisp_string("l1197")),QIList(l1196,make_lisp_string("l1196")),QIList(l1195,make_lisp_string("l1195")),QIList(l1194,make_lisp_string("l1194")),QIList(l1193,make_lisp_string("l1193")),QIList(l1192,make_lisp_string("l1192")),QIList(l1191,make_lisp_string("l1191")),QIList(l1190,make_lisp_string("l1190")),QIList(l1189,make_lisp_string("l1189")),QIList(l1188,make_lisp_string("l1188")),QIList(l1187,make_lisp_string("l1187")),QIList(l1186,make_lisp_string("l1186")),QIList(l1185,make_lisp_string("l1185")),QIList(l1184,make_lisp_string("l1184")),QIList(l1183,make_lisp_string("l1183")),QIList(l1182,make_lisp_string("l1182")),QIList(l1181,make_lisp_string("l1181")),QIList(l1180,make_lisp_string("l1180")),QIList(l1179,make_lisp_string("l1179")),QIList(l1178,make_lisp_string("l1178")),QIList(l1177,make_lisp_string("l1177")),QIList(l1176,make_lisp_string("l1176")),QIList(l1175,make_lisp_string("l1175")),QIList(l1174,make_lisp_string("l1174")),QIList(l1173,make_lisp_string("l1173")),QIList(l1172,make_lisp_string("l1172")),QIList(l1171,make_lisp_string("l1171")),QIList(l1170,make_lisp_string("l1170")),QIList(l1169,make_lisp_string("l1169")),QIList(l1168,make_lisp_string("l1168")),QIList(l1167,make_lisp_string("l1167")),QIList(l1166,make_lisp_string("l1166")),QIList(l1165,make_lisp_string("l1165")),QIList(l1164,make_lisp_string("l1164")),QIList(l1163,make_lisp_string("l1163")),QIList(l1162,make_lisp_string("l1162")),QIList(l1161,make_lisp_string("l1161")),QIList(l1160,make_lisp_string("l1160")),QIList(l1159,make_lisp_string("l1159")),QIList(l1158,make_lisp_string("l1158")),QIList(l1157,make_lisp_string("l1157")),QIList(l1156,make_lisp_string("l1156")),QIList(l1155,make_lisp_string("l1155")),QIList(l1154,make_lisp_string("l1154")),QIList(l1153,make_lisp_string("l1153")),QIList(l1152,make_lisp_string("l1152")),QIList(l1151,make_lisp_string("l1151")),QIList(l1150,make_lisp_string("l1150")),QIList(l1149,make_lisp_string("l1149")),QIList(l1148,make_lisp_string("l1148")),QIList(l1147,make_lisp_string("l1147")),QIList(l1146,make_lisp_string("l1146")),QIList(l1145,make_lisp_string("l1145")),QIList(l1144,make_lisp_string("l1144")),QIList(l1143,make_lisp_string("l1143")),QIList(l1142,make_lisp_string("l1142")),QIList(l1141,make_lisp_string("l1141")),QIList(l1140,make_lisp_string("l1140")),QIList(l1139,make_lisp_string("l1139")),QIList(l1138,make_lisp_string("l1138")),QIList(l1137,make_lisp_string("l1137")),QIList(l1136,make_lisp_string("l1136")),QIList(l1135,make_lisp_string("l1135")),QIList(l1134,make_lisp_string("l1134")),QIList(l1133,make_lisp_string("l1133")),QIList(l1132,make_lisp_string("l1132")),QIList(l1131,make_lisp_string("l1131")),QIList(l1130,make_lisp_string("l1130")),QIList(l1129,make_lisp_string("l1129")),QIList(l1128,make_lisp_string("l1128")),QIList(l1127,make_lisp_string("l1127")),QIList(l1126,make_lisp_string("l1126")),QIList(l1125,make_lisp_string("l1125")),QIList(l1124,make_lisp_string("l1124")),QIList(l1123,make_lisp_string("l1123")),QIList(l1122,make_lisp_string("l1122")),QIList(l1121,make_lisp_string("l1121")),QIList(l1120,make_lisp_string("l1120")),QIList(l1119,make_lisp_string("l1119")),QIList(l1118,make_lisp_string("l1118")),QIList(l1117,make_lisp_string("l1117")),QIList(l1116,make_lisp_string("l1116")),QIList(l1115,make_lisp_string("l1115")),QIList(l1114,make_lisp_string("l1114")),QIList(l1113,make_lisp_string("l1113")),QIList(l1112,make_lisp_string("l1112")),QIList(l1111,make_lisp_string("l1111")),QIList(l1110,make_lisp_string("l1110")),QIList(l1109,make_lisp_string("l1109")),QIList(l1108,make_lisp_string("l1108")),QIList(l1107,make_lisp_string("l1107")),QIList(l1106,make_lisp_string("l1106")),QIList(l1105,make_lisp_string("l1105")),QIList(l1104,make_lisp_string("l1104")),QIList(l1103,make_lisp_string("l1103")),QIList(l1102,make_lisp_string("l1102")),QIList(l1101,make_lisp_string("l1101")),QIList(l1100,make_lisp_string("l1100")),QIList(l1099,make_lisp_string("l1099")),QIList(l1098,make_lisp_string("l1098")),QIList(l1097,make_lisp_string("l1097")),QIList(l1096,make_lisp_string("l1096")),QIList(l1095,make_lisp_string("l1095")),QIList(l1094,make_lisp_string("l1094")),QIList(l1093,make_lisp_string("l1093")),QIList(l1092,make_lisp_string("l1092")),QIList(l1091,make_lisp_string("l1091")),QIList(l1090,make_lisp_string("l1090")),QIList(l1089,make_lisp_string("l1089")),QIList(l1088,make_lisp_string("l1088")),QIList(l1087,make_lisp_string("l1087")),QIList(l1086,make_lisp_string("l1086")),QIList(l1085,make_lisp_string("l1085")),QIList(l1084,make_lisp_string("l1084")),QIList(l1083,make_lisp_string("l1083")),QIList(l1082,make_lisp_string("l1082")),QIList(l1081,make_lisp_string("l1081")),QIList(l1080,make_lisp_string("l1080")),QIList(l1079,make_lisp_string("l1079")),QIList(l1078,make_lisp_string("l1078")),QIList(l1077,make_lisp_string("l1077")),QIList(l1076,make_lisp_string("l1076")),QIList(l1075,make_lisp_string("l1075")),QIList(l1074,make_lisp_string("l1074")),QIList(l1073,make_lisp_string("l1073")),QIList(l1072,make_lisp_string("l1072")),QIList(l1071,make_lisp_string("l1071")),QIList(l1070,make_lisp_string("l1070")),QIList(l1069,make_lisp_string("l1069")),QIList(l1068,make_lisp_string("l1068")),QIList(l1067,make_lisp_string("l1067")),QIList(l1066,make_lisp_string("l1066")),QIList(l1065,make_lisp_string("l1065")),QIList(l1064,make_lisp_string("l1064")),QIList(l1063,make_lisp_string("l1063")),QIList(l1062,make_lisp_string("l1062")),QIList(l1061,make_lisp_string("l1061")),QIList(l1060,make_lisp_string("l1060")),QIList(l1059,make_lisp_string("l1059")),QIList(l1058,make_lisp_string("l1058")),QIList(l1057,make_lisp_string("l1057")),QIList(l1056,make_lisp_string("l1056")),QIList(l1055,make_lisp_string("l1055")),QIList(l1054,make_lisp_string("l1054")),QIList(l1053,make_lisp_string("l1053")),QIList(l1052,make_lisp_string("l1052")),QIList(l1051,make_lisp_string("l1051")),QIList(l1050,make_lisp_string("l1050")),QIList(l1049,make_lisp_string("l1049")),QIList(l1048,make_lisp_string("l1048")),QIList(l1047,make_lisp_string("l1047")),QIList(l1046,make_lisp_string("l1046")),QIList(l1045,make_lisp_string("l1045")),QIList(l1044,make_lisp_string("l1044")),QIList(l1043,make_lisp_string("l1043")),QIList(l1042,make_lisp_string("l1042")),QIList(l1041,make_lisp_string("l1041")),QIList(l1040,make_lisp_string("l1040")),QIList(l1039,make_lisp_string("l1039")),QIList(l1038,make_lisp_string("l1038")),QIList(l1037,make_lisp_string("l1037")),QIList(l1036,make_lisp_string("l1036")),QIList(l1035,make_lisp_string("l1035")),QIList(l1034,make_lisp_string("l1034")),QIList(l1033,make_lisp_string("l1033")),QIList(l1032,make_lisp_string("l1032")),QIList(l1031,make_lisp_string("l1031")),QIList(l1030,make_lisp_string("l1030")),QIList(l1029,make_lisp_string("l1029")),QIList(l1028,make_lisp_string("l1028")),QIList(l1027,make_lisp_string("l1027")),QIList(l1026,make_lisp_string("l1026")),QIList(l1025,make_lisp_string("l1025")),QIList(l1024,make_lisp_string("l1024")),QIList(l1023,make_lisp_string("l1023")),QIList(l1022,make_lisp_string("l1022")),QIList(l1021,make_lisp_string("l1021")),QIList(l1020,make_lisp_string("l1020")),QIList(l1019,make_lisp_string("l1019")),QIList(l1018,make_lisp_string("l1018")),QIList(l1017,make_lisp_string("l1017")),QIList(l1016,make_lisp_string("l1016")),QIList(l1015,make_lisp_string("l1015")),QIList(l1014,make_lisp_string("l1014")),QIList(l1013,make_lisp_string("l1013")),QIList(l1012,make_lisp_string("l1012")),QIList(l1011,make_lisp_string("l1011")),QIList(l1010,make_lisp_string("l1010")),QIList(l1009,make_lisp_string("l1009")),QIList(l1008,make_lisp_string("l1008")),QIList(l1007,make_lisp_string("l1007")),QIList(l1006,make_lisp_string("l1006")),QIList(l1005,make_lisp_string("l1005")),QIList(l1004,make_lisp_string("l1004")),QIList(l1003,make_lisp_string("l1003")),QIList(l1002,make_lisp_string("l1002")),QIList(l1001,make_lisp_string("l1001")),QIList(l1000,make_lisp_string("l1000")),QIList(l999,make_lisp_string("l999")),QIList(l998,make_lisp_string("l998")),QIList(l997,make_lisp_string("l997")),QIList(l996,make_lisp_string("l996")),QIList(l995,make_lisp_string("l995")),QIList(l994,make_lisp_string("l994")),QIList(l993,make_lisp_string("l993")),QIList(l992,make_lisp_string("l992")),QIList(l991,make_lisp_string("l991")),QIList(l990,make_lisp_string("l990")),QIList(l989,make_lisp_string("l989")),QIList(l988,make_lisp_string("l988")),QIList(l987,make_lisp_string("l987")),QIList(l986,make_lisp_string("l986")),QIList(l985,make_lisp_string("l985")),QIList(l984,make_lisp_string("l984")),QIList(l983,make_lisp_string("l983")),QIList(l982,make_lisp_string("l982")),QIList(l981,make_lisp_string("l981")),QIList(l980,make_lisp_string("l980")),QIList(l979,make_lisp_string("l979")),QIList(l978,make_lisp_string("l978")),QIList(l977,make_lisp_string("l977")),QIList(l976,make_lisp_string("l976")),QIList(l975,make_lisp_string("l975")),QIList(l974,make_lisp_string("l974")),QIList(l973,make_lisp_string("l973")),QIList(l972,make_lisp_string("l972")),QIList(l971,make_lisp_string("l971")),QIList(l970,make_lisp_string("l970")),QIList(l969,make_lisp_string("l969")),QIList(l968,make_lisp_string("l968")),QIList(l967,make_lisp_string("l967")),QIList(l966,make_lisp_string("l966")),QIList(l965,make_lisp_string("l965")),QIList(l964,make_lisp_string("l964")),QIList(l963,make_lisp_string("l963")),QIList(l962,make_lisp_string("l962")),QIList(l961,make_lisp_string("l961")),QIList(l960,make_lisp_string("l960")),QIList(l959,make_lisp_string("l959")),QIList(l958,make_lisp_string("l958")),QIList(l957,make_lisp_string("l957")),QIList(l956,make_lisp_string("l956")),QIList(l955,make_lisp_string("l955")),QIList(l954,make_lisp_string("l954")),QIList(l953,make_lisp_string("l953")),QIList(l952,make_lisp_string("l952")),QIList(l951,make_lisp_string("l951")),QIList(l950,make_lisp_string("l950")),QIList(l949,make_lisp_string("l949")),QIList(l948,make_lisp_string("l948")),QIList(l947,make_lisp_string("l947")),QIList(l946,make_lisp_string("l946")),QIList(l945,make_lisp_string("l945")),QIList(l944,make_lisp_string("l944")),QIList(l943,make_lisp_string("l943")),QIList(l942,make_lisp_string("l942")),QIList(l941,make_lisp_string("l941")),QIList(l940,make_lisp_string("l940")),QIList(l939,make_lisp_string("l939")),QIList(l938,make_lisp_string("l938")),QIList(l937,make_lisp_string("l937")),QIList(l936,make_lisp_string("l936")),QIList(l935,make_lisp_string("l935")),QIList(l934,make_lisp_string("l934")),QIList(l933,make_lisp_string("l933")),QIList(l932,make_lisp_string("l932")),QIList(l931,make_lisp_string("l931")),QIList(l930,make_lisp_string("l930")),QIList(l929,make_lisp_string("l929")),QIList(l928,make_lisp_string("l928")),QIList(l927,make_lisp_string("l927")),QIList(l926,make_lisp_string("l926")),QIList(l925,make_lisp_string("l925")),QIList(l924,make_lisp_string("l924")),QIList(l923,make_lisp_string("l923")),QIList(l922,make_lisp_string("l922")),QIList(l921,make_lisp_string("l921")),QIList(l920,make_lisp_string("l920")),QIList(l919,make_lisp_string("l919")),QIList(l918,make_lisp_string("l918")),QIList(l917,make_lisp_string("l917")),QIList(l916,make_lisp_string("l916")),QIList(l915,make_lisp_string("l915")),QIList(l914,make_lisp_string("l914")),QIList(l913,make_lisp_string("l913")),QIList(l912,make_lisp_string("l912")),QIList(l911,make_lisp_string("l911")),QIList(l910,make_lisp_string("l910")),QIList(l909,make_lisp_string("l909")),QIList(l908,make_lisp_string("l908")),QIList(l907,make_lisp_string("l907")),QIList(l906,make_lisp_string("l906")),QIList(l905,make_lisp_string("l905")),QIList(l904,make_lisp_string("l904")),QIList(l903,make_lisp_string("l903")),QIList(l902,make_lisp_string("l902")),QIList(l901,make_lisp_string("l901")),QIList(l900,make_lisp_string("l900")),QIList(l899,make_lisp_string("l899")),QIList(l898,make_lisp_string("l898")),QIList(l897,make_lisp_string("l897")),QIList(l896,make_lisp_string("l896")),QIList(l895,make_lisp_string("l895")),QIList(l894,make_lisp_string("l894")),QIList(l893,make_lisp_string("l893")),QIList(l892,make_lisp_string("l892")),QIList(l891,make_lisp_string("l891")),QIList(l890,make_lisp_string("l890")),QIList(l889,make_lisp_string("l889")),QIList(l888,make_lisp_string("l888")),QIList(l887,make_lisp_string("l887")),QIList(l886,make_lisp_string("l886")),QIList(l885,make_lisp_string("l885")),QIList(l884,make_lisp_string("l884")),QIList(l883,make_lisp_string("l883")),QIList(l882,make_lisp_string("l882")),QIList(l881,make_lisp_string("l881")),QIList(l880,make_lisp_string("l880")),QIList(l879,make_lisp_string("l879")),QIList(l878,make_lisp_string("l878")),QIList(l877,make_lisp_string("l877")),QIList(l876,make_lisp_string("l876")),QIList(l875,make_lisp_string("l875")),QIList(l874,make_lisp_string("l874")),QIList(l873,make_lisp_string("l873")),QIList(l872,make_lisp_string("l872")),QIList(l871,make_lisp_string("l871")),QIList(l870,make_lisp_string("l870")),QIList(l869,make_lisp_string("l869")),QIList(l868,make_lisp_string("l868")),QIList(l867,make_lisp_string("l867")),QIList(l866,make_lisp_string("l866")),QIList(l865,make_lisp_string("l865")),QIList(l864,make_lisp_string("l864")),QIList(l863,make_lisp_string("l863")),QIList(l862,make_lisp_string("l862")),QIList(l861,make_lisp_string("l861")),QIList(l860,make_lisp_string("l860")),QIList(l859,make_lisp_string("l859")),QIList(l858,make_lisp_string("l858")),QIList(l857,make_lisp_string("l857")),QIList(l856,make_lisp_string("l856")),QIList(l855,make_lisp_string("l855")),QIList(l854,make_lisp_string("l854")),QIList(l853,make_lisp_string("l853")),QIList(l852,make_lisp_string("l852")),QIList(l851,make_lisp_string("l851")),QIList(l850,make_lisp_string("l850")),QIList(l849,make_lisp_string("l849")),QIList(l848,make_lisp_string("l848")),QIList(l847,make_lisp_string("l847")),QIList(l846,make_lisp_string("l846")),QIList(l845,make_lisp_string("l845")),QIList(l844,make_lisp_string("l844")),QIList(l843,make_lisp_string("l843")),QIList(l842,make_lisp_string("l842")),QIList(l841,make_lisp_string("l841")),QIList(l840,make_lisp_string("l840")),QIList(l839,make_lisp_string("l839")),QIList(l838,make_lisp_string("l838")),QIList(l837,make_lisp_string("l837")),QIList(l836,make_lisp_string("l836")),QIList(l835,make_lisp_string("l835")),QIList(l834,make_lisp_string("l834")),QIList(l833,make_lisp_string("l833")),QIList(l832,make_lisp_string("l832")),QIList(l831,make_lisp_string("l831")),QIList(l830,make_lisp_string("l830")),QIList(l829,make_lisp_string("l829")),QIList(l828,make_lisp_string("l828")),QIList(l827,make_lisp_string("l827")),QIList(l826,make_lisp_string("l826")),QIList(l825,make_lisp_string("l825")),QIList(l824,make_lisp_string("l824")),QIList(l823,make_lisp_string("l823")),QIList(l822,make_lisp_string("l822")),QIList(l821,make_lisp_string("l821")),QIList(l820,make_lisp_string("l820")),QIList(l819,make_lisp_string("l819")),QIList(l818,make_lisp_string("l818")),QIList(l817,make_lisp_string("l817")),QIList(l816,make_lisp_string("l816")),QIList(l815,make_lisp_string("l815")),QIList(l814,make_lisp_string("l814")),QIList(l813,make_lisp_string("l813")),QIList(l812,make_lisp_string("l812")),QIList(l811,make_lisp_string("l811")),QIList(l810,make_lisp_string("l810")),QIList(l809,make_lisp_string("l809")),QIList(l808,make_lisp_string("l808")),QIList(l807,make_lisp_string("l807")),QIList(l806,make_lisp_string("l806")),QIList(l805,make_lisp_string("l805")),QIList(l804,make_lisp_string("l804")),QIList(l803,make_lisp_string("l803")),QIList(l802,make_lisp_string("l802")),QIList(l801,make_lisp_string("l801")),QIList(l800,make_lisp_string("l800")),QIList(l799,make_lisp_string("l799")),QIList(l798,make_lisp_string("l798")),QIList(l797,make_lisp_string("l797")),QIList(l796,make_lisp_string("l796")),QIList(l795,make_lisp_string("l795")),QIList(l794,make_lisp_string("l794")),QIList(l793,make_lisp_string("l793")),QIList(l792,make_lisp_string("l792")),QIList(l791,make_lisp_string("l791")),QIList(l790,make_lisp_string("l790")),QIList(l789,make_lisp_string("l789")),QIList(l788,make_lisp_string("l788")),QIList(l787,make_lisp_string("l787")),QIList(l786,make_lisp_string("l786")),QIList(l785,make_lisp_string("l785")),QIList(l784,make_lisp_string("l784")),QIList(l783,make_lisp_string("l783")),QIList(l782,make_lisp_string("l782")),QIList(l781,make_lisp_string("l781")),QIList(l780,make_lisp_string("l780")),QIList(l779,make_lisp_string("l779")),QIList(l778,make_lisp_string("l778")),QIList(l777,make_lisp_string("l777")),QIList(l776,make_lisp_string("l776")),QIList(l775,make_lisp_string("l775")),QIList(l774,make_lisp_string("l774")),QIList(l773,make_lisp_string("l773")),QIList(l772,make_lisp_string("l772")),QIList(l771,make_lisp_string("l771")),QIList(l770,make_lisp_string("l770")),QIList(l769,make_lisp_string("l769")),QIList(l768,make_lisp_string("l768")),QIList(l767,make_lisp_string("l767")),QIList(l766,make_lisp_string("l766")),QIList(l765,make_lisp_string("l765")),QIList(l764,make_lisp_string("l764")),QIList(l763,make_lisp_string("l763")),QIList(l762,make_lisp_string("l762")),QIList(l761,make_lisp_string("l761")),QIList(l760,make_lisp_string("l760")),QIList(l759,make_lisp_string("l759")),QIList(l758,make_lisp_string("l758")),QIList(l757,make_lisp_string("l757")),QIList(l756,make_lisp_string("l756")),QIList(l755,make_lisp_string("l755")),QIList(l754,make_lisp_string("l754")),QIList(l753,make_lisp_string("l753")),QIList(l752,make_lisp_string("l752")),QIList(l751,make_lisp_string("l751")),QIList(l750,make_lisp_string("l750")),QIList(l749,make_lisp_string("l749")),QIList(l748,make_lisp_string("l748")),QIList(l747,make_lisp_string("l747")),QIList(l746,make_lisp_string("l746")),QIList(l745,make_lisp_string("l745")),QIList(l744,make_lisp_string("l744")),QIList(l743,make_lisp_string("l743")),QIList(l742,make_lisp_string("l742")),QIList(l741,make_lisp_string("l741")),QIList(l740,make_lisp_string("l740")),QIList(l739,make_lisp_string("l739")),QIList(l738,make_lisp_string("l738")),QIList(l737,make_lisp_string("l737")),QIList(l736,make_lisp_string("l736")),QIList(l735,make_lisp_string("l735")),QIList(l734,make_lisp_string("l734")),QIList(l733,make_lisp_string("l733")),QIList(l732,make_lisp_string("l732")),QIList(l731,make_lisp_string("l731")),QIList(l730,make_lisp_string("l730")),QIList(l729,make_lisp_string("l729")),QIList(l728,make_lisp_string("l728")),QIList(l727,make_lisp_string("l727")),QIList(l726,make_lisp_string("l726")),QIList(l725,make_lisp_string("l725")),QIList(l724,make_lisp_string("l724")),QIList(l723,make_lisp_string("l723")),QIList(l722,make_lisp_string("l722")),QIList(l721,make_lisp_string("l721")),QIList(l720,make_lisp_string("l720")),QIList(l719,make_lisp_string("l719")),QIList(l718,make_lisp_string("l718")),QIList(l717,make_lisp_string("l717")),QIList(l716,make_lisp_string("l716")),QIList(l715,make_lisp_string("l715")),QIList(l714,make_lisp_string("l714")),QIList(l713,make_lisp_string("l713")),QIList(l712,make_lisp_string("l712")),QIList(l711,make_lisp_string("l711")),QIList(l710,make_lisp_string("l710")),QIList(l709,make_lisp_string("l709")),QIList(l708,make_lisp_string("l708")),QIList(l707,make_lisp_string("l707")),QIList(l706,make_lisp_string("l706")),QIList(l705,make_lisp_string("l705")),QIList(l704,make_lisp_string("l704")),QIList(l703,make_lisp_string("l703")),QIList(l702,make_lisp_string("l702")),QIList(l701,make_lisp_string("l701")),QIList(l700,make_lisp_string("l700")),QIList(l699,make_lisp_string("l699")),QIList(l698,make_lisp_string("l698")),QIList(l697,make_lisp_string("l697")),QIList(l696,make_lisp_string("l696")),QIList(l695,make_lisp_string("l695")),QIList(l694,make_lisp_string("l694")),QIList(l693,make_lisp_string("l693")),QIList(l692,make_lisp_string("l692")),QIList(l691,make_lisp_string("l691")),QIList(l690,make_lisp_string("l690")),QIList(l689,make_lisp_string("l689")),QIList(l688,make_lisp_string("l688")),QIList(l687,make_lisp_string("l687")),QIList(l686,make_lisp_string("l686")),QIList(l685,make_lisp_string("l685")),QIList(l684,make_lisp_string("l684")),QIList(l683,make_lisp_string("l683")),QIList(l682,make_lisp_string("l682")),QIList(l681,make_lisp_string("l681")),QIList(l680,make_lisp_string("l680")),QIList(l679,make_lisp_string("l679")),QIList(l678,make_lisp_string("l678")),QIList(l677,make_lisp_string("l677")),QIList(l676,make_lisp_string("l676")),QIList(l675,make_lisp_string("l675")),QIList(l674,make_lisp_string("l674")),QIList(l673,make_lisp_string("l673")),QIList(l672,make_lisp_string("l672")),QIList(l671,make_lisp_string("l671")),QIList(l670,make_lisp_string("l670")),QIList(l669,make_lisp_string("l669")),QIList(l668,make_lisp_string("l668")),QIList(l667,make_lisp_string("l667")),QIList(l666,make_lisp_string("l666")),QIList(l665,make_lisp_string("l665")),QIList(l664,make_lisp_string("l664")),QIList(l663,make_lisp_string("l663")),QIList(l662,make_lisp_string("l662")),QIList(l661,make_lisp_string("l661")),QIList(l660,make_lisp_string("l660")),QIList(l659,make_lisp_string("l659")),QIList(l658,make_lisp_string("l658")),QIList(l657,make_lisp_string("l657")),QIList(l656,make_lisp_string("l656")),QIList(l655,make_lisp_string("l655")),QIList(l654,make_lisp_string("l654")),QIList(l653,make_lisp_string("l653")),QIList(l652,make_lisp_string("l652")),QIList(l651,make_lisp_string("l651")),QIList(l650,make_lisp_string("l650")),QIList(l649,make_lisp_string("l649")),QIList(l648,make_lisp_string("l648")),QIList(l647,make_lisp_string("l647")),QIList(l646,make_lisp_string("l646")),QIList(l645,make_lisp_string("l645")),QIList(l644,make_lisp_string("l644")),QIList(l643,make_lisp_string("l643")),QIList(l642,make_lisp_string("l642")),QIList(l641,make_lisp_string("l641")),QIList(l640,make_lisp_string("l640")),QIList(l639,make_lisp_string("l639")),QIList(l638,make_lisp_string("l638")),QIList(l637,make_lisp_string("l637")),QIList(l636,make_lisp_string("l636")),QIList(l635,make_lisp_string("l635")),QIList(l634,make_lisp_string("l634")),QIList(l633,make_lisp_string("l633")),QIList(l632,make_lisp_string("l632")),QIList(l631,make_lisp_string("l631")),QIList(l630,make_lisp_string("l630")),QIList(l629,make_lisp_string("l629")),QIList(l628,make_lisp_string("l628")),QIList(l627,make_lisp_string("l627")),QIList(l626,make_lisp_string("l626")),QIList(l625,make_lisp_string("l625")),QIList(l624,make_lisp_string("l624")),QIList(l623,make_lisp_string("l623")),QIList(l622,make_lisp_string("l622")),QIList(l621,make_lisp_string("l621")),QIList(l620,make_lisp_string("l620")),QIList(l619,make_lisp_string("l619")),QIList(l618,make_lisp_string("l618")),QIList(l617,make_lisp_string("l617")),QIList(l616,make_lisp_string("l616")),QIList(l615,make_lisp_string("l615")),QIList(l614,make_lisp_string("l614")),QIList(l613,make_lisp_string("l613")),QIList(l612,make_lisp_string("l612")),QIList(l611,make_lisp_string("l611")),QIList(l610,make_lisp_string("l610")),QIList(l609,make_lisp_string("l609")),QIList(l608,make_lisp_string("l608")),QIList(l607,make_lisp_string("l607")),QIList(l606,make_lisp_string("l606")),QIList(l605,make_lisp_string("l605")),QIList(l604,make_lisp_string("l604")),QIList(l603,make_lisp_string("l603")),QIList(l602,make_lisp_string("l602")),QIList(l601,make_lisp_string("l601")),QIList(l600,make_lisp_string("l600")),QIList(l599,make_lisp_string("l599")),QIList(l598,make_lisp_string("l598")),QIList(l597,make_lisp_string("l597")),QIList(l596,make_lisp_string("l596")),QIList(l595,make_lisp_string("l595")),QIList(l594,make_lisp_string("l594")),QIList(l593,make_lisp_string("l593")),QIList(l592,make_lisp_string("l592")),QIList(l591,make_lisp_string("l591")),QIList(l590,make_lisp_string("l590")),QIList(l589,make_lisp_string("l589")),QIList(l588,make_lisp_string("l588")),QIList(l587,make_lisp_string("l587")),QIList(l586,make_lisp_string("l586")),QIList(l585,make_lisp_string("l585")),QIList(l584,make_lisp_string("l584")),QIList(l583,make_lisp_string("l583")),QIList(l582,make_lisp_string("l582")),QIList(l581,make_lisp_string("l581")),QIList(l580,make_lisp_string("l580")),QIList(l579,make_lisp_string("l579")),QIList(l578,make_lisp_string("l578")),QIList(l577,make_lisp_string("l577")),QIList(l576,make_lisp_string("l576")),QIList(l575,make_lisp_string("l575")),QIList(l574,make_lisp_string("l574")),QIList(l573,make_lisp_string("l573")),QIList(l572,make_lisp_string("l572")),QIList(l571,make_lisp_string("l571")),QIList(l570,make_lisp_string("l570")),QIList(l569,make_lisp_string("l569")),QIList(l568,make_lisp_string("l568")),QIList(l567,make_lisp_string("l567")),QIList(l566,make_lisp_string("l566")),QIList(l565,make_lisp_string("l565")),QIList(l564,make_lisp_string("l564")),QIList(l563,make_lisp_string("l563")),QIList(l562,make_lisp_string("l562")),QIList(l561,make_lisp_string("l561")),QIList(l560,make_lisp_string("l560")),QIList(l559,make_lisp_string("l559")),QIList(l558,make_lisp_string("l558")),QIList(l557,make_lisp_string("l557")),QIList(l556,make_lisp_string("l556")),QIList(l555,make_lisp_string("l555")),QIList(l554,make_lisp_string("l554")),QIList(l553,make_lisp_string("l553")),QIList(l552,make_lisp_string("l552")),QIList(l551,make_lisp_string("l551")),QIList(l550,make_lisp_string("l550")),QIList(l549,make_lisp_string("l549")),QIList(l548,make_lisp_string("l548")),QIList(l547,make_lisp_string("l547")),QIList(l546,make_lisp_string("l546")),QIList(l545,make_lisp_string("l545")),QIList(l544,make_lisp_string("l544")),QIList(l543,make_lisp_string("l543")),QIList(l542,make_lisp_string("l542")),QIList(l541,make_lisp_string("l541")),QIList(l540,make_lisp_string("l540")),QIList(l539,make_lisp_string("l539")),QIList(l538,make_lisp_string("l538")),QIList(l537,make_lisp_string("l537")),QIList(l536,make_lisp_string("l536")),QIList(l535,make_lisp_string("l535")),QIList(l534,make_lisp_string("l534")),QIList(l533,make_lisp_string("l533")),QIList(l532,make_lisp_string("l532")),QIList(l531,make_lisp_string("l531")),QIList(l530,make_lisp_string("l530")),QIList(l529,make_lisp_string("l529")),QIList(l528,make_lisp_string("l528")),QIList(l527,make_lisp_string("l527")),QIList(l526,make_lisp_string("l526")),QIList(l525,make_lisp_string("l525")),QIList(l524,make_lisp_string("l524")),QIList(l523,make_lisp_string("l523")),QIList(l522,make_lisp_string("l522")),QIList(l521,make_lisp_string("l521")),QIList(l520,make_lisp_string("l520")),QIList(l519,make_lisp_string("l519")),QIList(l518,make_lisp_string("l518")),QIList(l517,make_lisp_string("l517")),QIList(l516,make_lisp_string("l516")),QIList(l515,make_lisp_string("l515")),QIList(l514,make_lisp_string("l514")),QIList(l513,make_lisp_string("l513")),QIList(l512,make_lisp_string("l512")),QIList(l511,make_lisp_string("l511")),QIList(l510,make_lisp_string("l510")),QIList(l509,make_lisp_string("l509")),QIList(l508,make_lisp_string("l508")),QIList(l507,make_lisp_string("l507")),QIList(l506,make_lisp_string("l506")),QIList(l505,make_lisp_string("l505")),QIList(l504,make_lisp_string("l504")),QIList(l503,make_lisp_string("l503")),QIList(l502,make_lisp_string("l502")),QIList(l501,make_lisp_string("l501")),QIList(l500,make_lisp_string("l500")),QIList(l499,make_lisp_string("l499")),QIList(l498,make_lisp_string("l498")),QIList(l497,make_lisp_string("l497")),QIList(l496,make_lisp_string("l496")),QIList(l495,make_lisp_string("l495")),QIList(l494,make_lisp_string("l494")),QIList(l493,make_lisp_string("l493")),QIList(l492,make_lisp_string("l492")),QIList(l491,make_lisp_string("l491")),QIList(l490,make_lisp_string("l490")),QIList(l489,make_lisp_string("l489")),QIList(l488,make_lisp_string("l488")),QIList(l487,make_lisp_string("l487")),QIList(l486,make_lisp_string("l486")),QIList(l485,make_lisp_string("l485")),QIList(l484,make_lisp_string("l484")),QIList(l483,make_lisp_string("l483")),QIList(l482,make_lisp_string("l482")),QIList(l481,make_lisp_string("l481")),QIList(l480,make_lisp_string("l480")),QIList(l479,make_lisp_string("l479")),QIList(l478,make_lisp_string("l478")),QIList(l477,make_lisp_string("l477")),QIList(l476,make_lisp_string("l476")),QIList(l475,make_lisp_string("l475")),QIList(l474,make_lisp_string("l474")),QIList(l473,make_lisp_string("l473")),QIList(l472,make_lisp_string("l472")),QIList(l471,make_lisp_string("l471")),QIList(l470,make_lisp_string("l470")),QIList(l469,make_lisp_string("l469")),QIList(l468,make_lisp_string("l468")),QIList(l467,make_lisp_string("l467")),QIList(l466,make_lisp_string("l466")),QIList(l465,make_lisp_string("l465")),QIList(l464,make_lisp_string("l464")),QIList(l463,make_lisp_string("l463")),QIList(l462,make_lisp_string("l462")),QIList(l461,make_lisp_string("l461")),QIList(l460,make_lisp_string("l460")),QIList(l459,make_lisp_string("l459")),QIList(l458,make_lisp_string("l458")),QIList(l457,make_lisp_string("l457")),QIList(l456,make_lisp_string("l456")),QIList(l455,make_lisp_string("l455")),QIList(l454,make_lisp_string("l454")),QIList(l453,make_lisp_string("l453")),QIList(l452,make_lisp_string("l452")),QIList(l451,make_lisp_string("l451")),QIList(l450,make_lisp_string("l450")),QIList(l449,make_lisp_string("l449")),QIList(l448,make_lisp_string("l448")),QIList(l447,make_lisp_string("l447")),QIList(l446,make_lisp_string("l446")),QIList(l445,make_lisp_string("l445")),QIList(l444,make_lisp_string("l444")),QIList(l443,make_lisp_string("l443")),QIList(l442,make_lisp_string("l442")),QIList(l441,make_lisp_string("l441")),QIList(l440,make_lisp_string("l440")),QIList(l439,make_lisp_string("l439")),QIList(l438,make_lisp_string("l438")),QIList(l437,make_lisp_string("l437")),QIList(l436,make_lisp_string("l436")),QIList(l435,make_lisp_string("l435")),QIList(l434,make_lisp_string("l434")),QIList(l433,make_lisp_string("l433")),QIList(l432,make_lisp_string("l432")),QIList(l431,make_lisp_string("l431")),QIList(l430,make_lisp_string("l430")),QIList(l429,make_lisp_string("l429")),QIList(l428,make_lisp_string("l428")),QIList(l427,make_lisp_string("l427")),QIList(l426,make_lisp_string("l426")),QIList(l425,make_lisp_string("l425")),QIList(l424,make_lisp_string("l424")),QIList(l423,make_lisp_string("l423")),QIList(l422,make_lisp_string("l422")),QIList(l421,make_lisp_string("l421")),QIList(l420,make_lisp_string("l420")),QIList(l419,make_lisp_string("l419")),QIList(l418,make_lisp_string("l418")),QIList(l417,make_lisp_string("l417")),QIList(l416,make_lisp_string("l416")),QIList(l415,make_lisp_string("l415")),QIList(l414,make_lisp_string("l414")),QIList(l413,make_lisp_string("l413")),QIList(l412,make_lisp_string("l412")),QIList(l411,make_lisp_string("l411")),QIList(l410,make_lisp_string("l410")),QIList(l409,make_lisp_string("l409")),QIList(l408,make_lisp_string("l408")),QIList(l407,make_lisp_string("l407")),QIList(l406,make_lisp_string("l406")),QIList(l405,make_lisp_string("l405")),QIList(l404,make_lisp_string("l404")),QIList(l403,make_lisp_string("l403")),QIList(l402,make_lisp_string("l402")),QIList(l401,make_lisp_string("l401")),QIList(l400,make_lisp_string("l400")),QIList(l399,make_lisp_string("l399")),QIList(l398,make_lisp_string("l398")),QIList(l397,make_lisp_string("l397")),QIList(l396,make_lisp_string("l396")),QIList(l395,make_lisp_string("l395")),QIList(l394,make_lisp_string("l394")),QIList(l393,make_lisp_string("l393")),QIList(l392,make_lisp_string("l392")),QIList(l391,make_lisp_string("l391")),QIList(l390,make_lisp_string("l390")),QIList(l389,make_lisp_string("l389")),QIList(l388,make_lisp_string("l388")),QIList(l387,make_lisp_string("l387")),QIList(l386,make_lisp_string("l386")),QIList(l385,make_lisp_string("l385")),QIList(l384,make_lisp_string("l384")),QIList(l383,make_lisp_string("l383")),QIList(l382,make_lisp_string("l382")),QIList(l381,make_lisp_string("l381")),QIList(l380,make_lisp_string("l380")),QIList(l379,make_lisp_string("l379")),QIList(l378,make_lisp_string("l378")),QIList(l377,make_lisp_string("l377")),QIList(l376,make_lisp_string("l376")),QIList(l375,make_lisp_string("l375")),QIList(l374,make_lisp_string("l374")),QIList(l373,make_lisp_string("l373")),QIList(l372,make_lisp_string("l372")),QIList(l371,make_lisp_string("l371")),QIList(l370,make_lisp_string("l370")),QIList(l369,make_lisp_string("l369")),QIList(l368,make_lisp_string("l368")),QIList(l367,make_lisp_string("l367")),QIList(l366,make_lisp_string("l366")),QIList(l365,make_lisp_string("l365")),QIList(l364,make_lisp_string("l364")),QIList(l363,make_lisp_string("l363")),QIList(l362,make_lisp_string("l362")),QIList(l361,make_lisp_string("l361")),QIList(l360,make_lisp_string("l360")),QIList(l359,make_lisp_string("l359")),QIList(l358,make_lisp_string("l358")),QIList(l357,make_lisp_string("l357")),QIList(l356,make_lisp_string("l356")),QIList(l355,make_lisp_string("l355")),QIList(l354,make_lisp_string("l354")),QIList(l353,make_lisp_string("l353")),QIList(l352,make_lisp_string("l352")),QIList(l351,make_lisp_string("l351")),QIList(l350,make_lisp_string("l350")),QIList(l349,make_lisp_string("l349")),QIList(l348,make_lisp_string("l348")),QIList(l347,make_lisp_string("l347")),QIList(l346,make_lisp_string("l346")),QIList(l345,make_lisp_string("l345")),QIList(l344,make_lisp_string("l344")),QIList(l343,make_lisp_string("l343")),QIList(l342,make_lisp_string("l342")),QIList(l341,make_lisp_string("l341")),QIList(l340,make_lisp_string("l340")),QIList(l339,make_lisp_string("l339")),QIList(l338,make_lisp_string("l338")),QIList(l337,make_lisp_string("l337")),QIList(l336,make_lisp_string("l336")),QIList(l335,make_lisp_string("l335")),QIList(l334,make_lisp_string("l334")),QIList(l333,make_lisp_string("l333")),QIList(l332,make_lisp_string("l332")),QIList(l331,make_lisp_string("l331")),QIList(l330,make_lisp_string("l330")),QIList(l329,make_lisp_string("l329")),QIList(l328,make_lisp_string("l328")),QIList(l327,make_lisp_string("l327")),QIList(l326,make_lisp_string("l326")),QIList(l325,make_lisp_string("l325")),QIList(l324,make_lisp_string("l324")),QIList(l323,make_lisp_string("l323")),QIList(l322,make_lisp_string("l322")),QIList(l321,make_lisp_string("l321")),QIList(l320,make_lisp_string("l320")),QIList(l319,make_lisp_string("l319")),QIList(l318,make_lisp_string("l318")),QIList(l317,make_lisp_string("l317")),QIList(l316,make_lisp_string("l316")),QIList(l315,make_lisp_string("l315")),QIList(l314,make_lisp_string("l314")),QIList(l313,make_lisp_string("l313")),QIList(l312,make_lisp_string("l312")),QIList(l311,make_lisp_string("l311")),QIList(l310,make_lisp_string("l310")),QIList(l309,make_lisp_string("l309")),QIList(l308,make_lisp_string("l308")),QIList(l307,make_lisp_string("l307")),QIList(l306,make_lisp_string("l306")),QIList(l305,make_lisp_string("l305")),QIList(l304,make_lisp_string("l304")),QIList(l303,make_lisp_string("l303")),QIList(l302,make_lisp_string("l302")),QIList(l301,make_lisp_string("l301")),QIList(l300,make_lisp_string("l300")),QIList(l299,make_lisp_string("l299")),QIList(l298,make_lisp_string("l298")),QIList(l297,make_lisp_string("l297")),QIList(l296,make_lisp_string("l296")),QIList(l295,make_lisp_string("l295")),QIList(l294,make_lisp_string("l294")),QIList(l293,make_lisp_string("l293")),QIList(l292,make_lisp_string("l292")),QIList(l291,make_lisp_string("l291")),QIList(l290,make_lisp_string("l290")),QIList(l289,make_lisp_string("l289")),QIList(l288,make_lisp_string("l288")),QIList(l287,make_lisp_string("l287")),QIList(l286,make_lisp_string("l286")),QIList(l285,make_lisp_string("l285")),QIList(l284,make_lisp_string("l284")),QIList(l283,make_lisp_string("l283")),QIList(l282,make_lisp_string("l282")),QIList(l281,make_lisp_string("l281")),QIList(l280,make_lisp_string("l280")),QIList(l279,make_lisp_string("l279")),QIList(l278,make_lisp_string("l278")),QIList(l277,make_lisp_string("l277")),QIList(l276,make_lisp_string("l276")),QIList(l275,make_lisp_string("l275")),QIList(l274,make_lisp_string("l274")),QIList(l273,make_lisp_string("l273")),QIList(l272,make_lisp_string("l272")),QIList(l271,make_lisp_string("l271")),QIList(l270,make_lisp_string("l270")),QIList(l269,make_lisp_string("l269")),QIList(l268,make_lisp_string("l268")),QIList(l267,make_lisp_string("l267")),QIList(l266,make_lisp_string("l266")),QIList(l265,make_lisp_string("l265")),QIList(l264,make_lisp_string("l264")),QIList(l263,make_lisp_string("l263")),QIList(l262,make_lisp_string("l262")),QIList(l261,make_lisp_string("l261")),QIList(l260,make_lisp_string("l260")),QIList(l259,make_lisp_string("l259")),QIList(l258,make_lisp_string("l258")),QIList(l257,make_lisp_string("l257")),QIList(l256,make_lisp_string("l256")),QIList(l255,make_lisp_string("l255")),QIList(l254,make_lisp_string("l254")),QIList(l253,make_lisp_string("l253")),QIList(l252,make_lisp_string("l252")),QIList(l251,make_lisp_string("l251")),QIList(l250,make_lisp_string("l250")),QIList(l249,make_lisp_string("l249")),QIList(l248,make_lisp_string("l248")),QIList(l247,make_lisp_string("l247")),QIList(l246,make_lisp_string("l246")),QIList(l245,make_lisp_string("l245")),QIList(l244,make_lisp_string("l244")),QIList(l243,make_lisp_string("l243")),QIList(l242,make_lisp_string("l242")),QIList(l241,make_lisp_string("l241")),QIList(l240,make_lisp_string("l240")),QIList(l239,make_lisp_string("l239")),QIList(l238,make_lisp_string("l238")),QIList(l237,make_lisp_string("l237")),QIList(l236,make_lisp_string("l236")),QIList(l235,make_lisp_string("l235")),QIList(l234,make_lisp_string("l234")),QIList(l233,make_lisp_string("l233")),QIList(l232,make_lisp_string("l232")),QIList(l231,make_lisp_string("l231")),QIList(l230,make_lisp_string("l230")),QIList(l229,make_lisp_string("l229")),QIList(l228,make_lisp_string("l228")),QIList(l227,make_lisp_string("l227")),QIList(l226,make_lisp_string("l226")),QIList(l225,make_lisp_string("l225")),QIList(l224,make_lisp_string("l224")),QIList(l223,make_lisp_string("l223")),QIList(l222,make_lisp_string("l222")),QIList(l221,make_lisp_string("l221")),QIList(l220,make_lisp_string("l220")),QIList(l219,make_lisp_string("l219")),QIList(l218,make_lisp_string("l218")),QIList(l217,make_lisp_string("l217")),QIList(l216,make_lisp_string("l216")),QIList(l215,make_lisp_string("l215")),QIList(l214,make_lisp_string("l214")),QIList(l213,make_lisp_string("l213")),QIList(l212,make_lisp_string("l212")),QIList(l211,make_lisp_string("l211")),QIList(l210,make_lisp_string("l210")),QIList(l209,make_lisp_string("l209")),QIList(l208,make_lisp_string("l208")),QIList(l207,make_lisp_string("l207")),QIList(l206,make_lisp_string("l206")),QIList(l205,make_lisp_string("l205")),QIList(l204,make_lisp_string("l204")),QIList(l203,make_lisp_string("l203")),QIList(l202,make_lisp_string("l202")),QIList(l201,make_lisp_string("l201")),QIList(l200,make_lisp_string("l200")),QIList(l199,make_lisp_string("l199")),QIList(l198,make_lisp_string("l198")),QIList(l197,make_lisp_string("l197")),QIList(l196,make_lisp_string("l196")),QIList(l195,make_lisp_string("l195")),QIList(l194,make_lisp_string("l194")),QIList(l193,make_lisp_string("l193")),QIList(l192,make_lisp_string("l192")),QIList(l191,make_lisp_string("l191")),QIList(l190,make_lisp_string("l190")),QIList(l189,make_lisp_string("l189")),QIList(l188,make_lisp_string("l188")),QIList(l187,make_lisp_string("l187")),QIList(l186,make_lisp_string("l186")),QIList(l185,make_lisp_string("l185")),QIList(l184,make_lisp_string("l184")),QIList(l183,make_lisp_string("l183")),QIList(l182,make_lisp_string("l182")),QIList(l181,make_lisp_string("l181")),QIList(l180,make_lisp_string("l180")),QIList(l179,make_lisp_string("l179")),QIList(l178,make_lisp_string("l178")),QIList(l177,make_lisp_string("l177")),QIList(l176,make_lisp_string("l176")),QIList(l175,make_lisp_string("l175")),QIList(l174,make_lisp_string("l174")),QIList(l173,make_lisp_string("l173")),QIList(l172,make_lisp_string("l172")),QIList(l171,make_lisp_string("l171")),QIList(l170,make_lisp_string("l170")),QIList(l169,make_lisp_string("l169")),QIList(l168,make_lisp_string("l168")),QIList(l167,make_lisp_string("l167")),QIList(l166,make_lisp_string("l166")),QIList(l165,make_lisp_string("l165")),QIList(l164,make_lisp_string("l164")),QIList(l163,make_lisp_string("l163")),QIList(l162,make_lisp_string("l162")),QIList(l161,make_lisp_string("l161")),QIList(l160,make_lisp_string("l160")),QIList(l159,make_lisp_string("l159")),QIList(l158,make_lisp_string("l158")),QIList(l157,make_lisp_string("l157")),QIList(l156,make_lisp_string("l156")),QIList(l155,make_lisp_string("l155")),QIList(l154,make_lisp_string("l154")),QIList(l153,make_lisp_string("l153")),QIList(l152,make_lisp_string("l152")),QIList(l151,make_lisp_string("l151")),QIList(l150,make_lisp_string("l150")),QIList(l149,make_lisp_string("l149")),QIList(l148,make_lisp_string("l148")),QIList(l147,make_lisp_string("l147")),QIList(l146,make_lisp_string("l146")),QIList(l145,make_lisp_string("l145")),QIList(l144,make_lisp_string("l144")),QIList(l143,make_lisp_string("l143")),QIList(l142,make_lisp_string("l142")),QIList(l141,make_lisp_string("l141")),QIList(l140,make_lisp_string("l140")),QIList(l139,make_lisp_string("l139")),QIList(l138,make_lisp_string("l138")),QIList(l137,make_lisp_string("l137")),QIList(l136,make_lisp_string("l136")),QIList(l135,make_lisp_string("l135")),QIList(l134,make_lisp_string("l134")),QIList(l133,make_lisp_string("l133")),QIList(l132,make_lisp_string("l132")),QIList(l131,make_lisp_string("l131")),QIList(l130,make_lisp_string("l130")),QIList(l129,make_lisp_string("l129")),QIList(l128,make_lisp_string("l128")),QIList(l127,make_lisp_string("l127")),QIList(l126,make_lisp_string("l126")),QIList(l125,make_lisp_string("l125")),QIList(l124,make_lisp_string("l124")),QIList(l123,make_lisp_string("l123")),QIList(l122,make_lisp_string("l122")),QIList(l121,make_lisp_string("l121")),QIList(l120,make_lisp_string("l120")),QIList(l119,make_lisp_string("l119")),QIList(l118,make_lisp_string("l118")),QIList(l117,make_lisp_string("l117")),QIList(l116,make_lisp_string("l116")),QIList(l115,make_lisp_string("l115")),QIList(l114,make_lisp_string("l114")),QIList(l113,make_lisp_string("l113")),QIList(l112,make_lisp_string("l112")),QIList(l111,make_lisp_string("l111")),QIList(l110,make_lisp_string("l110")),QIList(l109,make_lisp_string("l109")),QIList(l108,make_lisp_string("l108")),QIList(l107,make_lisp_string("l107")),QIList(l106,make_lisp_string("l106")),QIList(l105,make_lisp_string("l105")),QIList(l104,make_lisp_string("l104")),QIList(l103,make_lisp_string("l103")),QIList(l102,make_lisp_string("l102")),QIList(l101,make_lisp_string("l101")),QIList(l100,make_lisp_string("l100")),QIList(l99,make_lisp_string("l99")),QIList(l98,make_lisp_string("l98")),QIList(l97,make_lisp_string("l97")),QIList(l96,make_lisp_string("l96")),QIList(l95,make_lisp_string("l95")),QIList(l94,make_lisp_string("l94")),QIList(l93,make_lisp_string("l93")),QIList(l92,make_lisp_string("l92")),QIList(l91,make_lisp_string("l91")),QIList(l90,make_lisp_string("l90")),QIList(l89,make_lisp_string("l89")),QIList(l88,make_lisp_string("l88")),QIList(l87,make_lisp_string("l87")),QIList(l86,make_lisp_string("l86")),QIList(l85,make_lisp_string("l85")),QIList(l84,make_lisp_string("l84")),QIList(l83,make_lisp_string("l83")),QIList(l82,make_lisp_string("l82")),QIList(l81,make_lisp_string("l81")),QIList(l80,make_lisp_string("l80")),QIList(l79,make_lisp_string("l79")),QIList(l78,make_lisp_string("l78")),QIList(l77,make_lisp_string("l77")),QIList(l76,make_lisp_string("l76")),QIList(l75,make_lisp_string("l75")),QIList(l74,make_lisp_string("l74")),QIList(l73,make_lisp_string("l73")),QIList(l72,make_lisp_string("l72")),QIList(l71,make_lisp_string("l71")),QIList(l70,make_lisp_string("l70")),QIList(l69,make_lisp_string("l69")),QIList(l68,make_lisp_string("l68")),QIList(l67,make_lisp_string("l67")),QIList(l66,make_lisp_string("l66")),QIList(l65,make_lisp_string("l65")),QIList(l64,make_lisp_string("l64")),QIList(l63,make_lisp_string("l63")),QIList(l62,make_lisp_string("l62")),QIList(l61,make_lisp_string("l61")),QIList(l60,make_lisp_string("l60")),QIList(l59,make_lisp_string("l59")),QIList(l58,make_lisp_string("l58")),QIList(l57,make_lisp_string("l57")),QIList(l56,make_lisp_string("l56")),QIList(l55,make_lisp_string("l55")),QIList(l54,make_lisp_string("l54")),QIList(l53,make_lisp_string("l53")),QIList(l52,make_lisp_string("l52")),QIList(l51,make_lisp_string("l51")),QIList(l50,make_lisp_string("l50")),QIList(l49,make_lisp_string("l49")),QIList(l48,make_lisp_string("l48")),QIList(l47,make_lisp_string("l47")),QIList(l46,make_lisp_string("l46")),QIList(l45,make_lisp_string("l45")),QIList(l44,make_lisp_string("l44")),QIList(l43,make_lisp_string("l43")),QIList(l42,make_lisp_string("l42")),QIList(l41,make_lisp_string("l41")),QIList(l40,make_lisp_string("l40")),QIList(l39,make_lisp_string("l39")),QIList(l38,make_lisp_string("l38")),QIList(l37,make_lisp_string("l37")),QIList(l36,make_lisp_string("l36")),QIList(l35,make_lisp_string("l35")),QIList(l34,make_lisp_string("l34")),QIList(l33,make_lisp_string("l33")),QIList(l32,make_lisp_string("l32")),QIList(l31,make_lisp_string("l31")),QIList(l30,make_lisp_string("l30")),QIList(l29,make_lisp_string("l29")),QIList(l28,make_lisp_string("l28")),QIList(l27,make_lisp_string("l27")),QIList(l26,make_lisp_string("l26")),QIList(l25,make_lisp_string("l25")),QIList(l24,make_lisp_string("l24")),QIList(l23,make_lisp_string("l23")),QIList(l22,make_lisp_string("l22")),QIList(l21,make_lisp_string("l21")),QIList(l20,make_lisp_string("l20")),QIList(l19,make_lisp_string("l19")),QIList(l18,make_lisp_string("l18")),QIList(l17,make_lisp_string("l17")),QIList(l16,make_lisp_string("l16")),QIList(l15,make_lisp_string("l15")),QIList(l14,make_lisp_string("l14")),QIList(l13,make_lisp_string("l13")),QIList(l12,make_lisp_string("l12")),QIList(l11,make_lisp_string("l11")),QIList(l10,make_lisp_string("l10")),QIList(l9,make_lisp_string("l9")),QIList(l8,make_lisp_string("l8")),QIList(l7,make_lisp_string("l7")),QIList(l6,make_lisp_string("l6")),QIList(l5,make_lisp_string("l5")),QIList(l4,make_lisp_string("l4")),QIList(l3,make_lisp_string("l3")),QIList(l2,make_lisp_string("l2")),QIList(l1,make_lisp_string("l1")),l5);
((l659).value = l1312);
((l533).value = 2925);
((l14).value = 17762);
((l660).value = 1312);
